

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Sep 27 09:24:19 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 17/10/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     _ADRESL	set	4035
    94   000000                     _ADRESH	set	4036
    95   000000                     _PORTDbits	set	3971
    96   000000                     _PORTBbits	set	3969
    97   000000                     _PORTCbits	set	3970
    98   000000                     _ADCON0bits	set	4034
    99   000000                     _PORTB	set	3969
   100   000000                     _TRISB	set	3987
   101   000000                     _OSCTUNE	set	3995
   102   000000                     _OSCCON	set	4051
   103   000000                     _ADCON2	set	4032
   104   000000                     _ADCON1	set	4033
   105   000000                     _ADCON0	set	4034
   106   000000                     _TRISEbits	set	3990
   107   000000                     _TRISD	set	3989
   108   000000                     _TRISC	set	3988
   109   000000                     _PORTEbits	set	3972
   110   000000                     _PORTD	set	3971
   111   000000                     _PORTC	set	3970
   112                           
   113                           	psect	smallconst
   114   000600                     __psmallconst:
   115                           	callstack 0
   116   000600  00                 	db	0
   117   000601                     STR_3:
   118   000601  54                 	db	84	;'T'
   119   000602  45                 	db	69	;'E'
   120   000603  4D                 	db	77	;'M'
   121   000604  50                 	db	80	;'P'
   122   000605  3A                 	db	58	;':'
   123   000606  20                 	db	32
   124   000607  20                 	db	32
   125   000608  20                 	db	32
   126   000609  20                 	db	32
   127   00060A  20                 	db	32
   128   00060B  20                 	db	32
   129   00060C  20                 	db	32
   130   00060D  20                 	db	32
   131   00060E  20                 	db	32
   132   00060F  20                 	db	32
   133   000610  20                 	db	32
   134   000611  20                 	db	32
   135   000612  20                 	db	32
   136   000613  20                 	db	32
   137   000614  20                 	db	32
   138   000615  20                 	db	32
   139   000616  20                 	db	32
   140   000617  20                 	db	32
   141   000618  00                 	db	0
   142   000619                     STR_4:
   143   000619  50                 	db	80	;'P'
   144   00061A  45                 	db	69	;'E'
   145   00061B  52                 	db	82	;'R'
   146   00061C  43                 	db	67	;'C'
   147   00061D  45                 	db	69	;'E'
   148   00061E  4E                 	db	78	;'N'
   149   00061F  54                 	db	84	;'T'
   150   000620  3A                 	db	58	;':'
   151   000621  20                 	db	32
   152   000622  20                 	db	32
   153   000623  20                 	db	32
   154   000624  20                 	db	32
   155   000625  20                 	db	32
   156   000626  20                 	db	32
   157   000627  20                 	db	32
   158   000628  20                 	db	32
   159   000629  20                 	db	32
   160   00062A  20                 	db	32
   161   00062B  20                 	db	32
   162   00062C  20                 	db	32
   163   00062D  20                 	db	32
   164   00062E  20                 	db	32
   165   00062F  20                 	db	32
   166   000630  00                 	db	0
   167   000631                     STR_8:
   168   000631  46                 	db	70	;'F'
   169   000632  41                 	db	65	;'A'
   170   000633  4E                 	db	78	;'N'
   171   000634  20                 	db	32
   172   000635  31                 	db	49	;'1'
   173   000636  3A                 	db	58	;':'
   174   000637  20                 	db	32
   175   000638  20                 	db	32
   176   000639  20                 	db	32
   177   00063A  20                 	db	32
   178   00063B  20                 	db	32
   179   00063C  20                 	db	32
   180   00063D  20                 	db	32
   181   00063E  20                 	db	32
   182   00063F  20                 	db	32
   183   000640  20                 	db	32
   184   000641  00                 	db	0
   185   000642                     STR_9:
   186   000642  46                 	db	70	;'F'
   187   000643  41                 	db	65	;'A'
   188   000644  4E                 	db	78	;'N'
   189   000645  20                 	db	32
   190   000646  32                 	db	50	;'2'
   191   000647  3A                 	db	58	;':'
   192   000648  20                 	db	32
   193   000649  20                 	db	32
   194   00064A  20                 	db	32
   195   00064B  20                 	db	32
   196   00064C  20                 	db	32
   197   00064D  20                 	db	32
   198   00064E  20                 	db	32
   199   00064F  20                 	db	32
   200   000650  20                 	db	32
   201   000651  20                 	db	32
   202   000652  00                 	db	0
   203   000653                     STR_10:
   204   000653  52                 	db	82	;'R'
   205   000654  45                 	db	69	;'E'
   206   000655  53                 	db	83	;'S'
   207   000656  31                 	db	49	;'1'
   208   000657  3A                 	db	58	;':'
   209   000658  20                 	db	32
   210   000659  20                 	db	32
   211   00065A  20                 	db	32
   212   00065B  20                 	db	32
   213   00065C  20                 	db	32
   214   00065D  20                 	db	32
   215   00065E  20                 	db	32
   216   00065F  20                 	db	32
   217   000660  20                 	db	32
   218   000661  20                 	db	32
   219   000662  00                 	db	0
   220   000663                     STR_1:
   221   000663  25                 	db	37
   222   000664  30                 	db	48	;'0'
   223   000665  2E                 	db	46
   224   000666  31                 	db	49	;'1'
   225   000667  66                 	db	102	;'f'
   226   000668  25                 	db	37
   227   000669  63                 	db	99	;'c'
   228   00066A  43                 	db	67	;'C'
   229   00066B  00                 	db	0
   230   00066C                     STR_2:
   231   00066C  25                 	db	37
   232   00066D  30                 	db	48	;'0'
   233   00066E  2E                 	db	46
   234   00066F  31                 	db	49	;'1'
   235   000670  66                 	db	102	;'f'
   236   000671  25                 	db	37
   237   000672  63                 	db	99	;'c'
   238   000673  00                 	db	0
   239   000674                     STR_13:
   240   000674  69                 	db	105	;'i'
   241   000675  6E                 	db	110	;'n'
   242   000676  66                 	db	102	;'f'
   243   000677  00                 	db	0
   244   000678                     STR_16:
   245   000678  6E                 	db	110	;'n'
   246   000679  61                 	db	97	;'a'
   247   00067A  6E                 	db	110	;'n'
   248   00067B  00                 	db	0
   249   00067C                     STR_5:
   250   00067C  25                 	db	37
   251   00067D  64                 	db	100	;'d'
   252   00067E  00                 	db	0
   253   00067F  00                 	db	0	; dummy byte at the end
   254   000000                     
   255                           ; #config settings
   256                           
   257                           	psect	cinit
   258   0035B0                     __pcinit:
   259                           	callstack 0
   260   0035B0                     start_initialization:
   261                           	callstack 0
   262   0035B0                     __initialization:
   263                           	callstack 0
   264                           
   265                           ; Clear objects allocated to BANK1 (96 bytes)
   266   0035B0  EE01  F000         	lfsr	0,__pbssBANK1
   267   0035B4  0E60               	movlw	96
   268   0035B6                     clear_0:
   269   0035B6  6AEE               	clrf	postinc0,c
   270   0035B8  06E8               	decf	wreg,f,c
   271   0035BA  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to BANK0 (64 bytes)
   274   0035BC  EE00  F080         	lfsr	0,__pbssBANK0
   275   0035C0  0E40               	movlw	64
   276   0035C2                     clear_1:
   277   0035C2  6AEE               	clrf	postinc0,c
   278   0035C4  06E8               	decf	wreg,f,c
   279   0035C6  E1FD               	bnz	clear_1
   280                           
   281                           ; Clear objects allocated to COMRAM (9 bytes)
   282   0035C8  EE00  F077         	lfsr	0,__pbssCOMRAM
   283   0035CC  0E09               	movlw	9
   284   0035CE                     clear_2:
   285   0035CE  6AEE               	clrf	postinc0,c
   286   0035D0  06E8               	decf	wreg,f,c
   287   0035D2  E1FD               	bnz	clear_2
   288   0035D4                     end_of_initialization:
   289                           	callstack 0
   290   0035D4                     __end_of__initialization:
   291                           	callstack 0
   292   0035D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   293   0035D6  6EF8               	movwf	tblptru,c
   294   0035D8  0100               	movlb	0
   295   0035DA  EFC3  F019         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssCOMRAM
   298   000077                     __pbssCOMRAM:
   299                           	callstack 0
   300   000077                     _sensor_temp:
   301                           	callstack 0
   302   000077                     	ds	4
   303   00007B                     _prec:
   304                           	callstack 0
   305   00007B                     	ds	2
   306   00007D                     _VdigADC_AN3:
   307                           	callstack 0
   308   00007D                     	ds	2
   309   00007F                     _flags:
   310                           	callstack 0
   311   00007F                     	ds	1
   312                           
   313                           	psect	bssBANK0
   314   000080                     __pbssBANK0:
   315                           	callstack 0
   316   000080                     floorf@F521:
   317                           	callstack 0
   318   000080                     	ds	4
   319   000084                     ___fpclassifyf@F465:
   320                           	callstack 0
   321   000084                     	ds	4
   322   000088                     _percent:
   323                           	callstack 0
   324   000088                     	ds	4
   325   00008C                     _sensor_tensao:
   326                           	callstack 0
   327   00008C                     	ds	4
   328   000090                     _width:
   329                           	callstack 0
   330   000090                     	ds	2
   331   000092                     _RES1:
   332                           	callstack 0
   333   000092                     	ds	2
   334   000094                     _FAN2:
   335                           	callstack 0
   336   000094                     	ds	2
   337   000096                     _FAN1:
   338                           	callstack 0
   339   000096                     	ds	2
   340   000098                     _string_temp:
   341                           	callstack 0
   342   000098                     	ds	16
   343   0000A8                     _string_RES1:
   344                           	callstack 0
   345   0000A8                     	ds	8
   346   0000B0                     _string_FAN2:
   347                           	callstack 0
   348   0000B0                     	ds	8
   349   0000B8                     _string_FAN1:
   350                           	callstack 0
   351   0000B8                     	ds	8
   352                           
   353                           	psect	bssBANK1
   354   000100                     __pbssBANK1:
   355                           	callstack 0
   356   000100                     _dbuf:
   357                           	callstack 0
   358   000100                     	ds	80
   359   000150                     _string_percent:
   360                           	callstack 0
   361   000150                     	ds	16
   362                           
   363                           	psect	cstackBANK0
   364   0000C0                     __pcstackBANK0:
   365                           	callstack 0
   366   0000C0                     efgtoa@ne:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x0
   370   0000C0                     	ds	2
   371   0000C2                     efgtoa@p:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x2
   375   0000C2                     	ds	2
   376   0000C4                     efgtoa@t:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x4
   380   0000C4                     	ds	2
   381   0000C6                     _efgtoa$1155:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x6
   385   0000C6                     	ds	2
   386   0000C8                     efgtoa@pp:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x8
   390   0000C8                     	ds	1
   391   0000C9                     efgtoa@mode:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x9
   395   0000C9                     	ds	1
   396   0000CA                     efgtoa@nmode:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0xA
   400   0000CA                     	ds	1
   401   0000CB                     efgtoa@d:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0xB
   405   0000CB                     	ds	2
   406   0000CD                     efgtoa@m:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0xD
   410   0000CD                     	ds	2
   411   0000CF                     efgtoa@e:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0xF
   415   0000CF                     	ds	2
   416   0000D1                     efgtoa@ou:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x11
   420   0000D1                     	ds	4
   421   0000D5                     efgtoa@w:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x15
   425   0000D5                     	ds	2
   426   0000D7                     efgtoa@h:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x17
   430   0000D7                     	ds	4
   431   0000DB                     efgtoa@l:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x1B
   435   0000DB                     	ds	4
   436   0000DF                     efgtoa@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x1F
   440   0000DF                     	ds	2
   441   0000E1                     efgtoa@sign:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x21
   445   0000E1                     	ds	1
   446   0000E2                     efgtoa@g:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x22
   450   0000E2                     	ds	4
   451   0000E6                     efgtoa@n:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x26
   455   0000E6                     	ds	2
   456   0000E8                     efgtoa@u:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x28
   460   0000E8                     	ds	4
   461   0000EC                     ?_vfprintf:
   462                           	callstack 0
   463   0000EC                     vfprintf@fp:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x2C
   467   0000EC                     	ds	1
   468   0000ED                     vfprintf@fmt:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x2D
   472   0000ED                     	ds	1
   473   0000EE                     vfprintf@ap:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x2E
   477   0000EE                     	ds	1
   478   0000EF                     ?_sprintf:
   479                           	callstack 0
   480   0000EF                     sprintf@s:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x2F
   484   0000EF                     	ds	2
   485   0000F1                     sprintf@fmt:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x31
   489   0000F1                     	ds	7
   490                           
   491                           	psect	cstackCOMRAM
   492   000001                     __pcstackCOMRAM:
   493                           	callstack 0
   494   000001                     ??_conv_AN3:
   495   000001                     ?___fpclassifyf:
   496                           	callstack 0
   497   000001                     ?___wmul:
   498                           	callstack 0
   499   000001                     ?___awdiv:
   500                           	callstack 0
   501   000001                     ?___awmod:
   502                           	callstack 0
   503   000001                     ?___fladd:
   504                           	callstack 0
   505   000001                     ?_labs:
   506                           	callstack 0
   507   000001                     ?___flneg:
   508                           	callstack 0
   509   000001                     ?___fltol:
   510                           	callstack 0
   511   000001                     ?___xxtofl:
   512                           	callstack 0
   513   000001                     set_bit@comp:
   514                           	callstack 0
   515   000001                     ___wmul@multiplier:
   516                           	callstack 0
   517   000001                     ___awdiv@dividend:
   518                           	callstack 0
   519   000001                     ___awmod@dividend:
   520                           	callstack 0
   521   000001                     memcpy@d1:
   522                           	callstack 0
   523   000001                     fputc@c:
   524                           	callstack 0
   525   000001                     strcpy@dest:
   526                           	callstack 0
   527   000001                     ___fleq@ff1:
   528                           	callstack 0
   529   000001                     ___flneg@f1:
   530                           	callstack 0
   531   000001                     ___fltol@f1:
   532                           	callstack 0
   533   000001                     ___fladd@b:
   534                           	callstack 0
   535   000001                     ___xxtofl@val:
   536                           	callstack 0
   537   000001                     ___fpclassifyf@x:
   538                           	callstack 0
   539   000001                     labs@a:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x0
   543   000001                     	ds	1
   544   000002                     set_bit@cmd:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x1
   548   000002                     	ds	1
   549   000003                     ??_lcd_cmd:
   550   000003                     fputc@fp:
   551                           	callstack 0
   552   000003                     strcpy@src:
   553                           	callstack 0
   554   000003                     ___wmul@multiplicand:
   555                           	callstack 0
   556   000003                     ___awdiv@divisor:
   557                           	callstack 0
   558   000003                     ___awmod@divisor:
   559                           	callstack 0
   560   000003                     memcpy@s1:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x2
   564   000003                     	ds	1
   565   000004                     ??_fputc:
   566   000004                     ??_strcpy:
   567   000004                     lcd_cmd@cmd:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x3
   571   000004                     	ds	1
   572   000005                     ??_lcd_init:
   573   000005                     ??___fpclassifyf:
   574   000005                     ??_labs:
   575   000005                     ??___fltol:
   576   000005                     ??___xxtofl:
   577   000005                     lcd_send_byte@data:
   578                           	callstack 0
   579   000005                     ___awdiv@counter:
   580                           	callstack 0
   581   000005                     ___awmod@counter:
   582                           	callstack 0
   583   000005                     ___wmul@product:
   584                           	callstack 0
   585   000005                     memcpy@n:
   586                           	callstack 0
   587   000005                     strcpy@d:
   588                           	callstack 0
   589   000005                     ___fleq@ff2:
   590                           	callstack 0
   591   000005                     ___fladd@a:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x4
   595   000005                     	ds	1
   596   000006                     lcd_init@i:
   597                           	callstack 0
   598   000006                     lcd_send_byte@level:
   599                           	callstack 0
   600   000006                     ___awdiv@sign:
   601                           	callstack 0
   602   000006                     ___awmod@sign:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x5
   606   000006                     	ds	1
   607   000007                     ?_abs:
   608                           	callstack 0
   609   000007                     ?_read_prec_or_width:
   610                           	callstack 0
   611   000007                     lcd_write@col:
   612                           	callstack 0
   613   000007                     read_prec_or_width@fmt:
   614                           	callstack 0
   615   000007                     memcpy@tmp:
   616                           	callstack 0
   617   000007                     ___awdiv@quotient:
   618                           	callstack 0
   619   000007                     abs@a:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x6
   623   000007                     	ds	1
   624   000008                     read_prec_or_width@ap:
   625                           	callstack 0
   626   000008                     lcd_write@str:
   627                           	callstack 0
   628   000008                     memcpy@d:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x7
   632   000008                     	ds	1
   633   000009                     ??___fladd:
   634   000009                     ??_abs:
   635   000009                     ??___fleq:
   636   000009                     ___fltol@sign1:
   637                           	callstack 0
   638   000009                     ___xxtofl@sign:
   639                           	callstack 0
   640   000009                     read_prec_or_width@c:
   641                           	callstack 0
   642   000009                     ___fpclassifyf@e:
   643                           	callstack 0
   644   000009                     fputs@s:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x8
   648   000009                     	ds	1
   649   00000A                     lcd_write@end:
   650                           	callstack 0
   651   00000A                     ___fltol@exp1:
   652                           	callstack 0
   653   00000A                     ___xxtofl@exp:
   654                           	callstack 0
   655   00000A                     read_prec_or_width@n:
   656                           	callstack 0
   657   00000A                     memcpy@s:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x9
   661   00000A                     	ds	1
   662   00000B                     lcd_write@lin:
   663                           	callstack 0
   664   00000B                     fputs@fp:
   665                           	callstack 0
   666   00000B                     ___xxtofl@arg:
   667                           	callstack 0
   668   00000B                     ___fpclassifyf@u:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0xA
   672   00000B                     	ds	1
   673   00000C                     fputs@c:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0xB
   677   00000C                     	ds	1
   678   00000D                     ___fladd@signs:
   679                           	callstack 0
   680   00000D                     fputs@i:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0xC
   684   00000D                     	ds	1
   685   00000E                     ___fladd@aexp:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0xD
   689   00000E                     	ds	1
   690   00000F                     ?___flmul:
   691                           	callstack 0
   692   00000F                     ___fladd@bexp:
   693                           	callstack 0
   694   00000F                     pad@fp:
   695                           	callstack 0
   696   00000F                     ___flmul@b:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0xE
   700   00000F                     	ds	1
   701   000010                     ___fladd@grs:
   702                           	callstack 0
   703   000010                     pad@buf:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0xF
   707   000010                     	ds	2
   708   000012                     pad@p:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x11
   712   000012                     	ds	1
   713   000013                     ___flmul@a:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x12
   717   000013                     	ds	1
   718   000014                     ??_pad:
   719                           
   720                           ; 1 bytes @ 0x13
   721   000014                     	ds	1
   722   000015                     pad@i:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x14
   726   000015                     	ds	2
   727   000017                     ??___flmul:
   728   000017                     dtoa@fp:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x16
   732   000017                     	ds	1
   733   000018                     dtoa@d:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x17
   737   000018                     	ds	2
   738   00001A                     _dtoa$1124:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x19
   742   00001A                     	ds	1
   743   00001B                     ___flmul@sign:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x1A
   747   00001B                     	ds	1
   748   00001C                     dtoa@p:
   749                           	callstack 0
   750   00001C                     ___flmul@grs:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x1B
   754   00001C                     	ds	2
   755   00001E                     dtoa@w:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x1D
   759   00001E                     	ds	2
   760   000020                     ___flmul@aexp:
   761                           	callstack 0
   762   000020                     dtoa@s:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x1F
   766   000020                     	ds	1
   767   000021                     ___flmul@bexp:
   768                           	callstack 0
   769   000021                     dtoa@i:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x20
   773   000021                     	ds	1
   774   000022                     ___flmul@prod:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x21
   778   000022                     	ds	4
   779   000026                     ___flmul@temp:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x25
   783   000026                     	ds	2
   784   000028                     ?___fldiv:
   785                           	callstack 0
   786   000028                     ?___flsub:
   787                           	callstack 0
   788   000028                     ___flge@ff1:
   789                           	callstack 0
   790   000028                     ___flsub@b:
   791                           	callstack 0
   792   000028                     ___fldiv@b:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x27
   796   000028                     	ds	4
   797   00002C                     ___flge@ff2:
   798                           	callstack 0
   799   00002C                     ___flsub@a:
   800                           	callstack 0
   801   00002C                     ___fldiv@a:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x2B
   805   00002C                     	ds	4
   806   000030                     ??___fldiv:
   807   000030                     ??___flge:
   808                           
   809                           ; 1 bytes @ 0x2F
   810   000030                     	ds	4
   811   000034                     ___fldiv@rem:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x33
   815   000034                     	ds	4
   816   000038                     ___fldiv@sign:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x37
   820   000038                     	ds	1
   821   000039                     ___fldiv@new_exp:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x38
   825   000039                     	ds	2
   826   00003B                     ___fldiv@grs:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x3A
   830   00003B                     	ds	4
   831   00003F                     ___fldiv@bexp:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x3E
   835   00003F                     	ds	1
   836   000040                     ___fldiv@aexp:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x3F
   840   000040                     	ds	1
   841   000041                     ?_floorf:
   842                           	callstack 0
   843   000041                     floorf@x:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x40
   847   000041                     	ds	4
   848   000045                     ??_floorf:
   849                           
   850                           ; 1 bytes @ 0x44
   851   000045                     	ds	6
   852   00004B                     floorf@m:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x4A
   856   00004B                     	ds	4
   857   00004F                     floorf@e:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x4E
   861   00004F                     	ds	2
   862   000051                     floorf@u:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x50
   866   000051                     	ds	4
   867   000055                     efgtoa@fp:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x54
   871   000055                     	ds	1
   872   000056                     efgtoa@f:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x55
   876   000056                     	ds	4
   877   00005A                     efgtoa@c:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x59
   881   00005A                     	ds	1
   882   00005B                     ??_efgtoa:
   883                           
   884                           ; 1 bytes @ 0x5A
   885   00005B                     	ds	2
   886   00005D                     vfpfcnvrt@fp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x5C
   890   00005D                     	ds	1
   891   00005E                     vfpfcnvrt@fmt:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x5D
   895   00005E                     	ds	1
   896   00005F                     vfpfcnvrt@ap:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x5E
   900   00005F                     	ds	1
   901   000060                     ??_vfpfcnvrt:
   902                           
   903                           ; 1 bytes @ 0x5F
   904   000060                     	ds	1
   905   000061                     vfpfcnvrt@done:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x60
   909   000061                     	ds	1
   910   000062                     vfpfcnvrt@convarg:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x61
   914   000062                     	ds	4
   915   000066                     vfpfcnvrt@c:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x65
   919   000066                     	ds	1
   920   000067                     vfpfcnvrt@cp:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x66
   924   000067                     	ds	1
   925   000068                     vfprintf@cfmt:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x67
   929   000068                     	ds	1
   930   000069                     sprintf@ap:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x68
   934   000069                     	ds	1
   935   00006A                     sprintf@f:
   936                           	callstack 0
   937                           
   938                           ; 12 bytes @ 0x69
   939   00006A                     	ds	12
   940   000076                     ??_LCD_tela1:
   941   000076                     ??_LCD_tela2:
   942                           
   943                           ; 1 bytes @ 0x75
   944   000076                     	ds	1
   945   000077                     
   946                           ; 1 bytes @ 0x76
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 191 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   966 ;;      Params:         0       0       0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels required when called: 9
   972 ;; This function calls:
   973 ;;		_LCD_tela1
   974 ;;		_LCD_tela2
   975 ;;		_config_ADC
   976 ;;		_config_FOSC
   977 ;;		_config_IO
   978 ;;		_conv_AN3
   979 ;;		_conv_TEMP
   980 ;;		_lcd_init
   981 ;;		_logica_controle
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text0
   988   003386                     __ptext0:
   989                           	callstack 0
   990   003386                     _main:
   991                           	callstack 22
   992   003386                     
   993                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 193:     config_FOSC();
   994   003386  EC48  F01B         	call	_config_FOSC	;wreg free
   995                           
   996                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 194:     config_IO();
   997   00338A  EC38  F01B         	call	_config_IO	;wreg free
   998                           
   999                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 195:     config_ADC();
  1000   00338E  EC41  F01B         	call	_config_ADC	;wreg free
  1001   003392                     
  1002                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 196:     lcd_init();
  1003   003392  ECEE  F018         	call	_lcd_init	;wreg free
  1004   003396                     l4371:
  1005                           
  1006                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 199:     {;C:/Users/gabri/
      +                          Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 200:         conv_AN3();
  1007   003396  ECBF  F01A         	call	_conv_AN3	;wreg free
  1008   00339A                     
  1009                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 201:         conv_TEMP();
  1010   00339A  ECB4  F015         	call	_conv_TEMP	;wreg free
  1011   00339E                     
  1012                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 202:         logica_contro
      +                          le();
  1013   00339E  EC27  F011         	call	_logica_controle	;wreg free
  1014   0033A2                     
  1015                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 204:         if(PORTBbits.
      +                          RB0 == 0) {
  1016   0033A2  B081               	btfsc	129,0,c	;volatile
  1017   0033A4  EFD6  F019         	goto	u5081
  1018   0033A8  EFD8  F019         	goto	u5080
  1019   0033AC                     u5081:
  1020   0033AC  EFDC  F019         	goto	l102
  1021   0033B0                     u5080:
  1022   0033B0                     
  1023                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 205:             LCD_tela1
      +                          ();
  1024   0033B0  EC44  F017         	call	_LCD_tela1	;wreg free
  1025                           
  1026                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 206:         }
  1027   0033B4  EFCB  F019         	goto	l4371
  1028   0033B8                     l102:
  1029   0033B8  A081               	btfss	129,0,c	;volatile
  1030   0033BA  EFE1  F019         	goto	u5091
  1031   0033BE  EFE3  F019         	goto	u5090
  1032   0033C2                     u5091:
  1033   0033C2  EFCB  F019         	goto	l4371
  1034   0033C6                     u5090:
  1035   0033C6                     
  1036                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 208:             LCD_tela2
      +                          ();
  1037   0033C6  EC1E  F016         	call	_LCD_tela2	;wreg free
  1038   0033CA  EFCB  F019         	goto	l4371
  1039   0033CE  EF00  F000         	goto	start
  1040   0033D2                     __end_of_main:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _logica_controle *****************
  1044 ;; Defined at:
  1045 ;;		line 122 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1059 ;;      Params:         0       0       0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 1
  1066 ;; This function calls:
  1067 ;;		___flge
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text1
  1074   00224E                     __ptext1:
  1075                           	callstack 0
  1076   00224E                     _logica_controle:
  1077                           	callstack 29
  1078   00224E                     
  1079                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 124:     if(sensor_temp <=
      +                           (0.25*420))
  1080   00224E  0E00               	movlw	0
  1081   002250  6E28               	movwf	___flge@ff1^0,c
  1082   002252  0E00               	movlw	0
  1083   002254  6E29               	movwf	(___flge@ff1+1)^0,c
  1084   002256  0ED2               	movlw	210
  1085   002258  6E2A               	movwf	(___flge@ff1+2)^0,c
  1086   00225A  0E42               	movlw	66
  1087   00225C  6E2B               	movwf	(___flge@ff1+3)^0,c
  1088   00225E  C077  F02C         	movff	_sensor_temp,___flge@ff2
  1089   002262  C078  F02D         	movff	_sensor_temp+1,___flge@ff2+1
  1090   002266  C079  F02E         	movff	_sensor_temp+2,___flge@ff2+2
  1091   00226A  C07A  F02F         	movff	_sensor_temp+3,___flge@ff2+3
  1092   00226E  EC41  F014         	call	___flge	;wreg free
  1093   002272  A0D8               	btfss	status,0,c
  1094   002274  EF3E  F011         	goto	u4361
  1095   002278  EF40  F011         	goto	u4360
  1096   00227C                     u4361:
  1097   00227C  EF4F  F011         	goto	l3781
  1098   002280                     u4360:
  1099   002280                     
  1100                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 125:     {;C:/Users/gabri/
      +                          Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 126:         FAN1 = 0;
  1101   002280  0E00               	movlw	0
  1102   002282  0100               	movlb	0	; () banked
  1103   002284  6F97               	movwf	(_FAN1+1)& (0+255),b
  1104   002286  0E00               	movlw	0
  1105   002288  6F96               	movwf	_FAN1& (0+255),b
  1106                           
  1107                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 127:         FAN2 = 0;
  1108   00228A  0E00               	movlw	0
  1109   00228C  6F95               	movwf	(_FAN2+1)& (0+255),b
  1110   00228E  0E00               	movlw	0
  1111   002290  6F94               	movwf	_FAN2& (0+255),b
  1112                           
  1113                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 128:         RES1 = 1;
  1114   002292  0E00               	movlw	0
  1115   002294  6F93               	movwf	(_RES1+1)& (0+255),b
  1116   002296  0E01               	movlw	1
  1117   002298  6F92               	movwf	_RES1& (0+255),b
  1118                           
  1119                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 129:     }
  1120   00229A  EFF9  F011         	goto	l3797
  1121   00229E                     l3781:
  1122   00229E  0E00               	movlw	0
  1123   0022A0  6E28               	movwf	___flge@ff1^0,c
  1124   0022A2  0E00               	movlw	0
  1125   0022A4  6E29               	movwf	(___flge@ff1+1)^0,c
  1126   0022A6  0ED2               	movlw	210
  1127   0022A8  6E2A               	movwf	(___flge@ff1+2)^0,c
  1128   0022AA  0E42               	movlw	66
  1129   0022AC  6E2B               	movwf	(___flge@ff1+3)^0,c
  1130   0022AE  C077  F02C         	movff	_sensor_temp,___flge@ff2
  1131   0022B2  C078  F02D         	movff	_sensor_temp+1,___flge@ff2+1
  1132   0022B6  C079  F02E         	movff	_sensor_temp+2,___flge@ff2+2
  1133   0022BA  C07A  F02F         	movff	_sensor_temp+3,___flge@ff2+3
  1134   0022BE  EC41  F014         	call	___flge	;wreg free
  1135   0022C2  B0D8               	btfsc	status,0,c
  1136   0022C4  EF66  F011         	goto	u4371
  1137   0022C8  EF68  F011         	goto	u4370
  1138   0022CC                     u4371:
  1139   0022CC  EF90  F011         	goto	l3787
  1140   0022D0                     u4370:
  1141   0022D0  0E00               	movlw	0
  1142   0022D2  6E28               	movwf	___flge@ff1^0,c
  1143   0022D4  0E00               	movlw	0
  1144   0022D6  6E29               	movwf	(___flge@ff1+1)^0,c
  1145   0022D8  0E52               	movlw	82
  1146   0022DA  6E2A               	movwf	(___flge@ff1+2)^0,c
  1147   0022DC  0E43               	movlw	67
  1148   0022DE  6E2B               	movwf	(___flge@ff1+3)^0,c
  1149   0022E0  C077  F02C         	movff	_sensor_temp,___flge@ff2
  1150   0022E4  C078  F02D         	movff	_sensor_temp+1,___flge@ff2+1
  1151   0022E8  C079  F02E         	movff	_sensor_temp+2,___flge@ff2+2
  1152   0022EC  C07A  F02F         	movff	_sensor_temp+3,___flge@ff2+3
  1153   0022F0  EC41  F014         	call	___flge	;wreg free
  1154   0022F4  A0D8               	btfss	status,0,c
  1155   0022F6  EF7F  F011         	goto	u4381
  1156   0022FA  EF81  F011         	goto	u4380
  1157   0022FE                     u4381:
  1158   0022FE  EF90  F011         	goto	l3787
  1159   002302                     u4380:
  1160   002302                     
  1161                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 131:     {;C:/Users/gabri/
      +                          Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 132:         FAN1 = 1;
  1162   002302  0E00               	movlw	0
  1163   002304  0100               	movlb	0	; () banked
  1164   002306  6F97               	movwf	(_FAN1+1)& (0+255),b
  1165   002308  0E01               	movlw	1
  1166   00230A  6F96               	movwf	_FAN1& (0+255),b
  1167                           
  1168                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 133:         FAN2 = 0;
  1169   00230C  0E00               	movlw	0
  1170   00230E  6F95               	movwf	(_FAN2+1)& (0+255),b
  1171   002310  0E00               	movlw	0
  1172   002312  6F94               	movwf	_FAN2& (0+255),b
  1173                           
  1174                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 134:         RES1 = 1;
  1175   002314  0E00               	movlw	0
  1176   002316  6F93               	movwf	(_RES1+1)& (0+255),b
  1177   002318  0E01               	movlw	1
  1178   00231A  6F92               	movwf	_RES1& (0+255),b
  1179                           
  1180                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 135:     }
  1181   00231C  EFF9  F011         	goto	l3797
  1182   002320                     l3787:
  1183   002320  0E00               	movlw	0
  1184   002322  6E28               	movwf	___flge@ff1^0,c
  1185   002324  0E00               	movlw	0
  1186   002326  6E29               	movwf	(___flge@ff1+1)^0,c
  1187   002328  0E52               	movlw	82
  1188   00232A  6E2A               	movwf	(___flge@ff1+2)^0,c
  1189   00232C  0E43               	movlw	67
  1190   00232E  6E2B               	movwf	(___flge@ff1+3)^0,c
  1191   002330  C077  F02C         	movff	_sensor_temp,___flge@ff2
  1192   002334  C078  F02D         	movff	_sensor_temp+1,___flge@ff2+1
  1193   002338  C079  F02E         	movff	_sensor_temp+2,___flge@ff2+2
  1194   00233C  C07A  F02F         	movff	_sensor_temp+3,___flge@ff2+3
  1195   002340  EC41  F014         	call	___flge	;wreg free
  1196   002344  B0D8               	btfsc	status,0,c
  1197   002346  EFA7  F011         	goto	u4391
  1198   00234A  EFA9  F011         	goto	u4390
  1199   00234E                     u4391:
  1200   00234E  EFD1  F011         	goto	l3793
  1201   002352                     u4390:
  1202   002352  0E00               	movlw	0
  1203   002354  6E28               	movwf	___flge@ff1^0,c
  1204   002356  0E80               	movlw	128
  1205   002358  6E29               	movwf	(___flge@ff1+1)^0,c
  1206   00235A  0E9D               	movlw	157
  1207   00235C  6E2A               	movwf	(___flge@ff1+2)^0,c
  1208   00235E  0E43               	movlw	67
  1209   002360  6E2B               	movwf	(___flge@ff1+3)^0,c
  1210   002362  C077  F02C         	movff	_sensor_temp,___flge@ff2
  1211   002366  C078  F02D         	movff	_sensor_temp+1,___flge@ff2+1
  1212   00236A  C079  F02E         	movff	_sensor_temp+2,___flge@ff2+2
  1213   00236E  C07A  F02F         	movff	_sensor_temp+3,___flge@ff2+3
  1214   002372  EC41  F014         	call	___flge	;wreg free
  1215   002376  A0D8               	btfss	status,0,c
  1216   002378  EFC0  F011         	goto	u4401
  1217   00237C  EFC2  F011         	goto	u4400
  1218   002380                     u4401:
  1219   002380  EFD1  F011         	goto	l3793
  1220   002384                     u4400:
  1221   002384                     
  1222                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 137:     {;C:/Users/gabri/
      +                          Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 138:         FAN1 = 1;
  1223   002384  0E00               	movlw	0
  1224   002386  0100               	movlb	0	; () banked
  1225   002388  6F97               	movwf	(_FAN1+1)& (0+255),b
  1226   00238A  0E01               	movlw	1
  1227   00238C  6F96               	movwf	_FAN1& (0+255),b
  1228                           
  1229                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 139:         FAN2 = 1;
  1230   00238E  0E00               	movlw	0
  1231   002390  6F95               	movwf	(_FAN2+1)& (0+255),b
  1232   002392  0E01               	movlw	1
  1233   002394  6F94               	movwf	_FAN2& (0+255),b
  1234                           
  1235                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 140:         RES1 = 1;
  1236   002396  0E00               	movlw	0
  1237   002398  6F93               	movwf	(_RES1+1)& (0+255),b
  1238   00239A  0E01               	movlw	1
  1239   00239C  6F92               	movwf	_RES1& (0+255),b
  1240                           
  1241                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 141:     }
  1242   00239E  EFF9  F011         	goto	l3797
  1243   0023A2                     l3793:
  1244   0023A2  0E00               	movlw	0
  1245   0023A4  6E28               	movwf	___flge@ff1^0,c
  1246   0023A6  0E80               	movlw	128
  1247   0023A8  6E29               	movwf	(___flge@ff1+1)^0,c
  1248   0023AA  0E9D               	movlw	157
  1249   0023AC  6E2A               	movwf	(___flge@ff1+2)^0,c
  1250   0023AE  0E43               	movlw	67
  1251   0023B0  6E2B               	movwf	(___flge@ff1+3)^0,c
  1252   0023B2  C077  F02C         	movff	_sensor_temp,___flge@ff2
  1253   0023B6  C078  F02D         	movff	_sensor_temp+1,___flge@ff2+1
  1254   0023BA  C079  F02E         	movff	_sensor_temp+2,___flge@ff2+2
  1255   0023BE  C07A  F02F         	movff	_sensor_temp+3,___flge@ff2+3
  1256   0023C2  EC41  F014         	call	___flge	;wreg free
  1257   0023C6  B0D8               	btfsc	status,0,c
  1258   0023C8  EFE8  F011         	goto	u4411
  1259   0023CC  EFEA  F011         	goto	u4410
  1260   0023D0                     u4411:
  1261   0023D0  EFF9  F011         	goto	l86
  1262   0023D4                     u4410:
  1263   0023D4                     
  1264                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 143:     {;C:/Users/gabri/
      +                          Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 144:         FAN1 = 1;
  1265   0023D4  0E00               	movlw	0
  1266   0023D6  0100               	movlb	0	; () banked
  1267   0023D8  6F97               	movwf	(_FAN1+1)& (0+255),b
  1268   0023DA  0E01               	movlw	1
  1269   0023DC  6F96               	movwf	_FAN1& (0+255),b
  1270                           
  1271                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 145:         FAN2 = 1;
  1272   0023DE  0E00               	movlw	0
  1273   0023E0  6F95               	movwf	(_FAN2+1)& (0+255),b
  1274   0023E2  0E01               	movlw	1
  1275   0023E4  6F94               	movwf	_FAN2& (0+255),b
  1276                           
  1277                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 146:         RES1 = 0;
  1278   0023E6  0E00               	movlw	0
  1279   0023E8  6F93               	movwf	(_RES1+1)& (0+255),b
  1280   0023EA  0E00               	movlw	0
  1281   0023EC  6F92               	movwf	_RES1& (0+255),b
  1282   0023EE  EFF9  F011         	goto	l3797
  1283   0023F2                     l86:
  1284   0023F2                     l3797:
  1285                           
  1286                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 149:     PORTCbits.RC0 = F
      +                          AN1;
  1287   0023F2  0100               	movlb	0	; () banked
  1288   0023F4  B196               	btfsc	_FAN1& (0+255),0,b
  1289   0023F6  D002               	bra	u4425
  1290   0023F8  9082               	bcf	130,0,c	;volatile
  1291   0023FA  D001               	bra	u4426
  1292   0023FC                     u4425:
  1293   0023FC  8082               	bsf	130,0,c	;volatile
  1294   0023FE                     u4426:
  1295   0023FE                     
  1296                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 150:     PORTCbits.RC1 = F
      +                          AN2;
  1297   0023FE  0100               	movlb	0	; () banked
  1298   002400  B194               	btfsc	_FAN2& (0+255),0,b
  1299   002402  D002               	bra	u4435
  1300   002404  9282               	bcf	130,1,c	;volatile
  1301   002406  D001               	bra	u4436
  1302   002408                     u4435:
  1303   002408  8282               	bsf	130,1,c	;volatile
  1304   00240A                     u4436:
  1305   00240A                     
  1306                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 151:     PORTCbits.RC2 = R
      +                          ES1;
  1307   00240A  0100               	movlb	0	; () banked
  1308   00240C  B192               	btfsc	_RES1& (0+255),0,b
  1309   00240E  D002               	bra	u4445
  1310   002410  9482               	bcf	130,2,c	;volatile
  1311   002412  D001               	bra	u4446
  1312   002414                     u4445:
  1313   002414  8482               	bsf	130,2,c	;volatile
  1314   002416                     u4446:
  1315   002416  0012               	return		;funcret
  1316   002418                     __end_of_logica_controle:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _lcd_init *****************
  1320 ;; Defined at:
  1321 ;;		line 3 in file "LCD4b_EXSTO.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  i               1    5[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1335 ;;      Params:         0       0       0       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0       0       0
  1337 ;;      Temps:          1       0       0       0       0       0       0
  1338 ;;      Totals:         2       0       0       0       0       0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 2
  1342 ;; This function calls:
  1343 ;;		_lcd_cmd
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text2
  1350   0031DC                     __ptext2:
  1351                           	callstack 0
  1352   0031DC                     _lcd_init:
  1353                           	callstack 28
  1354   0031DC                     
  1355                           ;LCD4b_EXSTO.c: 5:     char i;;LCD4b_EXSTO.c: 7:     TRISD = 0b00000000;
  1356   0031DC  0E00               	movlw	0
  1357   0031DE  6E95               	movwf	149,c	;volatile
  1358   0031E0                     
  1359                           ;LCD4b_EXSTO.c: 8:     TRISEbits.TRISE2 = 0;
  1360   0031E0  9496               	bcf	150,2,c	;volatile
  1361   0031E2                     
  1362                           ;LCD4b_EXSTO.c: 9:     TRISEbits.TRISE1 = 0;
  1363   0031E2  9296               	bcf	150,1,c	;volatile
  1364   0031E4                     
  1365                           ;LCD4b_EXSTO.c: 10:     TRISEbits.TRISE0 = 0;
  1366   0031E4  9096               	bcf	150,0,c	;volatile
  1367                           
  1368                           ;LCD4b_EXSTO.c: 11:     PORTD = 0b00000000;
  1369   0031E6  0E00               	movlw	0
  1370   0031E8  6E83               	movwf	131,c	;volatile
  1371   0031EA                     
  1372                           ;LCD4b_EXSTO.c: 12:     PORTEbits.RE0 = 0;
  1373   0031EA  9084               	bcf	132,0,c	;volatile
  1374   0031EC                     
  1375                           ;LCD4b_EXSTO.c: 13:     PORTEbits.RE1 = 0;
  1376   0031EC  9284               	bcf	132,1,c	;volatile
  1377   0031EE                     
  1378                           ;LCD4b_EXSTO.c: 14:     PORTEbits.RE2 = 0;
  1379   0031EE  9484               	bcf	132,2,c	;volatile
  1380   0031F0                     
  1381                           ;LCD4b_EXSTO.c: 16:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1382   0031F0  0E27               	movlw	39
  1383   0031F2  6E05               	movwf	??_lcd_init^0,c
  1384   0031F4  0EF5               	movlw	245
  1385   0031F6                     u5107:
  1386   0031F6  2EE8               	decfsz	wreg,f,c
  1387   0031F8  D7FE               	bra	u5107
  1388   0031FA  2E05               	decfsz	??_lcd_init^0,f,c
  1389   0031FC  D7FC               	bra	u5107
  1390   0031FE  0000               	nop	
  1391   003200                     
  1392                           ;LCD4b_EXSTO.c: 18:     for(i=0;i<=2;i++)
  1393   003200  0E00               	movlw	0
  1394   003202  6E06               	movwf	lcd_init@i^0,c
  1395   003204                     l3857:
  1396                           
  1397                           ;LCD4b_EXSTO.c: 19:     {;LCD4b_EXSTO.c: 20:         lcd_cmd(0x30);
  1398   003204  0E30               	movlw	48
  1399   003206  EC42  F015         	call	_lcd_cmd
  1400   00320A                     
  1401                           ;LCD4b_EXSTO.c: 21:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1402   00320A  0E0D               	movlw	13
  1403   00320C  6E05               	movwf	??_lcd_init^0,c
  1404   00320E  0EFC               	movlw	252
  1405   003210                     u5117:
  1406   003210  2EE8               	decfsz	wreg,f,c
  1407   003212  D7FE               	bra	u5117
  1408   003214  2E05               	decfsz	??_lcd_init^0,f,c
  1409   003216  D7FC               	bra	u5117
  1410   003218                     
  1411                           ;LCD4b_EXSTO.c: 22:     }
  1412   003218  2A06               	incf	lcd_init@i^0,f,c
  1413   00321A  0E02               	movlw	2
  1414   00321C  6406               	cpfsgt	lcd_init@i^0,c
  1415   00321E  EF13  F019         	goto	u4451
  1416   003222  EF15  F019         	goto	u4450
  1417   003226                     u4451:
  1418   003226  EF02  F019         	goto	l3857
  1419   00322A                     u4450:
  1420   00322A                     
  1421                           ;LCD4b_EXSTO.c: 24:     lcd_cmd(0x02);
  1422   00322A  0E02               	movlw	2
  1423   00322C  EC42  F015         	call	_lcd_cmd
  1424   003230                     
  1425                           ;LCD4b_EXSTO.c: 25:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1426   003230  0E1A               	movlw	26
  1427   003232                     u5127:
  1428   003232  2EE8               	decfsz	wreg,f,c
  1429   003234  D7FE               	bra	u5127
  1430   003236  D000               	nop2	
  1431   003238                     
  1432                           ;LCD4b_EXSTO.c: 26:     lcd_cmd(0x28);
  1433   003238  0E28               	movlw	40
  1434   00323A  EC42  F015         	call	_lcd_cmd
  1435                           
  1436                           ;LCD4b_EXSTO.c: 27:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1437   00323E  0E1A               	movlw	26
  1438   003240                     u5137:
  1439   003240  2EE8               	decfsz	wreg,f,c
  1440   003242  D7FE               	bra	u5137
  1441   003244  D000               	nop2	
  1442   003246                     
  1443                           ;LCD4b_EXSTO.c: 28:     lcd_cmd(0x01);
  1444   003246  0E01               	movlw	1
  1445   003248  EC42  F015         	call	_lcd_cmd
  1446   00324C                     
  1447                           ;LCD4b_EXSTO.c: 29:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1448   00324C  0E06               	movlw	6
  1449   00324E  6E05               	movwf	??_lcd_init^0,c
  1450   003250  0E30               	movlw	48
  1451   003252                     u5147:
  1452   003252  2EE8               	decfsz	wreg,f,c
  1453   003254  D7FE               	bra	u5147
  1454   003256  2E05               	decfsz	??_lcd_init^0,f,c
  1455   003258  D7FC               	bra	u5147
  1456   00325A  D000               	nop2	
  1457                           
  1458                           ;LCD4b_EXSTO.c: 30:     lcd_cmd(0x0C);
  1459   00325C  0E0C               	movlw	12
  1460   00325E  EC42  F015         	call	_lcd_cmd
  1461   003262                     
  1462                           ;LCD4b_EXSTO.c: 31:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1463   003262  0E1A               	movlw	26
  1464   003264                     u5157:
  1465   003264  2EE8               	decfsz	wreg,f,c
  1466   003266  D7FE               	bra	u5157
  1467   003268  D000               	nop2	
  1468   00326A                     
  1469                           ;LCD4b_EXSTO.c: 32:     lcd_cmd(0x06);
  1470   00326A  0E06               	movlw	6
  1471   00326C  EC42  F015         	call	_lcd_cmd
  1472                           
  1473                           ;LCD4b_EXSTO.c: 33:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1474   003270  0E1A               	movlw	26
  1475   003272                     u5167:
  1476   003272  2EE8               	decfsz	wreg,f,c
  1477   003274  D7FE               	bra	u5167
  1478   003276  D000               	nop2	
  1479   003278  0012               	return		;funcret
  1480   00327A                     __end_of_lcd_init:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _conv_TEMP *****************
  1484 ;; Defined at:
  1485 ;;		line 115 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1499 ;;      Params:         0       0       0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 1
  1506 ;; This function calls:
  1507 ;;		___fldiv
  1508 ;;		___flmul
  1509 ;;		___xxtofl
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text3
  1516   002B68                     __ptext3:
  1517                           	callstack 0
  1518   002B68                     _conv_TEMP:
  1519                           	callstack 29
  1520   002B68                     
  1521                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 117:     sensor_tensao = V
      +                          digADC_AN3 * 0.0048875855327468;
  1522   002B68  C07D  F001         	movff	_VdigADC_AN3,___xxtofl@val
  1523   002B6C  C07E  F002         	movff	_VdigADC_AN3+1,___xxtofl@val+1
  1524   002B70  6A03               	clrf	(___xxtofl@val+2)^0,c
  1525   002B72  6A04               	clrf	(___xxtofl@val+3)^0,c
  1526   002B74  0E00               	movlw	0
  1527   002B76  EC0C  F012         	call	___xxtofl
  1528   002B7A  C001  F00F         	movff	?___xxtofl,___flmul@b
  1529   002B7E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1530   002B82  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1531   002B86  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1532   002B8A  0E0A               	movlw	10
  1533   002B8C  6E13               	movwf	___flmul@a^0,c
  1534   002B8E  0E28               	movlw	40
  1535   002B90  6E14               	movwf	(___flmul@a+1)^0,c
  1536   002B92  0EA0               	movlw	160
  1537   002B94  6E15               	movwf	(___flmul@a+2)^0,c
  1538   002B96  0E3B               	movlw	59
  1539   002B98  6E16               	movwf	(___flmul@a+3)^0,c
  1540   002B9A  ECCA  F00A         	call	___flmul	;wreg free
  1541   002B9E  C00F  F08C         	movff	?___flmul,_sensor_tensao
  1542   002BA2  C010  F08D         	movff	?___flmul+1,_sensor_tensao+1
  1543   002BA6  C011  F08E         	movff	?___flmul+2,_sensor_tensao+2
  1544   002BAA  C012  F08F         	movff	?___flmul+3,_sensor_tensao+3
  1545   002BAE                     
  1546                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 118:     sensor_temp = sen
      +                          sor_tensao / 0.0119047619047619;
  1547   002BAE  C08C  F028         	movff	_sensor_tensao,___fldiv@b
  1548   002BB2  C08D  F029         	movff	_sensor_tensao+1,___fldiv@b+1
  1549   002BB6  C08E  F02A         	movff	_sensor_tensao+2,___fldiv@b+2
  1550   002BBA  C08F  F02B         	movff	_sensor_tensao+3,___fldiv@b+3
  1551   002BBE  0E31               	movlw	49
  1552   002BC0  6E2C               	movwf	___fldiv@a^0,c
  1553   002BC2  0E0C               	movlw	12
  1554   002BC4  6E2D               	movwf	(___fldiv@a+1)^0,c
  1555   002BC6  0E43               	movlw	67
  1556   002BC8  6E2E               	movwf	(___fldiv@a+2)^0,c
  1557   002BCA  0E3C               	movlw	60
  1558   002BCC  6E2F               	movwf	(___fldiv@a+3)^0,c
  1559   002BCE  ECDF  F00C         	call	___fldiv	;wreg free
  1560   002BD2  C028  F077         	movff	?___fldiv,_sensor_temp
  1561   002BD6  C029  F078         	movff	?___fldiv+1,_sensor_temp+1
  1562   002BDA  C02A  F079         	movff	?___fldiv+2,_sensor_temp+2
  1563   002BDE  C02B  F07A         	movff	?___fldiv+3,_sensor_temp+3
  1564   002BE2                     
  1565                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 119:     percent = (sensor
      +                          _temp * 100)/ 420;
  1566   002BE2  0E00               	movlw	0
  1567   002BE4  6E13               	movwf	___flmul@a^0,c
  1568   002BE6  0E00               	movlw	0
  1569   002BE8  6E14               	movwf	(___flmul@a+1)^0,c
  1570   002BEA  0EC8               	movlw	200
  1571   002BEC  6E15               	movwf	(___flmul@a+2)^0,c
  1572   002BEE  0E42               	movlw	66
  1573   002BF0  6E16               	movwf	(___flmul@a+3)^0,c
  1574   002BF2  C077  F00F         	movff	_sensor_temp,___flmul@b
  1575   002BF6  C078  F010         	movff	_sensor_temp+1,___flmul@b+1
  1576   002BFA  C079  F011         	movff	_sensor_temp+2,___flmul@b+2
  1577   002BFE  C07A  F012         	movff	_sensor_temp+3,___flmul@b+3
  1578   002C02  ECCA  F00A         	call	___flmul	;wreg free
  1579   002C06  C00F  F028         	movff	?___flmul,___fldiv@b
  1580   002C0A  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1581   002C0E  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1582   002C12  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1583   002C16  0E00               	movlw	0
  1584   002C18  6E2C               	movwf	___fldiv@a^0,c
  1585   002C1A  0E00               	movlw	0
  1586   002C1C  6E2D               	movwf	(___fldiv@a+1)^0,c
  1587   002C1E  0ED2               	movlw	210
  1588   002C20  6E2E               	movwf	(___fldiv@a+2)^0,c
  1589   002C22  0E43               	movlw	67
  1590   002C24  6E2F               	movwf	(___fldiv@a+3)^0,c
  1591   002C26  ECDF  F00C         	call	___fldiv	;wreg free
  1592   002C2A  C028  F088         	movff	?___fldiv,_percent
  1593   002C2E  C029  F089         	movff	?___fldiv+1,_percent+1
  1594   002C32  C02A  F08A         	movff	?___fldiv+2,_percent+2
  1595   002C36  C02B  F08B         	movff	?___fldiv+3,_percent+3
  1596   002C3A  0012               	return		;funcret
  1597   002C3C                     __end_of_conv_TEMP:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function ___xxtofl *****************
  1601 ;; Defined at:
  1602 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  sign            1    wreg     unsigned char 
  1605 ;;  val             4    0[COMRAM] long 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  sign            1    8[COMRAM] unsigned char 
  1608 ;;  arg             4   10[COMRAM] unsigned long 
  1609 ;;  exp             1    9[COMRAM] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  4    0[COMRAM] unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1619 ;;      Params:         4       0       0       0       0       0       0
  1620 ;;      Locals:         6       0       0       0       0       0       0
  1621 ;;      Temps:          4       0       0       0       0       0       0
  1622 ;;      Totals:        14       0       0       0       0       0       0
  1623 ;;Total ram usage:       14 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_conv_TEMP
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text4
  1633   002418                     __ptext4:
  1634                           	callstack 0
  1635   002418                     ___xxtofl:
  1636                           	callstack 29
  1637                           
  1638                           ;incstack = 0
  1639                           ;___xxtofl@sign stored from wreg
  1640   002418  6E09               	movwf	___xxtofl@sign^0,c
  1641   00241A  5009               	movf	___xxtofl@sign^0,w,c
  1642   00241C  B4D8               	btfsc	status,2,c
  1643   00241E  EF13  F012         	goto	u4261
  1644   002422  EF15  F012         	goto	u4260
  1645   002426                     u4261:
  1646   002426  EF37  F012         	goto	l809
  1647   00242A                     u4260:
  1648   00242A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1649   00242C  EF1C  F012         	goto	u4270
  1650   002430  EF1A  F012         	goto	u4271
  1651   002434                     u4271:
  1652   002434  EF37  F012         	goto	l809
  1653   002438                     u4270:
  1654   002438  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1655   00243C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1656   002440  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1657   002444  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1658   002448  1E05               	comf	??___xxtofl^0,f,c
  1659   00244A  1E06               	comf	(??___xxtofl+1)^0,f,c
  1660   00244C  1E07               	comf	(??___xxtofl+2)^0,f,c
  1661   00244E  1E08               	comf	(??___xxtofl+3)^0,f,c
  1662   002450  2A05               	incf	??___xxtofl^0,f,c
  1663   002452  0E00               	movlw	0
  1664   002454  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1665   002456  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1666   002458  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1667   00245A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1668   00245E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1669   002462  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1670   002466  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1671   00246A  EF3F  F012         	goto	l3731
  1672   00246E                     l809:
  1673   00246E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1674   002472  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1675   002476  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1676   00247A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1677   00247E                     l3731:
  1678   00247E  5001               	movf	___xxtofl@val^0,w,c
  1679   002480  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1680   002482  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1681   002484  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1682   002486  A4D8               	btfss	status,2,c
  1683   002488  EF48  F012         	goto	u4281
  1684   00248C  EF4A  F012         	goto	u4280
  1685   002490                     u4281:
  1686   002490  EF54  F012         	goto	l3737
  1687   002494                     u4280:
  1688   002494  0E00               	movlw	0
  1689   002496  6E01               	movwf	?___xxtofl^0,c
  1690   002498  0E00               	movlw	0
  1691   00249A  6E02               	movwf	(?___xxtofl+1)^0,c
  1692   00249C  0E00               	movlw	0
  1693   00249E  6E03               	movwf	(?___xxtofl+2)^0,c
  1694   0024A0  0E00               	movlw	0
  1695   0024A2  6E04               	movwf	(?___xxtofl+3)^0,c
  1696   0024A4  EFE5  F012         	goto	l812
  1697   0024A8                     l3737:
  1698   0024A8  0E96               	movlw	150
  1699   0024AA  6E0A               	movwf	___xxtofl@exp^0,c
  1700   0024AC  EF5E  F012         	goto	l3741
  1701   0024B0                     l3739:
  1702   0024B0  2A0A               	incf	___xxtofl@exp^0,f,c
  1703   0024B2  90D8               	bcf	status,0,c
  1704   0024B4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1705   0024B6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1706   0024B8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1707   0024BA  320B               	rrcf	___xxtofl@arg^0,f,c
  1708   0024BC                     l3741:
  1709   0024BC  0E00               	movlw	0
  1710   0024BE  140B               	andwf	___xxtofl@arg^0,w,c
  1711   0024C0  6E05               	movwf	??___xxtofl^0,c
  1712   0024C2  0E00               	movlw	0
  1713   0024C4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1714   0024C6  6E06               	movwf	(??___xxtofl+1)^0,c
  1715   0024C8  0E00               	movlw	0
  1716   0024CA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1717   0024CC  6E07               	movwf	(??___xxtofl+2)^0,c
  1718   0024CE  0EFE               	movlw	254
  1719   0024D0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1720   0024D2  6E08               	movwf	(??___xxtofl+3)^0,c
  1721   0024D4  5005               	movf	??___xxtofl^0,w,c
  1722   0024D6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1723   0024D8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1724   0024DA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1725   0024DC  A4D8               	btfss	status,2,c
  1726   0024DE  EF73  F012         	goto	u4291
  1727   0024E2  EF75  F012         	goto	u4290
  1728   0024E6                     u4291:
  1729   0024E6  EF58  F012         	goto	l3739
  1730   0024EA                     u4290:
  1731   0024EA  EF83  F012         	goto	l816
  1732   0024EE                     l3743:
  1733   0024EE  2A0A               	incf	___xxtofl@exp^0,f,c
  1734   0024F0  0E01               	movlw	1
  1735   0024F2  260B               	addwf	___xxtofl@arg^0,f,c
  1736   0024F4  0E00               	movlw	0
  1737   0024F6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1738   0024F8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1739   0024FA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1740   0024FC  90D8               	bcf	status,0,c
  1741   0024FE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1742   002500  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1743   002502  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1744   002504  320B               	rrcf	___xxtofl@arg^0,f,c
  1745   002506                     l816:
  1746   002506  0E00               	movlw	0
  1747   002508  140B               	andwf	___xxtofl@arg^0,w,c
  1748   00250A  6E05               	movwf	??___xxtofl^0,c
  1749   00250C  0E00               	movlw	0
  1750   00250E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1751   002510  6E06               	movwf	(??___xxtofl+1)^0,c
  1752   002512  0E00               	movlw	0
  1753   002514  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1754   002516  6E07               	movwf	(??___xxtofl+2)^0,c
  1755   002518  0EFF               	movlw	255
  1756   00251A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1757   00251C  6E08               	movwf	(??___xxtofl+3)^0,c
  1758   00251E  5005               	movf	??___xxtofl^0,w,c
  1759   002520  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1760   002522  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1761   002524  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1762   002526  A4D8               	btfss	status,2,c
  1763   002528  EF98  F012         	goto	u4301
  1764   00252C  EF9A  F012         	goto	u4300
  1765   002530                     u4301:
  1766   002530  EF77  F012         	goto	l3743
  1767   002534                     u4300:
  1768   002534  EFA2  F012         	goto	l3751
  1769   002538                     l3749:
  1770   002538  060A               	decf	___xxtofl@exp^0,f,c
  1771   00253A  90D8               	bcf	status,0,c
  1772   00253C  360B               	rlcf	___xxtofl@arg^0,f,c
  1773   00253E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1774   002540  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1775   002542  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1776   002544                     l3751:
  1777   002544  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1778   002546  EFA7  F012         	goto	u4311
  1779   00254A  EFA9  F012         	goto	u4310
  1780   00254E                     u4311:
  1781   00254E  EFB1  F012         	goto	l823
  1782   002552                     u4310:
  1783   002552  0E02               	movlw	2
  1784   002554  600A               	cpfslt	___xxtofl@exp^0,c
  1785   002556  EFAF  F012         	goto	u4321
  1786   00255A  EFB1  F012         	goto	u4320
  1787   00255E                     u4321:
  1788   00255E  EF9C  F012         	goto	l3749
  1789   002562                     u4320:
  1790   002562                     l823:
  1791   002562  B00A               	btfsc	___xxtofl@exp^0,0,c
  1792   002564  EFB6  F012         	goto	u4331
  1793   002568  EFB8  F012         	goto	u4330
  1794   00256C                     u4331:
  1795   00256C  EFB9  F012         	goto	l3757
  1796   002570                     u4330:
  1797   002570  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1798   002572                     l3757:
  1799   002572  90D8               	bcf	status,0,c
  1800   002574  320A               	rrcf	___xxtofl@exp^0,f,c
  1801   002576  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1802   00257A  6A06               	clrf	(??___xxtofl+1)^0,c
  1803   00257C  6A07               	clrf	(??___xxtofl+2)^0,c
  1804   00257E  6A08               	clrf	(??___xxtofl+3)^0,c
  1805   002580  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1806   002584  6A07               	clrf	(??___xxtofl+2)^0,c
  1807   002586  6A06               	clrf	(??___xxtofl+1)^0,c
  1808   002588  6A05               	clrf	??___xxtofl^0,c
  1809   00258A  5005               	movf	??___xxtofl^0,w,c
  1810   00258C  120B               	iorwf	___xxtofl@arg^0,f,c
  1811   00258E  5006               	movf	(??___xxtofl+1)^0,w,c
  1812   002590  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1813   002592  5007               	movf	(??___xxtofl+2)^0,w,c
  1814   002594  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1815   002596  5008               	movf	(??___xxtofl+3)^0,w,c
  1816   002598  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1817   00259A  5009               	movf	___xxtofl@sign^0,w,c
  1818   00259C  B4D8               	btfsc	status,2,c
  1819   00259E  EFD3  F012         	goto	u4341
  1820   0025A2  EFD5  F012         	goto	u4340
  1821   0025A6                     u4341:
  1822   0025A6  EFDD  F012         	goto	l3767
  1823   0025AA                     u4340:
  1824   0025AA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1825   0025AC  EFDC  F012         	goto	u4350
  1826   0025B0  EFDA  F012         	goto	u4351
  1827   0025B4                     u4351:
  1828   0025B4  EFDD  F012         	goto	l3767
  1829   0025B8                     u4350:
  1830   0025B8  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1831   0025BA                     l3767:
  1832   0025BA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1833   0025BE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1834   0025C2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1835   0025C6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1836   0025CA                     l812:
  1837   0025CA  0012               	return		;funcret
  1838   0025CC                     __end_of___xxtofl:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _conv_AN3 *****************
  1842 ;; Defined at:
  1843 ;;		line 106 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1857 ;;      Params:         0       0       0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0
  1859 ;;      Temps:          2       0       0       0       0       0       0
  1860 ;;      Totals:         2       0       0       0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text5
  1871   00357E                     __ptext5:
  1872                           	callstack 0
  1873   00357E                     _conv_AN3:
  1874                           	callstack 30
  1875   00357E                     
  1876                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 108:     _delay((unsigned 
      +                          long)((50)*(8000000/4000.0)));
  1877   00357E  0E82               	movlw	130
  1878   003580  6E01               	movwf	??_conv_AN3^0,c
  1879   003582  0EDE               	movlw	222
  1880   003584                     u5177:
  1881   003584  2EE8               	decfsz	wreg,f,c
  1882   003586  D7FE               	bra	u5177
  1883   003588  2E01               	decfsz	??_conv_AN3^0,f,c
  1884   00358A  D7FC               	bra	u5177
  1885   00358C                     
  1886                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 109:     ADCON0bits.GO = 1
      +                          ;
  1887   00358C  82C2               	bsf	194,1,c	;volatile
  1888   00358E                     l74:
  1889   00358E  B2C2               	btfsc	194,1,c	;volatile
  1890   003590  EFCC  F01A         	goto	u2121
  1891   003594  EFCE  F01A         	goto	u2120
  1892   003598                     u2121:
  1893   003598  EFC7  F01A         	goto	l74
  1894   00359C                     u2120:
  1895   00359C                     
  1896                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 111:     VdigADC_AN3 = ADR
      +                          ESH;
  1897   00359C  CFC4 F07D          	movff	4036,_VdigADC_AN3	;volatile
  1898   0035A0  6A7E               	clrf	(_VdigADC_AN3+1)^0,c
  1899   0035A2                     
  1900                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 112:     VdigADC_AN3 = (Vd
      +                          igADC_AN3 << 8) + ADRESL;
  1901   0035A2  507D               	movf	_VdigADC_AN3^0,w,c
  1902   0035A4  6E01               	movwf	??_conv_AN3^0,c
  1903   0035A6  50C3               	movf	195,w,c	;volatile
  1904   0035A8  6E7D               	movwf	_VdigADC_AN3^0,c
  1905   0035AA  C001  F07E         	movff	??_conv_AN3,_VdigADC_AN3+1
  1906   0035AE  0012               	return		;funcret
  1907   0035B0                     __end_of_conv_AN3:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function _config_IO *****************
  1911 ;; Defined at:
  1912 ;;		line 91 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1926 ;;      Params:         0       0       0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0
  1929 ;;      Totals:         0       0       0       0       0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text6
  1940   003670                     __ptext6:
  1941                           	callstack 0
  1942   003670                     _config_IO:
  1943                           	callstack 30
  1944   003670                     
  1945                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 93:     TRISB = 0X01;
  1946   003670  0E01               	movlw	1
  1947   003672  6E93               	movwf	147,c	;volatile
  1948                           
  1949                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 94:     PORTB = 0X00;
  1950   003674  0E00               	movlw	0
  1951   003676  6E81               	movwf	129,c	;volatile
  1952                           
  1953                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 95:     TRISC = 0X00;
  1954   003678  0E00               	movlw	0
  1955   00367A  6E94               	movwf	148,c	;volatile
  1956                           
  1957                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 96:     PORTC = 0X00;
  1958   00367C  0E00               	movlw	0
  1959   00367E  6E82               	movwf	130,c	;volatile
  1960   003680  0012               	return		;funcret
  1961   003682                     __end_of_config_IO:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _config_FOSC *****************
  1965 ;; Defined at:
  1966 ;;		line 85 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text7
  1994   003690                     __ptext7:
  1995                           	callstack 0
  1996   003690                     _config_FOSC:
  1997                           	callstack 30
  1998   003690                     
  1999                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 87:     OSCCON = 0X00;
  2000   003690  0E00               	movlw	0
  2001   003692  6ED3               	movwf	211,c	;volatile
  2002                           
  2003                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 88:     OSCTUNE = 0X00;
  2004   003694  0E00               	movlw	0
  2005   003696  6E9B               	movwf	155,c	;volatile
  2006   003698  0012               	return		;funcret
  2007   00369A                     __end_of_config_FOSC:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _config_ADC *****************
  2011 ;; Defined at:
  2012 ;;		line 99 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2026 ;;      Params:         0       0       0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text8
  2040   003682                     __ptext8:
  2041                           	callstack 0
  2042   003682                     _config_ADC:
  2043                           	callstack 30
  2044   003682                     
  2045                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 101:     ADCON0 = 0X0D;
  2046   003682  0E0D               	movlw	13
  2047   003684  6EC2               	movwf	194,c	;volatile
  2048                           
  2049                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 102:     ADCON1 = 0X0B;
  2050   003686  0E0B               	movlw	11
  2051   003688  6EC1               	movwf	193,c	;volatile
  2052                           
  2053                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 103:     ADCON2 = 0X80;
  2054   00368A  0E80               	movlw	128
  2055   00368C  6EC0               	movwf	192,c	;volatile
  2056   00368E  0012               	return		;funcret
  2057   003690                     __end_of_config_ADC:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _LCD_tela2 *****************
  2061 ;; Defined at:
  2062 ;;		line 171 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2076 ;;      Params:         0       0       0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0
  2078 ;;      Temps:          1       0       0       0       0       0       0
  2079 ;;      Totals:         1       0       0       0       0       0       0
  2080 ;;Total ram usage:        1 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 8
  2083 ;; This function calls:
  2084 ;;		_lcd_clear
  2085 ;;		_lcd_write
  2086 ;;		_sprintf
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text9
  2093   002C3C                     __ptext9:
  2094                           	callstack 0
  2095   002C3C                     _LCD_tela2:
  2096                           	callstack 22
  2097   002C3C                     
  2098                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 173:     sprintf(string_FA
      +                          N1, "%d", FAN1);
  2099   002C3C  0EB8               	movlw	low _string_FAN1
  2100   002C3E  0100               	movlb	0	; () banked
  2101   002C40  6FEF               	movwf	sprintf@s& (0+255),b
  2102   002C42  6BF0               	clrf	(sprintf@s+1)& (0+255),b
  2103   002C44  0E7C               	movlw	low STR_5
  2104   002C46  6FF1               	movwf	sprintf@fmt& (0+255),b
  2105   002C48  C096  F0F2         	movff	_FAN1,?_sprintf+3
  2106   002C4C  C097  F0F3         	movff	_FAN1+1,?_sprintf+4
  2107   002C50  EC0C  F01A         	call	_sprintf	;wreg free
  2108                           
  2109                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 174:     sprintf(string_FA
      +                          N2, "%d", FAN2);
  2110   002C54  0EB0               	movlw	low _string_FAN2
  2111   002C56  0100               	movlb	0	; () banked
  2112   002C58  6FEF               	movwf	sprintf@s& (0+255),b
  2113   002C5A  6BF0               	clrf	(sprintf@s+1)& (0+255),b
  2114   002C5C  0E7C               	movlw	low STR_5
  2115   002C5E  6FF1               	movwf	sprintf@fmt& (0+255),b
  2116   002C60  C094  F0F2         	movff	_FAN2,?_sprintf+3
  2117   002C64  C095  F0F3         	movff	_FAN2+1,?_sprintf+4
  2118   002C68  EC0C  F01A         	call	_sprintf	;wreg free
  2119                           
  2120                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 175:     sprintf(string_RE
      +                          S1, "%d", RES1);
  2121   002C6C  0EA8               	movlw	low _string_RES1
  2122   002C6E  0100               	movlb	0	; () banked
  2123   002C70  6FEF               	movwf	sprintf@s& (0+255),b
  2124   002C72  6BF0               	clrf	(sprintf@s+1)& (0+255),b
  2125   002C74  0E7C               	movlw	low STR_5
  2126   002C76  6FF1               	movwf	sprintf@fmt& (0+255),b
  2127   002C78  C092  F0F2         	movff	_RES1,?_sprintf+3
  2128   002C7C  C093  F0F3         	movff	_RES1+1,?_sprintf+4
  2129   002C80  EC0C  F01A         	call	_sprintf	;wreg free
  2130   002C84                     
  2131                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 177:     lcd_clear();
  2132   002C84  ECEF  F01A         	call	_lcd_clear	;wreg free
  2133   002C88                     
  2134                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 178:     _delay((unsigned 
      +                          long)((20)*(8000000/4000.0)));
  2135   002C88  0E34               	movlw	52
  2136   002C8A  6E76               	movwf	??_LCD_tela2^0,c
  2137   002C8C  0EF2               	movlw	242
  2138   002C8E                     u5187:
  2139   002C8E  2EE8               	decfsz	wreg,f,c
  2140   002C90  D7FE               	bra	u5187
  2141   002C92  2E76               	decfsz	??_LCD_tela2^0,f,c
  2142   002C94  D7FC               	bra	u5187
  2143   002C96                     
  2144                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 180:     lcd_write(1,1,"FA
      +                          N 1:          ");
  2145   002C96  0E01               	movlw	1
  2146   002C98  6E07               	movwf	lcd_write@col^0,c
  2147   002C9A  0E31               	movlw	low STR_8
  2148   002C9C  6E08               	movwf	lcd_write@str^0,c
  2149   002C9E  5008               	movf	lcd_write@str^0,w,c
  2150   002CA0  A4D8               	btfss	status,2,c
  2151   002CA2  0E06               	movlw	high __smallconst
  2152   002CA4  6E09               	movwf	(lcd_write@str+1)^0,c
  2153   002CA6  0E01               	movlw	1
  2154   002CA8  EC9E  F018         	call	_lcd_write
  2155   002CAC                     
  2156                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 181:     lcd_write(1,7,str
      +                          ing_FAN1);
  2157   002CAC  0E07               	movlw	7
  2158   002CAE  6E07               	movwf	lcd_write@col^0,c
  2159   002CB0  0EB8               	movlw	low _string_FAN1
  2160   002CB2  6E08               	movwf	lcd_write@str^0,c
  2161   002CB4  6A09               	clrf	(lcd_write@str+1)^0,c
  2162   002CB6  0E01               	movlw	1
  2163   002CB8  EC9E  F018         	call	_lcd_write
  2164   002CBC                     
  2165                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 183:     lcd_write(1,9,"FA
      +                          N 2:          ");
  2166   002CBC  0E09               	movlw	9
  2167   002CBE  6E07               	movwf	lcd_write@col^0,c
  2168   002CC0  0E42               	movlw	low STR_9
  2169   002CC2  6E08               	movwf	lcd_write@str^0,c
  2170   002CC4  5008               	movf	lcd_write@str^0,w,c
  2171   002CC6  A4D8               	btfss	status,2,c
  2172   002CC8  0E06               	movlw	high __smallconst
  2173   002CCA  6E09               	movwf	(lcd_write@str+1)^0,c
  2174   002CCC  0E01               	movlw	1
  2175   002CCE  EC9E  F018         	call	_lcd_write
  2176   002CD2                     
  2177                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 184:     lcd_write(1,15,st
      +                          ring_FAN2);
  2178   002CD2  0E0F               	movlw	15
  2179   002CD4  6E07               	movwf	lcd_write@col^0,c
  2180   002CD6  0EB0               	movlw	low _string_FAN2
  2181   002CD8  6E08               	movwf	lcd_write@str^0,c
  2182   002CDA  6A09               	clrf	(lcd_write@str+1)^0,c
  2183   002CDC  0E01               	movlw	1
  2184   002CDE  EC9E  F018         	call	_lcd_write
  2185   002CE2                     
  2186                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 186:     lcd_write(2,1,"RE
      +                          S1:          ");
  2187   002CE2  0E01               	movlw	1
  2188   002CE4  6E07               	movwf	lcd_write@col^0,c
  2189   002CE6  0E53               	movlw	low STR_10
  2190   002CE8  6E08               	movwf	lcd_write@str^0,c
  2191   002CEA  5008               	movf	lcd_write@str^0,w,c
  2192   002CEC  A4D8               	btfss	status,2,c
  2193   002CEE  0E06               	movlw	high __smallconst
  2194   002CF0  6E09               	movwf	(lcd_write@str+1)^0,c
  2195   002CF2  0E02               	movlw	2
  2196   002CF4  EC9E  F018         	call	_lcd_write
  2197   002CF8                     
  2198                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 187:     lcd_write(2,6,str
      +                          ing_RES1);
  2199   002CF8  0E06               	movlw	6
  2200   002CFA  6E07               	movwf	lcd_write@col^0,c
  2201   002CFC  0EA8               	movlw	low _string_RES1
  2202   002CFE  6E08               	movwf	lcd_write@str^0,c
  2203   002D00  6A09               	clrf	(lcd_write@str+1)^0,c
  2204   002D02  0E02               	movlw	2
  2205   002D04  EC9E  F018         	call	_lcd_write
  2206   002D08  0012               	return		;funcret
  2207   002D0A                     __end_of_LCD_tela2:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _LCD_tela1 *****************
  2211 ;; Defined at:
  2212 ;;		line 155 in file "C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2226 ;;      Params:         0       0       0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0
  2228 ;;      Temps:          1       0       0       0       0       0       0
  2229 ;;      Totals:         1       0       0       0       0       0       0
  2230 ;;Total ram usage:        1 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 8
  2233 ;; This function calls:
  2234 ;;		_lcd_clear
  2235 ;;		_lcd_write
  2236 ;;		_sprintf
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text10
  2243   002E88                     __ptext10:
  2244                           	callstack 0
  2245   002E88                     _LCD_tela1:
  2246                           	callstack 22
  2247   002E88                     
  2248                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 157:     sprintf(string_te
      +                          mp,"%0.1f%cC", sensor_temp, 0xDF);
  2249   002E88  0E98               	movlw	low _string_temp
  2250   002E8A  0100               	movlb	0	; () banked
  2251   002E8C  6FEF               	movwf	sprintf@s& (0+255),b
  2252   002E8E  6BF0               	clrf	(sprintf@s+1)& (0+255),b
  2253   002E90  0E63               	movlw	low STR_1
  2254   002E92  6FF1               	movwf	sprintf@fmt& (0+255),b
  2255   002E94  C077  F0F2         	movff	_sensor_temp,?_sprintf+3
  2256   002E98  C078  F0F3         	movff	_sensor_temp+1,?_sprintf+4
  2257   002E9C  C079  F0F4         	movff	_sensor_temp+2,?_sprintf+5
  2258   002EA0  C07A  F0F5         	movff	_sensor_temp+3,?_sprintf+6
  2259   002EA4  0E00               	movlw	0
  2260   002EA6  6FF7               	movwf	(?_sprintf+8)& (0+255),b
  2261   002EA8  0EDF               	movlw	223
  2262   002EAA  6FF6               	movwf	(?_sprintf+7)& (0+255),b
  2263   002EAC  EC0C  F01A         	call	_sprintf	;wreg free
  2264                           
  2265                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 158:     sprintf(string_pe
      +                          rcent,"%0.1f%c", percent, 0x25);
  2266   002EB0  0E50               	movlw	low _string_percent
  2267   002EB2  0100               	movlb	0	; () banked
  2268   002EB4  6FEF               	movwf	sprintf@s& (0+255),b
  2269   002EB6  0E01               	movlw	high _string_percent
  2270   002EB8  6FF0               	movwf	(sprintf@s+1)& (0+255),b
  2271   002EBA  0E6C               	movlw	low STR_2
  2272   002EBC  6FF1               	movwf	sprintf@fmt& (0+255),b
  2273   002EBE  C088  F0F2         	movff	_percent,?_sprintf+3
  2274   002EC2  C089  F0F3         	movff	_percent+1,?_sprintf+4
  2275   002EC6  C08A  F0F4         	movff	_percent+2,?_sprintf+5
  2276   002ECA  C08B  F0F5         	movff	_percent+3,?_sprintf+6
  2277   002ECE  0E00               	movlw	0
  2278   002ED0  6FF7               	movwf	(?_sprintf+8)& (0+255),b
  2279   002ED2  0E25               	movlw	37
  2280   002ED4  6FF6               	movwf	(?_sprintf+7)& (0+255),b
  2281   002ED6  EC0C  F01A         	call	_sprintf	;wreg free
  2282   002EDA                     
  2283                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 160:     lcd_clear();
  2284   002EDA  ECEF  F01A         	call	_lcd_clear	;wreg free
  2285   002EDE                     
  2286                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 161:     _delay((unsigned 
      +                          long)((20)*(8000000/4000.0)));
  2287   002EDE  0E34               	movlw	52
  2288   002EE0  6E76               	movwf	??_LCD_tela1^0,c
  2289   002EE2  0EF2               	movlw	242
  2290   002EE4                     u5197:
  2291   002EE4  2EE8               	decfsz	wreg,f,c
  2292   002EE6  D7FE               	bra	u5197
  2293   002EE8  2E76               	decfsz	??_LCD_tela1^0,f,c
  2294   002EEA  D7FC               	bra	u5197
  2295   002EEC                     
  2296                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 163:     lcd_write(1,1,"TE
      +                          MP:                  ");
  2297   002EEC  0E01               	movlw	1
  2298   002EEE  6E07               	movwf	lcd_write@col^0,c
  2299   002EF0  0E01               	movlw	low STR_3
  2300   002EF2  6E08               	movwf	lcd_write@str^0,c
  2301   002EF4  5008               	movf	lcd_write@str^0,w,c
  2302   002EF6  A4D8               	btfss	status,2,c
  2303   002EF8  0E06               	movlw	high __smallconst
  2304   002EFA  6E09               	movwf	(lcd_write@str+1)^0,c
  2305   002EFC  0E01               	movlw	1
  2306   002EFE  EC9E  F018         	call	_lcd_write
  2307   002F02                     
  2308                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 164:     lcd_write(1,10,st
      +                          ring_temp);
  2309   002F02  0E0A               	movlw	10
  2310   002F04  6E07               	movwf	lcd_write@col^0,c
  2311   002F06  0E98               	movlw	low _string_temp
  2312   002F08  6E08               	movwf	lcd_write@str^0,c
  2313   002F0A  6A09               	clrf	(lcd_write@str+1)^0,c
  2314   002F0C  0E01               	movlw	1
  2315   002F0E  EC9E  F018         	call	_lcd_write
  2316   002F12                     
  2317                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 166:     lcd_write(2,1,"PE
      +                          RCENT:               ");
  2318   002F12  0E01               	movlw	1
  2319   002F14  6E07               	movwf	lcd_write@col^0,c
  2320   002F16  0E19               	movlw	low STR_4
  2321   002F18  6E08               	movwf	lcd_write@str^0,c
  2322   002F1A  5008               	movf	lcd_write@str^0,w,c
  2323   002F1C  A4D8               	btfss	status,2,c
  2324   002F1E  0E06               	movlw	high __smallconst
  2325   002F20  6E09               	movwf	(lcd_write@str+1)^0,c
  2326   002F22  0E02               	movlw	2
  2327   002F24  EC9E  F018         	call	_lcd_write
  2328   002F28                     
  2329                           ;C:/Users/gabri/Desktop/Software/TEMP_ESTUFA_LCD.X/newmain.c: 167:     lcd_write(2,10,st
      +                          ring_percent);
  2330   002F28  0E0A               	movlw	10
  2331   002F2A  6E07               	movwf	lcd_write@col^0,c
  2332   002F2C  0E50               	movlw	low _string_percent
  2333   002F2E  6E08               	movwf	lcd_write@str^0,c
  2334   002F30  0E01               	movlw	high _string_percent
  2335   002F32  6E09               	movwf	(lcd_write@str+1)^0,c
  2336   002F34  0E02               	movlw	2
  2337   002F36  EC9E  F018         	call	_lcd_write
  2338   002F3A  0012               	return		;funcret
  2339   002F3C                     __end_of_LCD_tela1:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _sprintf *****************
  2343 ;; Defined at:
  2344 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  s               2   47[BANK0 ] PTR unsigned char 
  2347 ;;		 -> string_RES1(8), string_FAN2(8), string_FAN1(8), string_percent(16), 
  2348 ;;		 -> string_temp(16), 
  2349 ;;  fmt             1   49[BANK0 ] PTR const unsigned char 
  2350 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_2(8), 
  2351 ;;		 -> STR_1(9), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  f              12  105[COMRAM] struct _IO_FILE
  2354 ;;  ret             2    0        int 
  2355 ;;  ap              1  104[COMRAM] PTR void [1]
  2356 ;;		 -> ?_sprintf(2), 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  2   47[BANK0 ] int 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2366 ;;      Params:         0       9       0       0       0       0       0
  2367 ;;      Locals:        13       0       0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0
  2369 ;;      Totals:        13       9       0       0       0       0       0
  2370 ;;Total ram usage:       22 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 7
  2373 ;; This function calls:
  2374 ;;		_vfprintf
  2375 ;; This function is called by:
  2376 ;;		_LCD_tela1
  2377 ;;		_LCD_tela2
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text11
  2382   003418                     __ptext11:
  2383                           	callstack 0
  2384   003418                     _sprintf:
  2385                           	callstack 22
  2386   003418  0EF2               	movlw	low (?_sprintf+3)
  2387   00341A  6E69               	movwf	sprintf@ap^0,c
  2388   00341C  C0EF  F06A         	movff	sprintf@s,sprintf@f
  2389   003420  C0F0  F06B         	movff	sprintf@s+1,sprintf@f+1
  2390   003424  0E00               	movlw	0
  2391   003426  6E6E               	movwf	(sprintf@f+4)^0,c
  2392   003428  0E00               	movlw	0
  2393   00342A  6E6D               	movwf	(sprintf@f+3)^0,c
  2394   00342C  0E00               	movlw	0
  2395   00342E  6E75               	movwf	(sprintf@f+11)^0,c
  2396   003430  0E00               	movlw	0
  2397   003432  6E74               	movwf	(sprintf@f+10)^0,c
  2398   003434  0E6A               	movlw	low sprintf@f
  2399   003436  0100               	movlb	0	; () banked
  2400   003438  6FEC               	movwf	vfprintf@fp& (0+255),b
  2401   00343A  C0F1  F0ED         	movff	sprintf@fmt,vfprintf@fmt
  2402   00343E  0E69               	movlw	low sprintf@ap
  2403   003440  6FEE               	movwf	vfprintf@ap& (0+255),b
  2404   003442  EC2C  F01A         	call	_vfprintf	;wreg free
  2405   003446  506D               	movf	(sprintf@f+3)^0,w,c
  2406   003448  0100               	movlb	0	; () banked
  2407   00344A  25EF               	addwf	sprintf@s& (0+255),w,b
  2408   00344C  6ED9               	movwf	fsr2l,c
  2409   00344E  506E               	movf	(sprintf@f+4)^0,w,c
  2410   003450  21F0               	addwfc	(sprintf@s+1)& (0+255),w,b
  2411   003452  6EDA               	movwf	fsr2h,c
  2412   003454  6ADF               	clrf	indf2,c
  2413   003456                     
  2414                           ; BSR set to: 0
  2415   003456  0012               	return		;funcret
  2416   003458                     __end_of_sprintf:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _vfprintf *****************
  2420 ;; Defined at:
  2421 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  2424 ;;		 -> sprintf@f(12), 
  2425 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  2426 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_2(8), 
  2427 ;;		 -> STR_1(9), 
  2428 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2429 ;;		 -> sprintf@ap(1), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  cfmt            1  103[COMRAM] PTR unsigned char 
  2432 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_2(8), 
  2433 ;;		 -> STR_1(9), 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   44[BANK0 ] int 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2443 ;;      Params:         0       3       0       0       0       0       0
  2444 ;;      Locals:         1       0       0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0
  2446 ;;      Totals:         1       3       0       0       0       0       0
  2447 ;;Total ram usage:        4 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 6
  2450 ;; This function calls:
  2451 ;;		_vfpfcnvrt
  2452 ;; This function is called by:
  2453 ;;		_sprintf
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text12
  2458   003458                     __ptext12:
  2459                           	callstack 0
  2460   003458                     _vfprintf:
  2461                           	callstack 22
  2462   003458                     
  2463                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2464   003458  C0ED  F068         	movff	vfprintf@fmt,vfprintf@cfmt
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2467   00345C  EF38  F01A         	goto	l4317
  2468   003460                     l4315:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2471   003460  C0EC  F05D         	movff	vfprintf@fp,vfpfcnvrt@fp
  2472   003464  0E68               	movlw	low vfprintf@cfmt
  2473   003466  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  2474   003468  C0EE  F05F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2475   00346C  ECAC  F00E         	call	_vfpfcnvrt	;wreg free
  2476   003470                     l4317:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2479   003470  C068  FFF6         	movff	vfprintf@cfmt,tblptrl
  2480   003474                     	if	1	;There is more than 1 active tblptr byte
  2481   003474  0E06               	movlw	high __smallconst
  2482   003476  6EF7               	movwf	tblptrh,c
  2483   003478                     	endif
  2484   003478                     	if	0	;tblptru may be non-zero
  2485   003478                     	endif
  2486   003478                     	if	0	;tblptru may be non-zero
  2487   003478                     	endif
  2488   003478  0008               	tblrd		*
  2489   00347A  50F5               	movf	tablat,w,c
  2490   00347C  0900               	iorlw	0
  2491   00347E  A4D8               	btfss	status,2,c
  2492   003480  EF44  F01A         	goto	u5071
  2493   003484  EF46  F01A         	goto	u5070
  2494   003488                     u5071:
  2495   003488  EF30  F01A         	goto	l4315
  2496   00348C                     u5070:
  2497   00348C                     
  2498                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2499   00348C  0E00               	movlw	0
  2500   00348E  0100               	movlb	0	; () banked
  2501   003490  6FED               	movwf	(?_vfprintf+1)& (0+255),b
  2502   003492  0E00               	movlw	0
  2503   003494  6FEC               	movwf	?_vfprintf& (0+255),b
  2504   003496                     
  2505                           ; BSR set to: 0
  2506   003496  0012               	return		;funcret
  2507   003498                     __end_of_vfprintf:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _vfpfcnvrt *****************
  2511 ;; Defined at:
  2512 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  2515 ;;		 -> sprintf@f(12), 
  2516 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  2517 ;;		 -> vfprintf@cfmt(1), 
  2518 ;;  ap              1   94[COMRAM] PTR PTR void 
  2519 ;;		 -> sprintf@ap(1), 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  convarg         4   97[COMRAM] struct .
  2522 ;;  cp              1  102[COMRAM] PTR unsigned char 
  2523 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_2(8), 
  2524 ;;		 -> STR_1(9), 
  2525 ;;  c               1  101[COMRAM] unsigned char 
  2526 ;;  done            1   96[COMRAM] _Bool 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2536 ;;      Params:         3       0       0       0       0       0       0
  2537 ;;      Locals:         7       0       0       0       0       0       0
  2538 ;;      Temps:          1       0       0       0       0       0       0
  2539 ;;      Totals:        11       0       0       0       0       0       0
  2540 ;;Total ram usage:       11 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 5
  2543 ;; This function calls:
  2544 ;;		_dtoa
  2545 ;;		_efgtoa
  2546 ;;		_fputc
  2547 ;;		_read_prec_or_width
  2548 ;; This function is called by:
  2549 ;;		_vfprintf
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text13
  2554   001D58                     __ptext13:
  2555                           	callstack 0
  2556   001D58                     _vfpfcnvrt:
  2557                           	callstack 22
  2558   001D58                     
  2559                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2560   001D58  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2561   001D5A  6ED9               	movwf	fsr2l,c
  2562   001D5C  6ADA               	clrf	fsr2h,c
  2563   001D5E  CFDF FFF6          	movff	indf2,tblptrl
  2564   001D62                     	if	1	;There is more than 1 active tblptr byte
  2565   001D62  0E06               	movlw	high __smallconst
  2566   001D64  6EF7               	movwf	tblptrh,c
  2567   001D66                     	endif
  2568   001D66                     	if	0	;tblptru may be non-zero
  2569   001D66                     	endif
  2570   001D66                     	if	0	;tblptru may be non-zero
  2571   001D66                     	endif
  2572   001D66  0008               	tblrd		*
  2573   001D68  50F5               	movf	tablat,w,c
  2574   001D6A  0A25               	xorlw	37
  2575   001D6C  A4D8               	btfss	status,2,c
  2576   001D6E  EFBB  F00E         	goto	u5001
  2577   001D72  EFBD  F00E         	goto	u5000
  2578   001D76                     u5001:
  2579   001D76  EF0C  F010         	goto	l4307
  2580   001D7A                     u5000:
  2581   001D7A                     
  2582                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2583   001D7A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2584   001D7C  6ED9               	movwf	fsr2l,c
  2585   001D7E  6ADA               	clrf	fsr2h,c
  2586   001D80  2ADF               	incf	indf2,f,c
  2587   001D82                     
  2588                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2589   001D82  0E00               	movlw	0
  2590   001D84  0100               	movlb	0	; () banked
  2591   001D86  6F91               	movwf	(_width+1)& (0+255),b
  2592   001D88  0E00               	movlw	0
  2593   001D8A  6F90               	movwf	_width& (0+255),b
  2594   001D8C  C090  F07F         	movff	_width,_flags
  2595   001D90                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2598   001D90  687B               	setf	_prec^0,c
  2599   001D92  687C               	setf	(_prec+1)^0,c
  2600   001D94                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2603   001D94  0E00               	movlw	0
  2604   001D96  6E61               	movwf	vfpfcnvrt@done^0,c
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2607   001D98  EFE8  F00E         	goto	l4237
  2608   001D9C                     l4227:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2611   001D9C  827F               	bsf	_flags^0,1,c
  2612   001D9E                     
  2613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2614   001D9E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2615   001DA0  6ED9               	movwf	fsr2l,c
  2616   001DA2  6ADA               	clrf	fsr2h,c
  2617   001DA4  2ADF               	incf	indf2,f,c
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2620   001DA6  EFE8  F00E         	goto	l4237
  2621   001DAA                     l4231:
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2624   001DAA  0E01               	movlw	1
  2625   001DAC  6E61               	movwf	vfpfcnvrt@done^0,c
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2628   001DAE  EFE8  F00E         	goto	l4237
  2629   001DB2                     l4235:
  2630   001DB2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2631   001DB4  6ED9               	movwf	fsr2l,c
  2632   001DB6  6ADA               	clrf	fsr2h,c
  2633   001DB8  CFDF FFF6          	movff	indf2,tblptrl
  2634   001DBC                     	if	1	;There is more than 1 active tblptr byte
  2635   001DBC  0E06               	movlw	high __smallconst
  2636   001DBE  6EF7               	movwf	tblptrh,c
  2637   001DC0                     	endif
  2638   001DC0                     	if	0	;tblptru may be non-zero
  2639   001DC0                     	endif
  2640   001DC0                     	if	0	;tblptru may be non-zero
  2641   001DC0                     	endif
  2642   001DC0  0008               	tblrd		*
  2643   001DC2  50F5               	movf	tablat,w,c
  2644                           
  2645                           ; Switch size 1, requested type "simple"
  2646                           ; Number of cases is 1, Range of values is 48 to 48
  2647                           ; switch strategies available:
  2648                           ; Name         Instructions Cycles
  2649                           ; simple_byte            4     3 (average)
  2650                           ;	Chosen strategy is simple_byte
  2651   001DC4  0A30               	xorlw	48	; case 48
  2652   001DC6  B4D8               	btfsc	status,2,c
  2653   001DC8  EFCE  F00E         	goto	l4227
  2654   001DCC  EFD5  F00E         	goto	l4231
  2655   001DD0                     l4237:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2658   001DD0  5061               	movf	vfpfcnvrt@done^0,w,c
  2659   001DD2  B4D8               	btfsc	status,2,c
  2660   001DD4  EFEE  F00E         	goto	u5011
  2661   001DD8  EFF0  F00E         	goto	u5010
  2662   001DDC                     u5011:
  2663   001DDC  EFD9  F00E         	goto	l4235
  2664   001DE0                     u5010:
  2665   001DE0                     
  2666                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2667   001DE0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2668   001DE2  6ED9               	movwf	fsr2l,c
  2669   001DE4  6ADA               	clrf	fsr2h,c
  2670   001DE6  CFDF FFF6          	movff	indf2,tblptrl
  2671   001DEA                     	if	1	;There is more than 1 active tblptr byte
  2672   001DEA  0E06               	movlw	high __smallconst
  2673   001DEC  6EF7               	movwf	tblptrh,c
  2674   001DEE                     	endif
  2675   001DEE                     	if	0	;tblptru may be non-zero
  2676   001DEE                     	endif
  2677   001DEE                     	if	0	;tblptru may be non-zero
  2678   001DEE                     	endif
  2679   001DEE  0008               	tblrd		*
  2680   001DF0  50F5               	movf	tablat,w,c
  2681   001DF2  0A2E               	xorlw	46
  2682   001DF4  A4D8               	btfss	status,2,c
  2683   001DF6  EFFF  F00E         	goto	u5021
  2684   001DFA  EF01  F00F         	goto	u5020
  2685   001DFE                     u5021:
  2686   001DFE  EF0F  F00F         	goto	l4245
  2687   001E02                     u5020:
  2688   001E02                     
  2689                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2690   001E02  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2691   001E04  6ED9               	movwf	fsr2l,c
  2692   001E06  6ADA               	clrf	fsr2h,c
  2693   001E08  2ADF               	incf	indf2,f,c
  2694   001E0A                     
  2695                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2696   001E0A  C05E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2697   001E0E  C05F  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2698   001E12  EC4B  F018         	call	_read_prec_or_width	;wreg free
  2699   001E16  C007  F07B         	movff	?_read_prec_or_width,_prec
  2700   001E1A  C008  F07C         	movff	?_read_prec_or_width+1,_prec+1
  2701   001E1E                     l4245:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  2704   001E1E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2705   001E20  6ED9               	movwf	fsr2l,c
  2706   001E22  6ADA               	clrf	fsr2h,c
  2707   001E24  CFDF FFF6          	movff	indf2,tblptrl
  2708   001E28                     	if	1	;There is more than 1 active tblptr byte
  2709   001E28  0E06               	movlw	high __smallconst
  2710   001E2A  6EF7               	movwf	tblptrh,c
  2711   001E2C                     	endif
  2712   001E2C                     	if	0	;tblptru may be non-zero
  2713   001E2C                     	endif
  2714   001E2C                     	if	0	;tblptru may be non-zero
  2715   001E2C                     	endif
  2716   001E2C  0008               	tblrd		*
  2717   001E2E  50F5               	movf	tablat,w,c
  2718   001E30  0A63               	xorlw	99
  2719   001E32  A4D8               	btfss	status,2,c
  2720   001E34  EF1E  F00F         	goto	u5031
  2721   001E38  EF20  F00F         	goto	u5030
  2722   001E3C                     u5031:
  2723   001E3C  EF37  F00F         	goto	l4255
  2724   001E40                     u5030:
  2725   001E40                     
  2726                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  2727   001E40  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2728   001E42  6ED9               	movwf	fsr2l,c
  2729   001E44  6ADA               	clrf	fsr2h,c
  2730   001E46  2ADF               	incf	indf2,f,c
  2731   001E48                     
  2732                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2733   001E48  505F               	movf	vfpfcnvrt@ap^0,w,c
  2734   001E4A  6ED9               	movwf	fsr2l,c
  2735   001E4C  6ADA               	clrf	fsr2h,c
  2736   001E4E  50DF               	movf	indf2,w,c
  2737   001E50  2ADF               	incf	indf2,f,c
  2738   001E52  2ADF               	incf	indf2,f,c
  2739   001E54  6ED9               	movwf	fsr2l,c
  2740   001E56  6ADA               	clrf	fsr2h,c
  2741   001E58  50DF               	movf	indf2,w,c
  2742   001E5A  6E66               	movwf	vfpfcnvrt@c^0,c
  2743   001E5C                     
  2744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1277:    fputc(c,
      +                           fp);
  2745   001E5C  C066  F001         	movff	vfpfcnvrt@c,fputc@c
  2746   001E60  6A02               	clrf	(fputc@c+1)^0,c
  2747   001E62  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2748   001E66  ECE7  F016         	call	_fputc	;wreg free
  2749   001E6A  EF1D  F010         	goto	l965
  2750   001E6E                     l4255:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2753   001E6E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2754   001E70  6ED9               	movwf	fsr2l,c
  2755   001E72  6ADA               	clrf	fsr2h,c
  2756   001E74  50DF               	movf	indf2,w,c
  2757   001E76  6E67               	movwf	vfpfcnvrt@cp^0,c
  2758   001E78                     
  2759                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2760   001E78  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2761   001E7C                     	if	1	;There is more than 1 active tblptr byte
  2762   001E7C  0E06               	movlw	high __smallconst
  2763   001E7E  6EF7               	movwf	tblptrh,c
  2764   001E80                     	endif
  2765   001E80                     	if	0	;tblptru may be non-zero
  2766   001E80                     	endif
  2767   001E80                     	if	0	;tblptru may be non-zero
  2768   001E80                     	endif
  2769   001E80  0008               	tblrd		*
  2770   001E82  50F5               	movf	tablat,w,c
  2771   001E84  0A64               	xorlw	100
  2772   001E86  B4D8               	btfsc	status,2,c
  2773   001E88  EF48  F00F         	goto	u5041
  2774   001E8C  EF4A  F00F         	goto	u5040
  2775   001E90                     u5041:
  2776   001E90  EF58  F00F         	goto	l4261
  2777   001E94                     u5040:
  2778   001E94  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2779   001E98                     	if	1	;There is more than 1 active tblptr byte
  2780   001E98  0E06               	movlw	high __smallconst
  2781   001E9A  6EF7               	movwf	tblptrh,c
  2782   001E9C                     	endif
  2783   001E9C                     	if	0	;tblptru may be non-zero
  2784   001E9C                     	endif
  2785   001E9C                     	if	0	;tblptru may be non-zero
  2786   001E9C                     	endif
  2787   001E9C  0008               	tblrd		*
  2788   001E9E  50F5               	movf	tablat,w,c
  2789   001EA0  0A69               	xorlw	105
  2790   001EA2  A4D8               	btfss	status,2,c
  2791   001EA4  EF56  F00F         	goto	u5051
  2792   001EA8  EF58  F00F         	goto	u5050
  2793   001EAC                     u5051:
  2794   001EAC  EF73  F00F         	goto	l4269
  2795   001EB0                     u5050:
  2796   001EB0                     l4261:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2799   001EB0  505F               	movf	vfpfcnvrt@ap^0,w,c
  2800   001EB2  6ED9               	movwf	fsr2l,c
  2801   001EB4  6ADA               	clrf	fsr2h,c
  2802   001EB6  0E02               	movlw	2
  2803   001EB8  26DF               	addwf	indf2,f,c
  2804   001EBA  5CDF               	subwf	indf2,w,c
  2805   001EBC  6ED9               	movwf	fsr2l,c
  2806   001EBE  6ADA               	clrf	fsr2h,c
  2807   001EC0  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg
  2808   001EC4  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+1
  2809   001EC8                     
  2810                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2811   001EC8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2812   001ECA  6ED9               	movwf	fsr2l,c
  2813   001ECC  6ADA               	clrf	fsr2h,c
  2814   001ECE  2867               	incf	vfpfcnvrt@cp^0,w,c
  2815   001ED0  6EDF               	movwf	indf2,c
  2816   001ED2                     
  2817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2818   001ED2  C05D  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2819   001ED6  C062  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2820   001EDA  C063  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2821   001EDE  ECE6  F012         	call	_dtoa	;wreg free
  2822   001EE2  EF1D  F010         	goto	l965
  2823   001EE6                     l4269:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2826   001EE6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2827   001EE8  6ED9               	movwf	fsr2l,c
  2828   001EEA  6ADA               	clrf	fsr2h,c
  2829   001EEC  50DF               	movf	indf2,w,c
  2830   001EEE  6E67               	movwf	vfpfcnvrt@cp^0,c
  2831   001EF0                     
  2832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2833   001EF0  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2834   001EF4                     	if	1	;There is more than 1 active tblptr byte
  2835   001EF4  0E06               	movlw	high __smallconst
  2836   001EF6  6EF7               	movwf	tblptrh,c
  2837   001EF8                     	endif
  2838   001EF8                     	if	0	;tblptru may be non-zero
  2839   001EF8                     	endif
  2840   001EF8                     	if	0	;tblptru may be non-zero
  2841   001EF8                     	endif
  2842   001EF8  0008               	tblrd		*
  2843   001EFA  CFF5 F066          	movff	tablat,vfpfcnvrt@c
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2846   001EFE  EF8C  F00F         	goto	l4281
  2847   001F02                     l4273:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2850   001F02  2A67               	incf	vfpfcnvrt@cp^0,f,c
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  2853   001F04  EF9B  F00F         	goto	l4283
  2854   001F08                     l4275:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2857   001F08  0E6C               	movlw	108
  2858   001F0A  6E66               	movwf	vfpfcnvrt@c^0,c
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  2861   001F0C  EF9B  F00F         	goto	l4283
  2862   001F10                     l4277:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2865   001F10  0E00               	movlw	0
  2866   001F12  6E66               	movwf	vfpfcnvrt@c^0,c
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  2869   001F14  EF9B  F00F         	goto	l4283
  2870   001F18                     l4281:
  2871   001F18  5066               	movf	vfpfcnvrt@c^0,w,c
  2872                           
  2873                           ; Switch size 1, requested type "simple"
  2874                           ; Number of cases is 3, Range of values is 76 to 108
  2875                           ; switch strategies available:
  2876                           ; Name         Instructions Cycles
  2877                           ; simple_byte           10     6 (average)
  2878                           ;	Chosen strategy is simple_byte
  2879   001F1A  0A4C               	xorlw	76	; case 76
  2880   001F1C  B4D8               	btfsc	status,2,c
  2881   001F1E  EF81  F00F         	goto	l4273
  2882   001F22  0A2A               	xorlw	42	; case 102
  2883   001F24  B4D8               	btfsc	status,2,c
  2884   001F26  EF84  F00F         	goto	l4275
  2885   001F2A  0A0A               	xorlw	10	; case 108
  2886   001F2C  B4D8               	btfsc	status,2,c
  2887   001F2E  EF81  F00F         	goto	l4273
  2888   001F32  EF88  F00F         	goto	l4277
  2889   001F36                     l4283:
  2890   001F36  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2891   001F3A                     	if	1	;There is more than 1 active tblptr byte
  2892   001F3A  0E06               	movlw	high __smallconst
  2893   001F3C  6EF7               	movwf	tblptrh,c
  2894   001F3E                     	endif
  2895   001F3E                     	if	0	;tblptru may be non-zero
  2896   001F3E                     	endif
  2897   001F3E                     	if	0	;tblptru may be non-zero
  2898   001F3E                     	endif
  2899   001F3E  0008               	tblrd		*
  2900   001F40  50F5               	movf	tablat,w,c
  2901   001F42  0A66               	xorlw	102
  2902   001F44  A4D8               	btfss	status,2,c
  2903   001F46  EFA7  F00F         	goto	u5061
  2904   001F4A  EFA9  F00F         	goto	u5060
  2905   001F4E                     u5061:
  2906   001F4E  EF06  F010         	goto	l4303
  2907   001F52                     u5060:
  2908   001F52  EFD3  F00F         	goto	l4291
  2909   001F56                     l4285:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2912   001F56  505F               	movf	vfpfcnvrt@ap^0,w,c
  2913   001F58  6ED9               	movwf	fsr2l,c
  2914   001F5A  6ADA               	clrf	fsr2h,c
  2915   001F5C  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2916   001F60  0E04               	movlw	4
  2917   001F62  26DF               	addwf	indf2,f,c
  2918   001F64  5060               	movf	??_vfpfcnvrt^0,w,c
  2919   001F66  6ED9               	movwf	fsr2l,c
  2920   001F68  6ADA               	clrf	fsr2h,c
  2921   001F6A  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg
  2922   001F6E  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+1
  2923   001F72  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+2
  2924   001F76  CFDE F065          	movff	postinc2,vfpfcnvrt@convarg+3
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  2927   001F7A  EFDE  F00F         	goto	l4293
  2928   001F7E                     l4287:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2931   001F7E  505F               	movf	vfpfcnvrt@ap^0,w,c
  2932   001F80  6ED9               	movwf	fsr2l,c
  2933   001F82  6ADA               	clrf	fsr2h,c
  2934   001F84  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2935   001F88  0E04               	movlw	4
  2936   001F8A  26DF               	addwf	indf2,f,c
  2937   001F8C  5060               	movf	??_vfpfcnvrt^0,w,c
  2938   001F8E  6ED9               	movwf	fsr2l,c
  2939   001F90  6ADA               	clrf	fsr2h,c
  2940   001F92  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg
  2941   001F96  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+1
  2942   001F9A  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+2
  2943   001F9E  CFDE F065          	movff	postinc2,vfpfcnvrt@convarg+3
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  2946   001FA2  EFDE  F00F         	goto	l4293
  2947   001FA6                     l4291:
  2948   001FA6  5066               	movf	vfpfcnvrt@c^0,w,c
  2949                           
  2950                           ; Switch size 1, requested type "simple"
  2951                           ; Number of cases is 2, Range of values is 76 to 108
  2952                           ; switch strategies available:
  2953                           ; Name         Instructions Cycles
  2954                           ; simple_byte            7     4 (average)
  2955                           ;	Chosen strategy is simple_byte
  2956   001FA8  0A4C               	xorlw	76	; case 76
  2957   001FAA  B4D8               	btfsc	status,2,c
  2958   001FAC  EFBF  F00F         	goto	l4287
  2959   001FB0  0A20               	xorlw	32	; case 108
  2960   001FB2  B4D8               	btfsc	status,2,c
  2961   001FB4  EFAB  F00F         	goto	l4285
  2962   001FB8  EFDE  F00F         	goto	l4293
  2963   001FBC                     l4293:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2966   001FBC  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2967   001FBE  6ED9               	movwf	fsr2l,c
  2968   001FC0  6ADA               	clrf	fsr2h,c
  2969   001FC2  2867               	incf	vfpfcnvrt@cp^0,w,c
  2970   001FC4  6EDF               	movwf	indf2,c
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2973   001FC6  EFFA  F00F         	goto	l4301
  2974   001FCA                     l4295:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2977   001FCA  C05D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2978   001FCE  C062  F056         	movff	vfpfcnvrt@convarg,efgtoa@f
  2979   001FD2  C063  F057         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2980   001FD6  C064  F058         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2981   001FDA  C065  F059         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2982   001FDE  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2983   001FE2                     	if	1	;There is more than 1 active tblptr byte
  2984   001FE2  0E06               	movlw	high __smallconst
  2985   001FE4  6EF7               	movwf	tblptrh,c
  2986   001FE6                     	endif
  2987   001FE6                     	if	0	;tblptru may be non-zero
  2988   001FE6                     	endif
  2989   001FE6                     	if	0	;tblptru may be non-zero
  2990   001FE6                     	endif
  2991   001FE6  0008               	tblrd		*
  2992   001FE8  CFF5 F05A          	movff	tablat,efgtoa@c
  2993   001FEC  EC40  F003         	call	_efgtoa	;wreg free
  2994   001FF0  EF1D  F010         	goto	l965
  2995   001FF4                     l4301:
  2996   001FF4  C067  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2997   001FF8                     	if	1	;There is more than 1 active tblptr byte
  2998   001FF8  0E06               	movlw	high __smallconst
  2999   001FFA  6EF7               	movwf	tblptrh,c
  3000   001FFC                     	endif
  3001   001FFC                     	if	0	;tblptru may be non-zero
  3002   001FFC                     	endif
  3003   001FFC                     	if	0	;tblptru may be non-zero
  3004   001FFC                     	endif
  3005   001FFC  0008               	tblrd		*
  3006   001FFE  50F5               	movf	tablat,w,c
  3007                           
  3008                           ; Switch size 1, requested type "simple"
  3009                           ; Number of cases is 1, Range of values is 102 to 102
  3010                           ; switch strategies available:
  3011                           ; Name         Instructions Cycles
  3012                           ; simple_byte            4     3 (average)
  3013                           ;	Chosen strategy is simple_byte
  3014   002000  0A66               	xorlw	102	; case 102
  3015   002002  B4D8               	btfsc	status,2,c
  3016   002004  EFE5  F00F         	goto	l4295
  3017   002008  EF06  F010         	goto	l4303
  3018   00200C                     l4303:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3021   00200C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  3022   00200E  6ED9               	movwf	fsr2l,c
  3023   002010  6ADA               	clrf	fsr2h,c
  3024   002012  2ADF               	incf	indf2,f,c
  3025   002014  EF1D  F010         	goto	l965
  3026   002018                     l4307:
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3029   002018  505E               	movf	vfpfcnvrt@fmt^0,w,c
  3030   00201A  6ED9               	movwf	fsr2l,c
  3031   00201C  6ADA               	clrf	fsr2h,c
  3032   00201E  CFDF FFF6          	movff	indf2,tblptrl
  3033   002022                     	if	1	;There is more than 1 active tblptr byte
  3034   002022  0E06               	movlw	high __smallconst
  3035   002024  6EF7               	movwf	tblptrh,c
  3036   002026                     	endif
  3037   002026                     	if	0	;tblptru may be non-zero
  3038   002026                     	endif
  3039   002026                     	if	0	;tblptru may be non-zero
  3040   002026                     	endif
  3041   002026  0008               	tblrd		*
  3042   002028  50F5               	movf	tablat,w,c
  3043   00202A  6E01               	movwf	fputc@c^0,c
  3044   00202C  6A02               	clrf	(fputc@c+1)^0,c
  3045   00202E  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3046   002032  ECE7  F016         	call	_fputc	;wreg free
  3047   002036  EF06  F010         	goto	l4303
  3048   00203A                     l965:
  3049   00203A  0012               	return		;funcret
  3050   00203C                     __end_of_vfpfcnvrt:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _read_prec_or_width *****************
  3054 ;; Defined at:
  3055 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3058 ;;		 -> vfprintf@cfmt(1), 
  3059 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3060 ;;		 -> sprintf@ap(1), 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  c               1    8[COMRAM] unsigned char 
  3063 ;;  n               2    9[COMRAM] int 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    6[COMRAM] int 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3073 ;;      Params:         2       0       0       0       0       0       0
  3074 ;;      Locals:         3       0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0
  3076 ;;      Totals:         5       0       0       0       0       0       0
  3077 ;;Total ram usage:        5 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 1
  3080 ;; This function calls:
  3081 ;;		___wmul
  3082 ;; This function is called by:
  3083 ;;		_vfpfcnvrt
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text14
  3088   003096                     __ptext14:
  3089                           	callstack 0
  3090   003096                     _read_prec_or_width:
  3091                           	callstack 25
  3092   003096                     
  3093                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3094   003096  0E00               	movlw	0
  3095   003098  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3096   00309A  0E00               	movlw	0
  3097   00309C  6E0A               	movwf	read_prec_or_width@n^0,c
  3098   00309E                     
  3099                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3100   00309E  5007               	movf	read_prec_or_width@fmt^0,w,c
  3101   0030A0  6ED9               	movwf	fsr2l,c
  3102   0030A2  6ADA               	clrf	fsr2h,c
  3103   0030A4  CFDF FFF6          	movff	indf2,tblptrl
  3104   0030A8                     	if	1	;There is more than 1 active tblptr byte
  3105   0030A8  0E06               	movlw	high __smallconst
  3106   0030AA  6EF7               	movwf	tblptrh,c
  3107   0030AC                     	endif
  3108   0030AC                     	if	0	;tblptru may be non-zero
  3109   0030AC                     	endif
  3110   0030AC                     	if	0	;tblptru may be non-zero
  3111   0030AC                     	endif
  3112   0030AC  0008               	tblrd		*
  3113   0030AE  50F5               	movf	tablat,w,c
  3114   0030B0  0A2A               	xorlw	42
  3115   0030B2  A4D8               	btfss	status,2,c
  3116   0030B4  EF5E  F018         	goto	u4101
  3117   0030B8  EF60  F018         	goto	u4100
  3118   0030BC                     u4101:
  3119   0030BC  EF86  F018         	goto	l3579
  3120   0030C0                     u4100:
  3121   0030C0                     
  3122                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3123   0030C0  5007               	movf	read_prec_or_width@fmt^0,w,c
  3124   0030C2  6ED9               	movwf	fsr2l,c
  3125   0030C4  6ADA               	clrf	fsr2h,c
  3126   0030C6  2ADF               	incf	indf2,f,c
  3127   0030C8                     
  3128                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3129   0030C8  5008               	movf	read_prec_or_width@ap^0,w,c
  3130   0030CA  6ED9               	movwf	fsr2l,c
  3131   0030CC  6ADA               	clrf	fsr2h,c
  3132   0030CE  0E02               	movlw	2
  3133   0030D0  26DF               	addwf	indf2,f,c
  3134   0030D2  5CDF               	subwf	indf2,w,c
  3135   0030D4  6ED9               	movwf	fsr2l,c
  3136   0030D6  6ADA               	clrf	fsr2h,c
  3137   0030D8  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3138   0030DC  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3141   0030E0  EF99  F018         	goto	l948
  3142   0030E4                     l3575:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3145   0030E4  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3146   0030E8  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3147   0030EC  0E00               	movlw	0
  3148   0030EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3149   0030F0  0E0A               	movlw	10
  3150   0030F2  6E03               	movwf	___wmul@multiplicand^0,c
  3151   0030F4  EC06  F01B         	call	___wmul	;wreg free
  3152   0030F8  5009               	movf	read_prec_or_width@c^0,w,c
  3153   0030FA  2401               	addwf	?___wmul^0,w,c
  3154   0030FC  6E0A               	movwf	read_prec_or_width@n^0,c
  3155   0030FE  0E00               	movlw	0
  3156   003100  2002               	addwfc	(?___wmul+1)^0,w,c
  3157   003102  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3158   003104                     
  3159                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3160   003104  5007               	movf	read_prec_or_width@fmt^0,w,c
  3161   003106  6ED9               	movwf	fsr2l,c
  3162   003108  6ADA               	clrf	fsr2h,c
  3163   00310A  2ADF               	incf	indf2,f,c
  3164   00310C                     l3579:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3167   00310C  5007               	movf	read_prec_or_width@fmt^0,w,c
  3168   00310E  6ED9               	movwf	fsr2l,c
  3169   003110  6ADA               	clrf	fsr2h,c
  3170   003112  CFDF FFF6          	movff	indf2,tblptrl
  3171   003116                     	if	1	;There is more than 1 active tblptr byte
  3172   003116  0E06               	movlw	high __smallconst
  3173   003118  6EF7               	movwf	tblptrh,c
  3174   00311A                     	endif
  3175   00311A                     	if	0	;tblptru may be non-zero
  3176   00311A                     	endif
  3177   00311A                     	if	0	;tblptru may be non-zero
  3178   00311A                     	endif
  3179   00311A  0008               	tblrd		*
  3180   00311C  50F5               	movf	tablat,w,c
  3181   00311E  0FD0               	addlw	208
  3182   003120  6E09               	movwf	read_prec_or_width@c^0,c
  3183   003122  0E09               	movlw	9
  3184   003124  6409               	cpfsgt	read_prec_or_width@c^0,c
  3185   003126  EF97  F018         	goto	u4111
  3186   00312A  EF99  F018         	goto	u4110
  3187   00312E                     u4111:
  3188   00312E  EF72  F018         	goto	l3575
  3189   003132                     u4110:
  3190   003132                     l948:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3193   003132  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3194   003136  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3195   00313A  0012               	return		;funcret
  3196   00313C                     __end_of_read_prec_or_width:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function ___wmul *****************
  3200 ;; Defined at:
  3201 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  multiplier      2    0[COMRAM] unsigned int 
  3204 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  product         2    4[COMRAM] unsigned int 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2    0[COMRAM] unsigned int 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, prodl, prodh
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3216 ;;      Params:         4       0       0       0       0       0       0
  3217 ;;      Locals:         2       0       0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0
  3219 ;;      Totals:         6       0       0       0       0       0       0
  3220 ;;Total ram usage:        6 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_read_prec_or_width
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text15
  3230   00360C                     __ptext15:
  3231                           	callstack 0
  3232   00360C                     ___wmul:
  3233                           	callstack 25
  3234   00360C  5001               	movf	___wmul@multiplier^0,w,c
  3235   00360E  0203               	mulwf	___wmul@multiplicand^0,c
  3236   003610  CFF3 F005          	movff	prodl,___wmul@product
  3237   003614  CFF4 F006          	movff	prodh,___wmul@product+1
  3238   003618  5001               	movf	___wmul@multiplier^0,w,c
  3239   00361A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3240   00361C  50F3               	movf	243,w,c
  3241   00361E  2606               	addwf	(___wmul@product+1)^0,f,c
  3242   003620  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3243   003622  0203               	mulwf	___wmul@multiplicand^0,c
  3244   003624  50F3               	movf	243,w,c
  3245   003626  2606               	addwf	(___wmul@product+1)^0,f,c
  3246   003628  C005  F001         	movff	___wmul@product,?___wmul
  3247   00362C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3248   003630  0012               	return		;funcret
  3249   003632                     __end_of___wmul:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _efgtoa *****************
  3253 ;; Defined at:
  3254 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  fp              1   84[COMRAM] PTR struct _IO_FILE
  3257 ;;		 -> sprintf@f(12), 
  3258 ;;  f               4   85[COMRAM] PTR struct _IO_FILE
  3259 ;;  c               1   89[COMRAM] unsigned char 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  u               4   40[BANK0 ] struct flui
  3262 ;;  g               4   34[BANK0 ] struct flui
  3263 ;;  l               4   27[BANK0 ] struct flui
  3264 ;;  h               4   23[BANK0 ] struct flui
  3265 ;;  ou              4   17[BANK0 ] struct flui
  3266 ;;  n               2   38[BANK0 ] int 
  3267 ;;  i               2   31[BANK0 ] int 
  3268 ;;  w               2   21[BANK0 ] int 
  3269 ;;  e               2   15[BANK0 ] int 
  3270 ;;  m               2   13[BANK0 ] int 
  3271 ;;  d               2   11[BANK0 ] int 
  3272 ;;  t               2    4[BANK0 ] int 
  3273 ;;  p               2    2[BANK0 ] int 
  3274 ;;  ne              2    0[BANK0 ] int 
  3275 ;;  sign            1   33[BANK0 ] unsigned char 
  3276 ;;  nmode           1   10[BANK0 ] unsigned char 
  3277 ;;  mode            1    9[BANK0 ] unsigned char 
  3278 ;;  pp              1    8[BANK0 ] unsigned char 
  3279 ;;  esign           1    0        unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3289 ;;      Params:         6       0       0       0       0       0       0
  3290 ;;      Locals:         0      44       0       0       0       0       0
  3291 ;;      Temps:          2       0       0       0       0       0       0
  3292 ;;      Totals:         8      44       0       0       0       0       0
  3293 ;;Total ram usage:       52 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 4
  3296 ;; This function calls:
  3297 ;;		___fladd
  3298 ;;		___fldiv
  3299 ;;		___fleq
  3300 ;;		___flge
  3301 ;;		___flmul
  3302 ;;		___flneg
  3303 ;;		___flsub
  3304 ;;		___fltol
  3305 ;;		___fpclassifyf
  3306 ;;		_floorf
  3307 ;;		_labs
  3308 ;;		_memcpy
  3309 ;;		_pad
  3310 ;;		_strcpy
  3311 ;; This function is called by:
  3312 ;;		_vfpfcnvrt
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text16
  3317   000680                     __ptext16:
  3318                           	callstack 0
  3319   000680                     _efgtoa:
  3320                           	callstack 22
  3321   000680                     
  3322                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3323   000680  0E00               	movlw	0
  3324   000682  0100               	movlb	0	; () banked
  3325   000684  6FE1               	movwf	efgtoa@sign& (0+255),b
  3326   000686                     
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3329   000686  C056  F0E2         	movff	efgtoa@f,efgtoa@g
  3330   00068A  C057  F0E3         	movff	efgtoa@f+1,efgtoa@g+1
  3331   00068E  C058  F0E4         	movff	efgtoa@f+2,efgtoa@g+2
  3332   000692  C059  F0E5         	movff	efgtoa@f+3,efgtoa@g+3
  3333   000696                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3336   000696  BFE5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3337   000698  EF52  F003         	goto	u4650
  3338   00069C  EF50  F003         	goto	u4651
  3339   0006A0                     u4651:
  3340   0006A0  EF66  F003         	goto	l3993
  3341   0006A4                     u4650:
  3342   0006A4                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3345   0006A4  0E01               	movlw	1
  3346   0006A6  6FE1               	movwf	efgtoa@sign& (0+255),b
  3347   0006A8                     
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3350   0006A8  C0E2  F001         	movff	efgtoa@g,___flneg@f1
  3351   0006AC  C0E3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3352   0006B0  C0E4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3353   0006B4  C0E5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3354   0006B8  EC89  F01A         	call	___flneg	;wreg free
  3355   0006BC  C001  F0E2         	movff	?___flneg,efgtoa@g
  3356   0006C0  C002  F0E3         	movff	?___flneg+1,efgtoa@g+1
  3357   0006C4  C003  F0E4         	movff	?___flneg+2,efgtoa@g+2
  3358   0006C8  C004  F0E5         	movff	?___flneg+3,efgtoa@g+3
  3359   0006CC                     l3993:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3362   0006CC  0E00               	movlw	0
  3363   0006CE  0100               	movlb	0	; () banked
  3364   0006D0  6FE7               	movwf	(efgtoa@n+1)& (0+255),b
  3365   0006D2  0E00               	movlw	0
  3366   0006D4  6FE6               	movwf	efgtoa@n& (0+255),b
  3367   0006D6                     
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3370   0006D6  C090  F0D5         	movff	_width,efgtoa@w
  3371   0006DA  C091  F0D6         	movff	_width+1,efgtoa@w+1
  3372   0006DE                     
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3375   0006DE  51E1               	movf	efgtoa@sign& (0+255),w,b
  3376   0006E0  B4D8               	btfsc	status,2,c
  3377   0006E2  EF75  F003         	goto	u4661
  3378   0006E6  EF77  F003         	goto	u4660
  3379   0006EA                     u4661:
  3380   0006EA  EF8B  F003         	goto	l4007
  3381   0006EE                     u4660:
  3382   0006EE                     
  3383                           ; BSR set to: 0
  3384                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3385   0006EE  51E1               	movf	efgtoa@sign& (0+255),w,b
  3386   0006F0  A4D8               	btfss	status,2,c
  3387   0006F2  EF7D  F003         	goto	u4671
  3388   0006F6  EF7F  F003         	goto	u4670
  3389   0006FA                     u4671:
  3390   0006FA  EF85  F003         	goto	l4003
  3391   0006FE                     u4670:
  3392   0006FE                     
  3393                           ; BSR set to: 0
  3394   0006FE  0E00               	movlw	0
  3395   000700  6FC7               	movwf	(_efgtoa$1155+1)& (0+255),b
  3396   000702  0E2B               	movlw	43
  3397   000704  6FC6               	movwf	_efgtoa$1155& (0+255),b
  3398   000706  EF89  F003         	goto	l4005
  3399   00070A                     l4003:
  3400                           
  3401                           ; BSR set to: 0
  3402   00070A  0E00               	movlw	0
  3403   00070C  6FC7               	movwf	(_efgtoa$1155+1)& (0+255),b
  3404   00070E  0E2D               	movlw	45
  3405   000710  6FC6               	movwf	_efgtoa$1155& (0+255),b
  3406   000712                     l4005:
  3407                           
  3408                           ; BSR set to: 0
  3409   000712  C0C6  F0E1         	movff	_efgtoa$1155,efgtoa@sign
  3410   000716                     l4007:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3414   000716  C0E2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3415   00071A  C0E3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3416   00071E  C0E4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3417   000722  C0E5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3418   000726  ECC3  F014         	call	___fpclassifyf	;wreg free
  3419   00072A  0401               	decf	?___fpclassifyf^0,w,c
  3420   00072C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3421   00072E  A4D8               	btfss	status,2,c
  3422   000730  EF9C  F003         	goto	u4681
  3423   000734  EF9E  F003         	goto	u4680
  3424   000738                     u4681:
  3425   000738  EFCD  F003         	goto	l4025
  3426   00073C                     u4680:
  3427   00073C                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3429   00073C  0100               	movlb	0	; () banked
  3430   00073E  51E1               	movf	efgtoa@sign& (0+255),w,b
  3431   000740  B4D8               	btfsc	status,2,c
  3432   000742  EFA5  F003         	goto	u4691
  3433   000746  EFA7  F003         	goto	u4690
  3434   00074A                     u4691:
  3435   00074A  EFB0  F003         	goto	l4017
  3436   00074E                     u4690:
  3437   00074E                     
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3440   00074E  C0E1  F100         	movff	efgtoa@sign,_dbuf
  3441   000752                     
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  3444   000752  07D5               	decf	efgtoa@w& (0+255),f,b
  3445   000754  A0D8               	btfss	status,0,c
  3446   000756  07D6               	decf	(efgtoa@w+1)& (0+255),f,b
  3447   000758                     
  3448                           ; BSR set to: 0
  3449                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3450   000758  0E00               	movlw	0
  3451   00075A  6FE7               	movwf	(efgtoa@n+1)& (0+255),b
  3452   00075C  0E01               	movlw	1
  3453   00075E  6FE6               	movwf	efgtoa@n& (0+255),b
  3454   000760                     l4017:
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3458   000760  0E00               	movlw	low _dbuf
  3459   000762  25E6               	addwf	efgtoa@n& (0+255),w,b
  3460   000764  6E01               	movwf	strcpy@dest^0,c
  3461   000766  0E01               	movlw	high _dbuf
  3462   000768  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3463   00076A  6E02               	movwf	(strcpy@dest+1)^0,c
  3464   00076C  0E74               	movlw	low STR_13
  3465   00076E  6E03               	movwf	strcpy@src^0,c
  3466   000770  EC6C  F01A         	call	_strcpy	;wreg free
  3467   000774                     l4019:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3470   000774  0100               	movlb	0	; () banked
  3471   000776  0EFD               	movlw	253
  3472   000778  27D5               	addwf	efgtoa@w& (0+255),f,b
  3473   00077A  0EFF               	movlw	255
  3474   00077C  23D6               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3475   00077E                     
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3478   00077E  C055  F00F         	movff	efgtoa@fp,pad@fp
  3479   000782  0E00               	movlw	low _dbuf
  3480   000784  6E10               	movwf	pad@buf^0,c
  3481   000786  0E01               	movlw	high _dbuf
  3482   000788  6E11               	movwf	(pad@buf+1)^0,c
  3483   00078A  C0D5  F012         	movff	efgtoa@w,pad@p
  3484   00078E  C0D6  F013         	movff	efgtoa@w+1,pad@p+1
  3485   000792  EC3D  F019         	call	_pad	;wreg free
  3486   000796  EF69  F008         	goto	l897
  3487   00079A                     l4025:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3490   00079A  C0E2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3491   00079E  C0E3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3492   0007A2  C0E4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3493   0007A6  C0E5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3494   0007AA  ECC3  F014         	call	___fpclassifyf	;wreg free
  3495   0007AE  5001               	movf	?___fpclassifyf^0,w,c
  3496   0007B0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3497   0007B2  A4D8               	btfss	status,2,c
  3498   0007B4  EFDE  F003         	goto	u4701
  3499   0007B8  EFE0  F003         	goto	u4700
  3500   0007BC                     u4701:
  3501   0007BC  EFFE  F003         	goto	l4043
  3502   0007C0                     u4700:
  3503   0007C0                     
  3504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3505   0007C0  0100               	movlb	0	; () banked
  3506   0007C2  51E1               	movf	efgtoa@sign& (0+255),w,b
  3507   0007C4  B4D8               	btfsc	status,2,c
  3508   0007C6  EFE7  F003         	goto	u4711
  3509   0007CA  EFE9  F003         	goto	u4710
  3510   0007CE                     u4711:
  3511   0007CE  EFF2  F003         	goto	l4035
  3512   0007D2                     u4710:
  3513   0007D2                     
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3516   0007D2  C0E1  F100         	movff	efgtoa@sign,_dbuf
  3517   0007D6                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  3520   0007D6  07D5               	decf	efgtoa@w& (0+255),f,b
  3521   0007D8  A0D8               	btfss	status,0,c
  3522   0007DA  07D6               	decf	(efgtoa@w+1)& (0+255),f,b
  3523   0007DC                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3526   0007DC  0E00               	movlw	0
  3527   0007DE  6FE7               	movwf	(efgtoa@n+1)& (0+255),b
  3528   0007E0  0E01               	movlw	1
  3529   0007E2  6FE6               	movwf	efgtoa@n& (0+255),b
  3530   0007E4                     l4035:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3534   0007E4  0E00               	movlw	low _dbuf
  3535   0007E6  25E6               	addwf	efgtoa@n& (0+255),w,b
  3536   0007E8  6E01               	movwf	strcpy@dest^0,c
  3537   0007EA  0E01               	movlw	high _dbuf
  3538   0007EC  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3539   0007EE  6E02               	movwf	(strcpy@dest+1)^0,c
  3540   0007F0  0E78               	movlw	low STR_16
  3541   0007F2  6E03               	movwf	strcpy@src^0,c
  3542   0007F4  EC6C  F01A         	call	_strcpy	;wreg free
  3543   0007F8  EFBA  F003         	goto	l4019
  3544   0007FC                     l4043:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3547   0007FC  0E00               	movlw	0
  3548   0007FE  0100               	movlb	0	; () banked
  3549   000800  6FE8               	movwf	efgtoa@u& (0+255),b
  3550   000802  0E00               	movlw	0
  3551   000804  6FE9               	movwf	(efgtoa@u+1)& (0+255),b
  3552   000806  0E80               	movlw	128
  3553   000808  6FEA               	movwf	(efgtoa@u+2)& (0+255),b
  3554   00080A  0E3F               	movlw	63
  3555   00080C  6FEB               	movwf	(efgtoa@u+3)& (0+255),b
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3558   00080E  0E00               	movlw	0
  3559   000810  6FD0               	movwf	(efgtoa@e+1)& (0+255),b
  3560   000812  0E00               	movlw	0
  3561   000814  6FCF               	movwf	efgtoa@e& (0+255),b
  3562   000816                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3565   000816  C0E2  F001         	movff	efgtoa@g,___fleq@ff1
  3566   00081A  C0E3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3567   00081E  C0E4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3568   000822  C0E5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3569   000826  0E00               	movlw	0
  3570   000828  6E05               	movwf	___fleq@ff2^0,c
  3571   00082A  0E00               	movlw	0
  3572   00082C  6E06               	movwf	(___fleq@ff2+1)^0,c
  3573   00082E  0E00               	movlw	0
  3574   000830  6E07               	movwf	(___fleq@ff2+2)^0,c
  3575   000832  0E00               	movlw	0
  3576   000834  6E08               	movwf	(___fleq@ff2+3)^0,c
  3577   000836  ECF6  F017         	call	___fleq	;wreg free
  3578   00083A  B0D8               	btfsc	status,0,c
  3579   00083C  EF22  F004         	goto	u4721
  3580   000840  EF24  F004         	goto	u4720
  3581   000844                     u4721:
  3582   000844  EF03  F005         	goto	l900
  3583   000848                     u4720:
  3584   000848  EF31  F004         	goto	l4051
  3585   00084C                     l902:
  3586                           
  3587                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3588   00084C  C0D1  F0E8         	movff	efgtoa@ou,efgtoa@u
  3589   000850  C0D2  F0E9         	movff	efgtoa@ou+1,efgtoa@u+1
  3590   000854  C0D3  F0EA         	movff	efgtoa@ou+2,efgtoa@u+2
  3591   000858  C0D4  F0EB         	movff	efgtoa@ou+3,efgtoa@u+3
  3592   00085C                     
  3593                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3594   00085C  0100               	movlb	0	; () banked
  3595   00085E  4BCF               	infsnz	efgtoa@e& (0+255),f,b
  3596   000860  2BD0               	incf	(efgtoa@e+1)& (0+255),f,b
  3597   000862                     l4051:
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3600   000862  C0E8  F00F         	movff	efgtoa@u,___flmul@b
  3601   000866  C0E9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3602   00086A  C0EA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3603   00086E  C0EB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3604   000872  0E00               	movlw	0
  3605   000874  6E13               	movwf	___flmul@a^0,c
  3606   000876  0E00               	movlw	0
  3607   000878  6E14               	movwf	(___flmul@a+1)^0,c
  3608   00087A  0E20               	movlw	32
  3609   00087C  6E15               	movwf	(___flmul@a+2)^0,c
  3610   00087E  0E41               	movlw	65
  3611   000880  6E16               	movwf	(___flmul@a+3)^0,c
  3612   000882  ECCA  F00A         	call	___flmul	;wreg free
  3613   000886  C00F  F0D1         	movff	?___flmul,efgtoa@ou
  3614   00088A  C010  F0D2         	movff	?___flmul+1,efgtoa@ou+1
  3615   00088E  C011  F0D3         	movff	?___flmul+2,efgtoa@ou+2
  3616   000892  C012  F0D4         	movff	?___flmul+3,efgtoa@ou+3
  3617   000896  0100               	movlb	0	; () banked
  3618   000898  51D1               	movf	efgtoa@ou& (0+255),w,b
  3619   00089A  5DE2               	subwf	efgtoa@g& (0+255),w,b
  3620   00089C  6E01               	movwf	labs@a^0,c
  3621   00089E  51D2               	movf	(efgtoa@ou+1)& (0+255),w,b
  3622   0008A0  59E3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3623   0008A2  6E02               	movwf	(labs@a+1)^0,c
  3624   0008A4  51D3               	movf	(efgtoa@ou+2)& (0+255),w,b
  3625   0008A6  59E4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3626   0008A8  6E03               	movwf	(labs@a+2)^0,c
  3627   0008AA  51D4               	movf	(efgtoa@ou+3)& (0+255),w,b
  3628   0008AC  59E5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3629   0008AE  6E04               	movwf	(labs@a+3)^0,c
  3630   0008B0  EC70  F019         	call	_labs	;wreg free
  3631   0008B4  BE04               	btfsc	(?_labs+3)^0,7,c
  3632   0008B6  EF68  F004         	goto	u4731
  3633   0008BA  5004               	movf	(?_labs+3)^0,w,c
  3634   0008BC  1003               	iorwf	(?_labs+2)^0,w,c
  3635   0008BE  1002               	iorwf	(?_labs+1)^0,w,c
  3636   0008C0  E109               	bnz	u4730
  3637   0008C2  0E02               	movlw	2
  3638   0008C4  5C01               	subwf	?_labs^0,w,c
  3639   0008C6  A0D8               	btfss	status,0,c
  3640   0008C8  EF68  F004         	goto	u4731
  3641   0008CC  EF6A  F004         	goto	u4730
  3642   0008D0                     u4731:
  3643   0008D0  EF26  F004         	goto	l902
  3644   0008D4                     u4730:
  3645   0008D4  C0D1  F028         	movff	efgtoa@ou,___flge@ff1
  3646   0008D8  C0D2  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  3647   0008DC  C0D3  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  3648   0008E0  C0D4  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  3649   0008E4  C0E2  F02C         	movff	efgtoa@g,___flge@ff2
  3650   0008E8  C0E3  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  3651   0008EC  C0E4  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  3652   0008F0  C0E5  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  3653   0008F4  EC41  F014         	call	___flge	;wreg free
  3654   0008F8  A0D8               	btfss	status,0,c
  3655   0008FA  EF81  F004         	goto	u4741
  3656   0008FE  EF83  F004         	goto	u4740
  3657   000902                     u4741:
  3658   000902  EF26  F004         	goto	l902
  3659   000906                     u4740:
  3660   000906                     
  3661                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3662   000906  0100               	movlb	0	; () banked
  3663   000908  51E8               	movf	efgtoa@u& (0+255),w,b
  3664   00090A  5DE2               	subwf	efgtoa@g& (0+255),w,b
  3665   00090C  6E01               	movwf	labs@a^0,c
  3666   00090E  51E9               	movf	(efgtoa@u+1)& (0+255),w,b
  3667   000910  59E3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3668   000912  6E02               	movwf	(labs@a+1)^0,c
  3669   000914  51EA               	movf	(efgtoa@u+2)& (0+255),w,b
  3670   000916  59E4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3671   000918  6E03               	movwf	(labs@a+2)^0,c
  3672   00091A  51EB               	movf	(efgtoa@u+3)& (0+255),w,b
  3673   00091C  59E5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3674   00091E  6E04               	movwf	(labs@a+3)^0,c
  3675   000920  EC70  F019         	call	_labs	;wreg free
  3676   000924  BE04               	btfsc	(?_labs+3)^0,7,c
  3677   000926  EFA2  F004         	goto	u4750
  3678   00092A  5004               	movf	(?_labs+3)^0,w,c
  3679   00092C  1003               	iorwf	(?_labs+2)^0,w,c
  3680   00092E  1002               	iorwf	(?_labs+1)^0,w,c
  3681   000930  E107               	bnz	u4751
  3682   000932  0E02               	movlw	2
  3683   000934  5C01               	subwf	?_labs^0,w,c
  3684   000936  B0D8               	btfsc	status,0,c
  3685   000938  EFA0  F004         	goto	u4751
  3686   00093C  EFA2  F004         	goto	u4750
  3687   000940                     u4751:
  3688   000940  EFEA  F004         	goto	l4069
  3689   000944                     u4750:
  3690   000944                     l4059:
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3693   000944  C0E8  F0E2         	movff	efgtoa@u,efgtoa@g
  3694   000948  C0E9  F0E3         	movff	efgtoa@u+1,efgtoa@g+1
  3695   00094C  C0EA  F0E4         	movff	efgtoa@u+2,efgtoa@g+2
  3696   000950  C0EB  F0E5         	movff	efgtoa@u+3,efgtoa@g+3
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  3699   000954  EF03  F005         	goto	l900
  3700   000958                     l4061:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3703   000958  C0E8  F028         	movff	efgtoa@u,___fldiv@b
  3704   00095C  C0E9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3705   000960  C0EA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3706   000964  C0EB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3707   000968  0E00               	movlw	0
  3708   00096A  6E2C               	movwf	___fldiv@a^0,c
  3709   00096C  0E00               	movlw	0
  3710   00096E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3711   000970  0E20               	movlw	32
  3712   000972  6E2E               	movwf	(___fldiv@a+2)^0,c
  3713   000974  0E41               	movlw	65
  3714   000976  6E2F               	movwf	(___fldiv@a+3)^0,c
  3715   000978  ECDF  F00C         	call	___fldiv	;wreg free
  3716   00097C  C028  F0E8         	movff	?___fldiv,efgtoa@u
  3717   000980  C029  F0E9         	movff	?___fldiv+1,efgtoa@u+1
  3718   000984  C02A  F0EA         	movff	?___fldiv+2,efgtoa@u+2
  3719   000988  C02B  F0EB         	movff	?___fldiv+3,efgtoa@u+3
  3720   00098C                     
  3721                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  3722   00098C  0100               	movlb	0	; () banked
  3723   00098E  07CF               	decf	efgtoa@e& (0+255),f,b
  3724   000990  A0D8               	btfss	status,0,c
  3725   000992  07D0               	decf	(efgtoa@e+1)& (0+255),f,b
  3726   000994                     
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3729   000994  51E8               	movf	efgtoa@u& (0+255),w,b
  3730   000996  5DE2               	subwf	efgtoa@g& (0+255),w,b
  3731   000998  6E01               	movwf	labs@a^0,c
  3732   00099A  51E9               	movf	(efgtoa@u+1)& (0+255),w,b
  3733   00099C  59E3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3734   00099E  6E02               	movwf	(labs@a+1)^0,c
  3735   0009A0  51EA               	movf	(efgtoa@u+2)& (0+255),w,b
  3736   0009A2  59E4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3737   0009A4  6E03               	movwf	(labs@a+2)^0,c
  3738   0009A6  51EB               	movf	(efgtoa@u+3)& (0+255),w,b
  3739   0009A8  59E5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3740   0009AA  6E04               	movwf	(labs@a+3)^0,c
  3741   0009AC  EC70  F019         	call	_labs	;wreg free
  3742   0009B0  BE04               	btfsc	(?_labs+3)^0,7,c
  3743   0009B2  EFE8  F004         	goto	u4760
  3744   0009B6  5004               	movf	(?_labs+3)^0,w,c
  3745   0009B8  1003               	iorwf	(?_labs+2)^0,w,c
  3746   0009BA  1002               	iorwf	(?_labs+1)^0,w,c
  3747   0009BC  E107               	bnz	u4761
  3748   0009BE  0E02               	movlw	2
  3749   0009C0  5C01               	subwf	?_labs^0,w,c
  3750   0009C2  B0D8               	btfsc	status,0,c
  3751   0009C4  EFE6  F004         	goto	u4761
  3752   0009C8  EFE8  F004         	goto	u4760
  3753   0009CC                     u4761:
  3754   0009CC  EFEA  F004         	goto	l4069
  3755   0009D0                     u4760:
  3756   0009D0  EFA2  F004         	goto	l4059
  3757   0009D4                     l4069:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3760   0009D4  C0E2  F028         	movff	efgtoa@g,___flge@ff1
  3761   0009D8  C0E3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3762   0009DC  C0E4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3763   0009E0  C0E5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3764   0009E4  C0E8  F02C         	movff	efgtoa@u,___flge@ff2
  3765   0009E8  C0E9  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3766   0009EC  C0EA  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3767   0009F0  C0EB  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3768   0009F4  EC41  F014         	call	___flge	;wreg free
  3769   0009F8  A0D8               	btfss	status,0,c
  3770   0009FA  EF01  F005         	goto	u4771
  3771   0009FE  EF03  F005         	goto	u4770
  3772   000A02                     u4771:
  3773   000A02  EFAC  F004         	goto	l4061
  3774   000A06                     u4770:
  3775   000A06                     l900:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3778   000A06  C05A  F0C9         	movff	efgtoa@c,efgtoa@mode
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3781   000A0A  C0C9  F0CA         	movff	efgtoa@mode,efgtoa@nmode
  3782   000A0E                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3784   000A0E  BE7C               	btfsc	(_prec+1)^0,7,c
  3785   000A10  EF0C  F005         	goto	u4781
  3786   000A14  EF0E  F005         	goto	u4780
  3787   000A18                     u4781:
  3788   000A18  EF14  F005         	goto	l4075
  3789   000A1C                     u4780:
  3790   000A1C  C07B  F0C2         	movff	_prec,efgtoa@p
  3791   000A20  C07C  F0C3         	movff	_prec+1,efgtoa@p+1
  3792   000A24  EF19  F005         	goto	l4077
  3793   000A28                     l4075:
  3794   000A28  0E00               	movlw	0
  3795   000A2A  0100               	movlb	0	; () banked
  3796   000A2C  6FC3               	movwf	(efgtoa@p+1)& (0+255),b
  3797   000A2E  0E06               	movlw	6
  3798   000A30  6FC2               	movwf	efgtoa@p& (0+255),b
  3799   000A32                     l4077:
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3802   000A32  C0C2  F0CD         	movff	efgtoa@p,efgtoa@m
  3803   000A36  C0C3  F0CE         	movff	efgtoa@p+1,efgtoa@m+1
  3804   000A3A                     
  3805                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3806   000A3A  0100               	movlb	0	; () banked
  3807   000A3C  4BCD               	infsnz	efgtoa@m& (0+255),f,b
  3808   000A3E  2BCE               	incf	(efgtoa@m+1)& (0+255),f,b
  3809   000A40                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3812   000A40  0E66               	movlw	102
  3813   000A42  19CA               	xorwf	efgtoa@nmode& (0+255),w,b
  3814   000A44  A4D8               	btfss	status,2,c
  3815   000A46  EF27  F005         	goto	u4791
  3816   000A4A  EF29  F005         	goto	u4790
  3817   000A4E                     u4791:
  3818   000A4E  EF49  F005         	goto	l4091
  3819   000A52                     u4790:
  3820   000A52                     
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3823   000A52  BFD0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3824   000A54  EF30  F005         	goto	u4800
  3825   000A58  EF2E  F005         	goto	u4801
  3826   000A5C                     u4801:
  3827   000A5C  EF3C  F005         	goto	l4087
  3828   000A60                     u4800:
  3829   000A60                     
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3832   000A60  0E00               	movlw	0
  3833   000A62  6FE8               	movwf	efgtoa@u& (0+255),b
  3834   000A64  0E00               	movlw	0
  3835   000A66  6FE9               	movwf	(efgtoa@u+1)& (0+255),b
  3836   000A68  0E80               	movlw	128
  3837   000A6A  6FEA               	movwf	(efgtoa@u+2)& (0+255),b
  3838   000A6C  0E3F               	movlw	63
  3839   000A6E  6FEB               	movwf	(efgtoa@u+3)& (0+255),b
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3842   000A70  0E00               	movlw	0
  3843   000A72  6FD0               	movwf	(efgtoa@e+1)& (0+255),b
  3844   000A74  0E00               	movlw	0
  3845   000A76  6FCF               	movwf	efgtoa@e& (0+255),b
  3846   000A78                     l4087:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3850   000A78  0E67               	movlw	103
  3851   000A7A  19C9               	xorwf	efgtoa@mode& (0+255),w,b
  3852   000A7C  B4D8               	btfsc	status,2,c
  3853   000A7E  EF43  F005         	goto	u4811
  3854   000A82  EF45  F005         	goto	u4810
  3855   000A86                     u4811:
  3856   000A86  EF49  F005         	goto	l4091
  3857   000A8A                     u4810:
  3858   000A8A                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3861   000A8A  51CF               	movf	efgtoa@e& (0+255),w,b
  3862   000A8C  27CD               	addwf	efgtoa@m& (0+255),f,b
  3863   000A8E  51D0               	movf	(efgtoa@e+1)& (0+255),w,b
  3864   000A90  23CE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3865   000A92                     l4091:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3869   000A92  0E00               	movlw	0
  3870   000A94  6FE0               	movwf	(efgtoa@i+1)& (0+255),b
  3871   000A96  0E00               	movlw	0
  3872   000A98  6FDF               	movwf	efgtoa@i& (0+255),b
  3873   000A9A                     
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3876   000A9A  C0E2  F0D7         	movff	efgtoa@g,efgtoa@h
  3877   000A9E  C0E3  F0D8         	movff	efgtoa@g+1,efgtoa@h+1
  3878   000AA2  C0E4  F0D9         	movff	efgtoa@g+2,efgtoa@h+2
  3879   000AA6  C0E5  F0DA         	movff	efgtoa@g+3,efgtoa@h+3
  3880   000AAA                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3883   000AAA  C0E8  F0D1         	movff	efgtoa@u,efgtoa@ou
  3884   000AAE  C0E9  F0D2         	movff	efgtoa@u+1,efgtoa@ou+1
  3885   000AB2  C0EA  F0D3         	movff	efgtoa@u+2,efgtoa@ou+2
  3886   000AB6  C0EB  F0D4         	movff	efgtoa@u+3,efgtoa@ou+3
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3889   000ABA  EFDA  F005         	goto	l4105
  3890   000ABE                     l4097:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3894   000ABE  C0D7  F028         	movff	efgtoa@h,___fldiv@b
  3895   000AC2  C0D8  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3896   000AC6  C0D9  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3897   000ACA  C0DA  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3898   000ACE  C0E8  F02C         	movff	efgtoa@u,___fldiv@a
  3899   000AD2  C0E9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3900   000AD6  C0EA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3901   000ADA  C0EB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3902   000ADE  ECDF  F00C         	call	___fldiv	;wreg free
  3903   000AE2  C028  F041         	movff	?___fldiv,floorf@x
  3904   000AE6  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3905   000AEA  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3906   000AEE  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3907   000AF2  EC1E  F010         	call	_floorf	;wreg free
  3908   000AF6  C041  F0DB         	movff	?_floorf,efgtoa@l
  3909   000AFA  C042  F0DC         	movff	?_floorf+1,efgtoa@l+1
  3910   000AFE  C043  F0DD         	movff	?_floorf+2,efgtoa@l+2
  3911   000B02  C044  F0DE         	movff	?_floorf+3,efgtoa@l+3
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3914   000B06  C0DB  F001         	movff	efgtoa@l,___fltol@f1
  3915   000B0A  C0DC  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3916   000B0E  C0DD  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3917   000B12  C0DE  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3918   000B16  ECBE  F013         	call	___fltol	;wreg free
  3919   000B1A  C001  F0CB         	movff	?___fltol,efgtoa@d
  3920   000B1E  C002  F0CC         	movff	?___fltol+1,efgtoa@d+1
  3921   000B22                     
  3922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3923   000B22  C0D7  F028         	movff	efgtoa@h,___flsub@b
  3924   000B26  C0D8  F029         	movff	efgtoa@h+1,___flsub@b+1
  3925   000B2A  C0D9  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3926   000B2E  C0DA  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3927   000B32  C0DB  F013         	movff	efgtoa@l,___flmul@a
  3928   000B36  C0DC  F014         	movff	efgtoa@l+1,___flmul@a+1
  3929   000B3A  C0DD  F015         	movff	efgtoa@l+2,___flmul@a+2
  3930   000B3E  C0DE  F016         	movff	efgtoa@l+3,___flmul@a+3
  3931   000B42  C0E8  F00F         	movff	efgtoa@u,___flmul@b
  3932   000B46  C0E9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3933   000B4A  C0EA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3934   000B4E  C0EB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3935   000B52  ECCA  F00A         	call	___flmul	;wreg free
  3936   000B56  C00F  F02C         	movff	?___flmul,___flsub@a
  3937   000B5A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3938   000B5E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3939   000B62  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3940   000B66  ECE9  F019         	call	___flsub	;wreg free
  3941   000B6A  C028  F0D7         	movff	?___flsub,efgtoa@h
  3942   000B6E  C029  F0D8         	movff	?___flsub+1,efgtoa@h+1
  3943   000B72  C02A  F0D9         	movff	?___flsub+2,efgtoa@h+2
  3944   000B76  C02B  F0DA         	movff	?___flsub+3,efgtoa@h+3
  3945   000B7A                     
  3946                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3947   000B7A  C0E8  F028         	movff	efgtoa@u,___fldiv@b
  3948   000B7E  C0E9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3949   000B82  C0EA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3950   000B86  C0EB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3951   000B8A  0E00               	movlw	0
  3952   000B8C  6E2C               	movwf	___fldiv@a^0,c
  3953   000B8E  0E00               	movlw	0
  3954   000B90  6E2D               	movwf	(___fldiv@a+1)^0,c
  3955   000B92  0E20               	movlw	32
  3956   000B94  6E2E               	movwf	(___fldiv@a+2)^0,c
  3957   000B96  0E41               	movlw	65
  3958   000B98  6E2F               	movwf	(___fldiv@a+3)^0,c
  3959   000B9A  ECDF  F00C         	call	___fldiv	;wreg free
  3960   000B9E  C028  F0E8         	movff	?___fldiv,efgtoa@u
  3961   000BA2  C029  F0E9         	movff	?___fldiv+1,efgtoa@u+1
  3962   000BA6  C02A  F0EA         	movff	?___fldiv+2,efgtoa@u+2
  3963   000BAA  C02B  F0EB         	movff	?___fldiv+3,efgtoa@u+3
  3964   000BAE                     
  3965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3966   000BAE  0100               	movlb	0	; () banked
  3967   000BB0  4BDF               	infsnz	efgtoa@i& (0+255),f,b
  3968   000BB2  2BE0               	incf	(efgtoa@i+1)& (0+255),f,b
  3969   000BB4                     l4105:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3973   000BB4  51CD               	movf	efgtoa@m& (0+255),w,b
  3974   000BB6  5DDF               	subwf	efgtoa@i& (0+255),w,b
  3975   000BB8  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  3976   000BBA  0A80               	xorlw	128
  3977   000BBC  6E5B               	movwf	??_efgtoa^0,c
  3978   000BBE  51CE               	movf	(efgtoa@m+1)& (0+255),w,b
  3979   000BC0  0A80               	xorlw	128
  3980   000BC2  585B               	subwfb	??_efgtoa^0,w,c
  3981   000BC4  A0D8               	btfss	status,0,c
  3982   000BC6  EFE7  F005         	goto	u4821
  3983   000BCA  EFE9  F005         	goto	u4820
  3984   000BCE                     u4821:
  3985   000BCE  EF5F  F005         	goto	l4097
  3986   000BD2                     u4820:
  3987   000BD2                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3990   000BD2  C0E8  F00F         	movff	efgtoa@u,___flmul@b
  3991   000BD6  C0E9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3992   000BDA  C0EA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3993   000BDE  C0EB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3994   000BE2  0E00               	movlw	0
  3995   000BE4  6E13               	movwf	___flmul@a^0,c
  3996   000BE6  0E00               	movlw	0
  3997   000BE8  6E14               	movwf	(___flmul@a+1)^0,c
  3998   000BEA  0EA0               	movlw	160
  3999   000BEC  6E15               	movwf	(___flmul@a+2)^0,c
  4000   000BEE  0E40               	movlw	64
  4001   000BF0  6E16               	movwf	(___flmul@a+3)^0,c
  4002   000BF2  ECCA  F00A         	call	___flmul	;wreg free
  4003   000BF6  C00F  F0DB         	movff	?___flmul,efgtoa@l
  4004   000BFA  C010  F0DC         	movff	?___flmul+1,efgtoa@l+1
  4005   000BFE  C011  F0DD         	movff	?___flmul+2,efgtoa@l+2
  4006   000C02  C012  F0DE         	movff	?___flmul+3,efgtoa@l+3
  4007   000C06                     
  4008                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4009   000C06  C0D7  F028         	movff	efgtoa@h,___flge@ff1
  4010   000C0A  C0D8  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4011   000C0E  C0D9  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4012   000C12  C0DA  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4013   000C16  C0DB  F02C         	movff	efgtoa@l,___flge@ff2
  4014   000C1A  C0DC  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4015   000C1E  C0DD  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4016   000C22  C0DE  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4017   000C26  EC41  F014         	call	___flge	;wreg free
  4018   000C2A  B0D8               	btfsc	status,0,c
  4019   000C2C  EF1A  F006         	goto	u4831
  4020   000C30  EF1C  F006         	goto	u4830
  4021   000C34                     u4831:
  4022   000C34  EF27  F006         	goto	l4113
  4023   000C38                     u4830:
  4024   000C38                     
  4025                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4026   000C38  0E00               	movlw	0
  4027   000C3A  0100               	movlb	0	; () banked
  4028   000C3C  6FDB               	movwf	efgtoa@l& (0+255),b
  4029   000C3E  0E00               	movlw	0
  4030   000C40  6FDC               	movwf	(efgtoa@l+1)& (0+255),b
  4031   000C42  0E00               	movlw	0
  4032   000C44  6FDD               	movwf	(efgtoa@l+2)& (0+255),b
  4033   000C46  0E00               	movlw	0
  4034   000C48  6FDE               	movwf	(efgtoa@l+3)& (0+255),b
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  4037   000C4A  EF50  F006         	goto	l4119
  4038   000C4E                     l4113:
  4039                           
  4040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4041   000C4E  C0D7  F001         	movff	efgtoa@h,___fleq@ff1
  4042   000C52  C0D8  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4043   000C56  C0D9  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4044   000C5A  C0DA  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4045   000C5E  C0DB  F005         	movff	efgtoa@l,___fleq@ff2
  4046   000C62  C0DC  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4047   000C66  C0DD  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4048   000C6A  C0DE  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4049   000C6E  ECF6  F017         	call	___fleq	;wreg free
  4050   000C72  A0D8               	btfss	status,0,c
  4051   000C74  EF3E  F006         	goto	u4841
  4052   000C78  EF40  F006         	goto	u4840
  4053   000C7C                     u4841:
  4054   000C7C  EF50  F006         	goto	l4119
  4055   000C80                     u4840:
  4056   000C80  0100               	movlb	0	; () banked
  4057   000C82  B1CB               	btfsc	efgtoa@d& (0+255),0,b
  4058   000C84  EF46  F006         	goto	u4851
  4059   000C88  EF48  F006         	goto	u4850
  4060   000C8C                     u4851:
  4061   000C8C  EF50  F006         	goto	l4119
  4062   000C90                     u4850:
  4063   000C90                     
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4066   000C90  0E00               	movlw	0
  4067   000C92  6FDB               	movwf	efgtoa@l& (0+255),b
  4068   000C94  0E00               	movlw	0
  4069   000C96  6FDC               	movwf	(efgtoa@l+1)& (0+255),b
  4070   000C98  0E00               	movlw	0
  4071   000C9A  6FDD               	movwf	(efgtoa@l+2)& (0+255),b
  4072   000C9C  0E00               	movlw	0
  4073   000C9E  6FDE               	movwf	(efgtoa@l+3)& (0+255),b
  4074   000CA0                     l4119:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4077   000CA0  C0E2  F001         	movff	efgtoa@g,___fladd@b
  4078   000CA4  C0E3  F002         	movff	efgtoa@g+1,___fladd@b+1
  4079   000CA8  C0E4  F003         	movff	efgtoa@g+2,___fladd@b+2
  4080   000CAC  C0E5  F004         	movff	efgtoa@g+3,___fladd@b+3
  4081   000CB0  C0DB  F005         	movff	efgtoa@l,___fladd@a
  4082   000CB4  C0DC  F006         	movff	efgtoa@l+1,___fladd@a+1
  4083   000CB8  C0DD  F007         	movff	efgtoa@l+2,___fladd@a+2
  4084   000CBC  C0DE  F008         	movff	efgtoa@l+3,___fladd@a+3
  4085   000CC0  EC6A  F008         	call	___fladd	;wreg free
  4086   000CC4  C001  F0D7         	movff	?___fladd,efgtoa@h
  4087   000CC8  C002  F0D8         	movff	?___fladd+1,efgtoa@h+1
  4088   000CCC  C003  F0D9         	movff	?___fladd+2,efgtoa@h+2
  4089   000CD0  C004  F0DA         	movff	?___fladd+3,efgtoa@h+3
  4090   000CD4                     
  4091                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4092   000CD4  C0D7  F028         	movff	efgtoa@h,___flge@ff1
  4093   000CD8  C0D8  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4094   000CDC  C0D9  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4095   000CE0  C0DA  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4096   000CE4  0E00               	movlw	0
  4097   000CE6  6E13               	movwf	___flmul@a^0,c
  4098   000CE8  0E00               	movlw	0
  4099   000CEA  6E14               	movwf	(___flmul@a+1)^0,c
  4100   000CEC  0E20               	movlw	32
  4101   000CEE  6E15               	movwf	(___flmul@a+2)^0,c
  4102   000CF0  0E41               	movlw	65
  4103   000CF2  6E16               	movwf	(___flmul@a+3)^0,c
  4104   000CF4  C0D1  F00F         	movff	efgtoa@ou,___flmul@b
  4105   000CF8  C0D2  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4106   000CFC  C0D3  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4107   000D00  C0D4  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4108   000D04  ECCA  F00A         	call	___flmul	;wreg free
  4109   000D08  C00F  F02C         	movff	?___flmul,___flge@ff2
  4110   000D0C  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4111   000D10  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4112   000D14  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4113   000D18  EC41  F014         	call	___flge	;wreg free
  4114   000D1C  A0D8               	btfss	status,0,c
  4115   000D1E  EF93  F006         	goto	u4861
  4116   000D22  EF95  F006         	goto	u4860
  4117   000D26                     u4861:
  4118   000D26  EFBE  F006         	goto	l4131
  4119   000D2A                     u4860:
  4120   000D2A                     
  4121                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  4122   000D2A  0100               	movlb	0	; () banked
  4123   000D2C  4BCF               	infsnz	efgtoa@e& (0+255),f,b
  4124   000D2E  2BD0               	incf	(efgtoa@e+1)& (0+255),f,b
  4125   000D30                     
  4126                           ; BSR set to: 0
  4127                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4128   000D30  C0D1  F00F         	movff	efgtoa@ou,___flmul@b
  4129   000D34  C0D2  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4130   000D38  C0D3  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4131   000D3C  C0D4  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4132   000D40  0E00               	movlw	0
  4133   000D42  6E13               	movwf	___flmul@a^0,c
  4134   000D44  0E00               	movlw	0
  4135   000D46  6E14               	movwf	(___flmul@a+1)^0,c
  4136   000D48  0E20               	movlw	32
  4137   000D4A  6E15               	movwf	(___flmul@a+2)^0,c
  4138   000D4C  0E41               	movlw	65
  4139   000D4E  6E16               	movwf	(___flmul@a+3)^0,c
  4140   000D50  ECCA  F00A         	call	___flmul	;wreg free
  4141   000D54  C00F  F0D1         	movff	?___flmul,efgtoa@ou
  4142   000D58  C010  F0D2         	movff	?___flmul+1,efgtoa@ou+1
  4143   000D5C  C011  F0D3         	movff	?___flmul+2,efgtoa@ou+2
  4144   000D60  C012  F0D4         	movff	?___flmul+3,efgtoa@ou+3
  4145   000D64                     
  4146                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4147   000D64  0E66               	movlw	102
  4148   000D66  0100               	movlb	0	; () banked
  4149   000D68  19CA               	xorwf	efgtoa@nmode& (0+255),w,b
  4150   000D6A  A4D8               	btfss	status,2,c
  4151   000D6C  EFBA  F006         	goto	u4871
  4152   000D70  EFBC  F006         	goto	u4870
  4153   000D74                     u4871:
  4154   000D74  EFBE  F006         	goto	l4131
  4155   000D78                     u4870:
  4156   000D78                     
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  4159   000D78  4BCD               	infsnz	efgtoa@m& (0+255),f,b
  4160   000D7A  2BCE               	incf	(efgtoa@m+1)& (0+255),f,b
  4161   000D7C                     l4131:
  4162                           
  4163                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4164   000D7C  C0D1  F0E8         	movff	efgtoa@ou,efgtoa@u
  4165   000D80  C0D2  F0E9         	movff	efgtoa@ou+1,efgtoa@u+1
  4166   000D84  C0D3  F0EA         	movff	efgtoa@ou+2,efgtoa@u+2
  4167   000D88  C0D4  F0EB         	movff	efgtoa@ou+3,efgtoa@u+3
  4168   000D8C                     
  4169                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4170   000D8C  C0CF  F0C0         	movff	efgtoa@e,efgtoa@ne
  4171   000D90  C0D0  F0C1         	movff	efgtoa@e+1,efgtoa@ne+1
  4172   000D94                     
  4173                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4174   000D94  0E00               	movlw	0
  4175   000D96  0100               	movlb	0	; () banked
  4176   000D98  6FC8               	movwf	efgtoa@pp& (0+255),b
  4177   000D9A                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4180   000D9A  0E00               	movlw	0
  4181   000D9C  6FC5               	movwf	(efgtoa@t+1)& (0+255),b
  4182   000D9E  0E00               	movlw	0
  4183   000DA0  6FC4               	movwf	efgtoa@t& (0+255),b
  4184   000DA2                     
  4185                           ; BSR set to: 0
  4186                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4187   000DA2  0E00               	movlw	0
  4188   000DA4  6FE0               	movwf	(efgtoa@i+1)& (0+255),b
  4189   000DA6  0E00               	movlw	0
  4190   000DA8  6FDF               	movwf	efgtoa@i& (0+255),b
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4193   000DAA  EFBC  F007         	goto	l4181
  4194   000DAE                     l4141:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4198   000DAE  C0D7  F028         	movff	efgtoa@h,___fldiv@b
  4199   000DB2  C0D8  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4200   000DB6  C0D9  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4201   000DBA  C0DA  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4202   000DBE  C0E8  F02C         	movff	efgtoa@u,___fldiv@a
  4203   000DC2  C0E9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4204   000DC6  C0EA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4205   000DCA  C0EB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4206   000DCE  ECDF  F00C         	call	___fldiv	;wreg free
  4207   000DD2  C028  F041         	movff	?___fldiv,floorf@x
  4208   000DD6  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4209   000DDA  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4210   000DDE  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4211   000DE2  EC1E  F010         	call	_floorf	;wreg free
  4212   000DE6  C041  F0DB         	movff	?_floorf,efgtoa@l
  4213   000DEA  C042  F0DC         	movff	?_floorf+1,efgtoa@l+1
  4214   000DEE  C043  F0DD         	movff	?_floorf+2,efgtoa@l+2
  4215   000DF2  C044  F0DE         	movff	?_floorf+3,efgtoa@l+3
  4216                           
  4217                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4218   000DF6  C0DB  F001         	movff	efgtoa@l,___fltol@f1
  4219   000DFA  C0DC  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4220   000DFE  C0DD  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4221   000E02  C0DE  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4222   000E06  ECBE  F013         	call	___fltol	;wreg free
  4223   000E0A  BE02               	btfsc	(?___fltol+1)^0,7,c
  4224   000E0C  EF13  F007         	goto	u4880
  4225   000E10  5002               	movf	(?___fltol+1)^0,w,c
  4226   000E12  E107               	bnz	u4881
  4227   000E14  0E0A               	movlw	10
  4228   000E16  5C01               	subwf	?___fltol^0,w,c
  4229   000E18  B0D8               	btfsc	status,0,c
  4230   000E1A  EF11  F007         	goto	u4881
  4231   000E1E  EF13  F007         	goto	u4880
  4232   000E22                     u4881:
  4233   000E22  EF23  F007         	goto	l4145
  4234   000E26                     u4880:
  4235   000E26  C0DB  F001         	movff	efgtoa@l,___fltol@f1
  4236   000E2A  C0DC  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4237   000E2E  C0DD  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4238   000E32  C0DE  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4239   000E36  ECBE  F013         	call	___fltol	;wreg free
  4240   000E3A  C001  F0CB         	movff	?___fltol,efgtoa@d
  4241   000E3E  C002  F0CC         	movff	?___fltol+1,efgtoa@d+1
  4242   000E42  EF28  F007         	goto	l930
  4243   000E46                     l4145:
  4244   000E46  0E00               	movlw	0
  4245   000E48  0100               	movlb	0	; () banked
  4246   000E4A  6FCC               	movwf	(efgtoa@d+1)& (0+255),b
  4247   000E4C  0E09               	movlw	9
  4248   000E4E  6FCB               	movwf	efgtoa@d& (0+255),b
  4249   000E50                     l930:
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4252   000E50  0100               	movlb	0	; () banked
  4253   000E52  51C8               	movf	efgtoa@pp& (0+255),w,b
  4254   000E54  A4D8               	btfss	status,2,c
  4255   000E56  EF2F  F007         	goto	u4891
  4256   000E5A  EF31  F007         	goto	u4890
  4257   000E5E                     u4891:
  4258   000E5E  EF59  F007         	goto	l4165
  4259   000E62                     u4890:
  4260   000E62                     
  4261                           ; BSR set to: 0
  4262   000E62  BFC1               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4263   000E64  EF38  F007         	goto	u4900
  4264   000E68  EF36  F007         	goto	u4901
  4265   000E6C                     u4901:
  4266   000E6C  EF59  F007         	goto	l4165
  4267   000E70                     u4900:
  4268   000E70                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4271   000E70  0E00               	movlw	low _dbuf
  4272   000E72  25E6               	addwf	efgtoa@n& (0+255),w,b
  4273   000E74  6ED9               	movwf	fsr2l,c
  4274   000E76  0E01               	movlw	high _dbuf
  4275   000E78  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4276   000E7A  6EDA               	movwf	fsr2h,c
  4277   000E7C  0E2E               	movlw	46
  4278   000E7E  6EDF               	movwf	indf2,c
  4279   000E80                     
  4280                           ; BSR set to: 0
  4281   000E80  4BE6               	infsnz	efgtoa@n& (0+255),f,b
  4282   000E82  2BE7               	incf	(efgtoa@n+1)& (0+255),f,b
  4283   000E84                     
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4286   000E84  07D5               	decf	efgtoa@w& (0+255),f,b
  4287   000E86  A0D8               	btfss	status,0,c
  4288   000E88  07D6               	decf	(efgtoa@w+1)& (0+255),f,b
  4289   000E8A                     
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4292   000E8A  0E01               	movlw	1
  4293   000E8C  6FC8               	movwf	efgtoa@pp& (0+255),b
  4294   000E8E  EF59  F007         	goto	l4165
  4295   000E92                     l4157:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4299   000E92  0E00               	movlw	low _dbuf
  4300   000E94  25E6               	addwf	efgtoa@n& (0+255),w,b
  4301   000E96  6ED9               	movwf	fsr2l,c
  4302   000E98  0E01               	movlw	high _dbuf
  4303   000E9A  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4304   000E9C  6EDA               	movwf	fsr2h,c
  4305   000E9E  0E30               	movlw	48
  4306   000EA0  6EDF               	movwf	indf2,c
  4307   000EA2                     
  4308                           ; BSR set to: 0
  4309   000EA2  4BE6               	infsnz	efgtoa@n& (0+255),f,b
  4310   000EA4  2BE7               	incf	(efgtoa@n+1)& (0+255),f,b
  4311   000EA6                     
  4312                           ; BSR set to: 0
  4313                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4314   000EA6  07D5               	decf	efgtoa@w& (0+255),f,b
  4315   000EA8  A0D8               	btfss	status,0,c
  4316   000EAA  07D6               	decf	(efgtoa@w+1)& (0+255),f,b
  4317   000EAC                     
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4320   000EAC  07C4               	decf	efgtoa@t& (0+255),f,b
  4321   000EAE  A0D8               	btfss	status,0,c
  4322   000EB0  07C5               	decf	(efgtoa@t+1)& (0+255),f,b
  4323   000EB2                     l4165:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4327   000EB2  51C4               	movf	efgtoa@t& (0+255),w,b
  4328   000EB4  11C5               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4329   000EB6  A4D8               	btfss	status,2,c
  4330   000EB8  EF60  F007         	goto	u4911
  4331   000EBC  EF62  F007         	goto	u4910
  4332   000EC0                     u4911:
  4333   000EC0  EF49  F007         	goto	l4157
  4334   000EC4                     u4910:
  4335   000EC4                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4338   000EC4  0E00               	movlw	low _dbuf
  4339   000EC6  25E6               	addwf	efgtoa@n& (0+255),w,b
  4340   000EC8  6ED9               	movwf	fsr2l,c
  4341   000ECA  0E01               	movlw	high _dbuf
  4342   000ECC  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4343   000ECE  6EDA               	movwf	fsr2h,c
  4344   000ED0  51CB               	movf	efgtoa@d& (0+255),w,b
  4345   000ED2  0F30               	addlw	48
  4346   000ED4  6EDF               	movwf	indf2,c
  4347   000ED6                     
  4348                           ; BSR set to: 0
  4349   000ED6  4BE6               	infsnz	efgtoa@n& (0+255),f,b
  4350   000ED8  2BE7               	incf	(efgtoa@n+1)& (0+255),f,b
  4351   000EDA                     
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4354   000EDA  07D5               	decf	efgtoa@w& (0+255),f,b
  4355   000EDC  A0D8               	btfss	status,0,c
  4356   000EDE  07D6               	decf	(efgtoa@w+1)& (0+255),f,b
  4357   000EE0                     
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4360   000EE0  C0D7  F028         	movff	efgtoa@h,___flsub@b
  4361   000EE4  C0D8  F029         	movff	efgtoa@h+1,___flsub@b+1
  4362   000EE8  C0D9  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4363   000EEC  C0DA  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4364   000EF0  C0DB  F013         	movff	efgtoa@l,___flmul@a
  4365   000EF4  C0DC  F014         	movff	efgtoa@l+1,___flmul@a+1
  4366   000EF8  C0DD  F015         	movff	efgtoa@l+2,___flmul@a+2
  4367   000EFC  C0DE  F016         	movff	efgtoa@l+3,___flmul@a+3
  4368   000F00  C0E8  F00F         	movff	efgtoa@u,___flmul@b
  4369   000F04  C0E9  F010         	movff	efgtoa@u+1,___flmul@b+1
  4370   000F08  C0EA  F011         	movff	efgtoa@u+2,___flmul@b+2
  4371   000F0C  C0EB  F012         	movff	efgtoa@u+3,___flmul@b+3
  4372   000F10  ECCA  F00A         	call	___flmul	;wreg free
  4373   000F14  C00F  F02C         	movff	?___flmul,___flsub@a
  4374   000F18  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4375   000F1C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4376   000F20  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4377   000F24  ECE9  F019         	call	___flsub	;wreg free
  4378   000F28  C028  F0D7         	movff	?___flsub,efgtoa@h
  4379   000F2C  C029  F0D8         	movff	?___flsub+1,efgtoa@h+1
  4380   000F30  C02A  F0D9         	movff	?___flsub+2,efgtoa@h+2
  4381   000F34  C02B  F0DA         	movff	?___flsub+3,efgtoa@h+3
  4382   000F38                     
  4383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4384   000F38  C0E8  F028         	movff	efgtoa@u,___fldiv@b
  4385   000F3C  C0E9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4386   000F40  C0EA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4387   000F44  C0EB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4388   000F48  0E00               	movlw	0
  4389   000F4A  6E2C               	movwf	___fldiv@a^0,c
  4390   000F4C  0E00               	movlw	0
  4391   000F4E  6E2D               	movwf	(___fldiv@a+1)^0,c
  4392   000F50  0E20               	movlw	32
  4393   000F52  6E2E               	movwf	(___fldiv@a+2)^0,c
  4394   000F54  0E41               	movlw	65
  4395   000F56  6E2F               	movwf	(___fldiv@a+3)^0,c
  4396   000F58  ECDF  F00C         	call	___fldiv	;wreg free
  4397   000F5C  C028  F0E8         	movff	?___fldiv,efgtoa@u
  4398   000F60  C029  F0E9         	movff	?___fldiv+1,efgtoa@u+1
  4399   000F64  C02A  F0EA         	movff	?___fldiv+2,efgtoa@u+2
  4400   000F68  C02B  F0EB         	movff	?___fldiv+3,efgtoa@u+3
  4401   000F6C                     
  4402                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4403   000F6C  0100               	movlb	0	; () banked
  4404   000F6E  07C0               	decf	efgtoa@ne& (0+255),f,b
  4405   000F70  A0D8               	btfss	status,0,c
  4406   000F72  07C1               	decf	(efgtoa@ne+1)& (0+255),f,b
  4407   000F74                     
  4408                           ; BSR set to: 0
  4409                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4410   000F74  4BDF               	infsnz	efgtoa@i& (0+255),f,b
  4411   000F76  2BE0               	incf	(efgtoa@i+1)& (0+255),f,b
  4412   000F78                     l4181:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4416   000F78  51CD               	movf	efgtoa@m& (0+255),w,b
  4417   000F7A  5DDF               	subwf	efgtoa@i& (0+255),w,b
  4418   000F7C  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  4419   000F7E  0A80               	xorlw	128
  4420   000F80  6E5B               	movwf	??_efgtoa^0,c
  4421   000F82  51CE               	movf	(efgtoa@m+1)& (0+255),w,b
  4422   000F84  0A80               	xorlw	128
  4423   000F86  585B               	subwfb	??_efgtoa^0,w,c
  4424   000F88  B0D8               	btfsc	status,0,c
  4425   000F8A  EFC9  F007         	goto	u4921
  4426   000F8E  EFCB  F007         	goto	u4920
  4427   000F92                     u4921:
  4428   000F92  EFD9  F007         	goto	l4185
  4429   000F96                     u4920:
  4430   000F96                     
  4431                           ; BSR set to: 0
  4432   000F96  BFE7               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4433   000F98  EFD7  F007         	goto	u4931
  4434   000F9C  51E7               	movf	(efgtoa@n+1)& (0+255),w,b
  4435   000F9E  E109               	bnz	u4930
  4436   000FA0  0E4B               	movlw	75
  4437   000FA2  5DE6               	subwf	efgtoa@n& (0+255),w,b
  4438   000FA4  A0D8               	btfss	status,0,c
  4439   000FA6  EFD7  F007         	goto	u4931
  4440   000FAA  EFD9  F007         	goto	u4930
  4441   000FAE                     u4931:
  4442   000FAE  EFD7  F006         	goto	l4141
  4443   000FB2                     u4930:
  4444   000FB2                     l4185:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4448   000FB2  0E00               	movlw	0
  4449   000FB4  6FE0               	movwf	(efgtoa@i+1)& (0+255),b
  4450   000FB6  0E4F               	movlw	79
  4451   000FB8  6FDF               	movwf	efgtoa@i& (0+255),b
  4452   000FBA                     
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4455   000FBA  0E00               	movlw	low _dbuf
  4456   000FBC  25DF               	addwf	efgtoa@i& (0+255),w,b
  4457   000FBE  6ED9               	movwf	fsr2l,c
  4458   000FC0  0E01               	movlw	high _dbuf
  4459   000FC2  21E0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4460   000FC4  6EDA               	movwf	fsr2h,c
  4461   000FC6  6ADF               	clrf	indf2,c
  4462   000FC8                     
  4463                           ; BSR set to: 0
  4464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4465   000FC8  0E00               	movlw	low _dbuf
  4466   000FCA  6E5B               	movwf	??_efgtoa^0,c
  4467   000FCC  0E01               	movlw	high _dbuf
  4468   000FCE  6E5C               	movwf	(??_efgtoa+1)^0,c
  4469   000FD0  51E6               	movf	efgtoa@n& (0+255),w,b
  4470   000FD2  5E5B               	subwf	??_efgtoa^0,f,c
  4471   000FD4  51E7               	movf	(efgtoa@n+1)& (0+255),w,b
  4472   000FD6  5A5C               	subwfb	(??_efgtoa+1)^0,f,c
  4473   000FD8  51DF               	movf	efgtoa@i& (0+255),w,b
  4474   000FDA  245B               	addwf	??_efgtoa^0,w,c
  4475   000FDC  6E01               	movwf	memcpy@d1^0,c
  4476   000FDE  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  4477   000FE0  205C               	addwfc	(??_efgtoa+1)^0,w,c
  4478   000FE2  6E02               	movwf	(memcpy@d1+1)^0,c
  4479   000FE4  0E00               	movlw	low _dbuf
  4480   000FE6  6E03               	movwf	memcpy@s1^0,c
  4481   000FE8  0E01               	movlw	high _dbuf
  4482   000FEA  6E04               	movwf	(memcpy@s1+1)^0,c
  4483   000FEC  C0E6  F005         	movff	efgtoa@n,memcpy@n
  4484   000FF0  C0E7  F006         	movff	efgtoa@n+1,memcpy@n+1
  4485   000FF4  EC9B  F019         	call	_memcpy	;wreg free
  4486   000FF8                     
  4487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4488   000FF8  0100               	movlb	0	; () banked
  4489   000FFA  51E6               	movf	efgtoa@n& (0+255),w,b
  4490   000FFC  5DDF               	subwf	efgtoa@i& (0+255),w,b
  4491   000FFE  6FE6               	movwf	efgtoa@n& (0+255),b
  4492   001000  51E7               	movf	(efgtoa@n+1)& (0+255),w,b
  4493   001002  59E0               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4494   001004  6FE7               	movwf	(efgtoa@n+1)& (0+255),b
  4495   001006                     
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4498   001006  51E1               	movf	efgtoa@sign& (0+255),w,b
  4499   001008  A4D8               	btfss	status,2,c
  4500   00100A  EF09  F008         	goto	u4941
  4501   00100E  EF0C  F008         	goto	u4940
  4502   001012                     u4941:
  4503   001012  0E01               	movlw	1
  4504   001014  EF0D  F008         	goto	u4950
  4505   001018                     u4940:
  4506   001018  0E00               	movlw	0
  4507   00101A                     u4950:
  4508   00101A  6FDF               	movwf	efgtoa@i& (0+255),b
  4509   00101C  6BE0               	clrf	(efgtoa@i+1)& (0+255),b
  4510   00101E                     
  4511                           ; BSR set to: 0
  4512                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  4513   00101E  A27F               	btfss	_flags^0,1,c
  4514   001020  EF14  F008         	goto	u4961
  4515   001024  EF16  F008         	goto	u4960
  4516   001028                     u4961:
  4517   001028  EF44  F008         	goto	l4207
  4518   00102C                     u4960:
  4519   00102C  EF26  F008         	goto	l4203
  4520   001030                     l4199:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  4524   001030  07E6               	decf	efgtoa@n& (0+255),f,b
  4525   001032  A0D8               	btfss	status,0,c
  4526   001034  07E7               	decf	(efgtoa@n+1)& (0+255),f,b
  4527   001036  0E00               	movlw	low _dbuf
  4528   001038  25E6               	addwf	efgtoa@n& (0+255),w,b
  4529   00103A  6ED9               	movwf	fsr2l,c
  4530   00103C  0E01               	movlw	high _dbuf
  4531   00103E  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4532   001040  6EDA               	movwf	fsr2h,c
  4533   001042  0E30               	movlw	48
  4534   001044  6EDF               	movwf	indf2,c
  4535   001046                     
  4536                           ; BSR set to: 0
  4537                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
  4538   001046  07D5               	decf	efgtoa@w& (0+255),f,b
  4539   001048  A0D8               	btfss	status,0,c
  4540   00104A  07D6               	decf	(efgtoa@w+1)& (0+255),f,b
  4541   00104C                     l4203:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  4545   00104C  51D5               	movf	efgtoa@w& (0+255),w,b
  4546   00104E  5DDF               	subwf	efgtoa@i& (0+255),w,b
  4547   001050  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  4548   001052  0A80               	xorlw	128
  4549   001054  6E5B               	movwf	??_efgtoa^0,c
  4550   001056  51D6               	movf	(efgtoa@w+1)& (0+255),w,b
  4551   001058  0A80               	xorlw	128
  4552   00105A  585B               	subwfb	??_efgtoa^0,w,c
  4553   00105C  B0D8               	btfsc	status,0,c
  4554   00105E  EF33  F008         	goto	u4971
  4555   001062  EF35  F008         	goto	u4970
  4556   001066                     u4971:
  4557   001066  EF44  F008         	goto	l4207
  4558   00106A                     u4970:
  4559   00106A                     
  4560                           ; BSR set to: 0
  4561   00106A  51E6               	movf	efgtoa@n& (0+255),w,b
  4562   00106C  5DDF               	subwf	efgtoa@i& (0+255),w,b
  4563   00106E  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  4564   001070  0A80               	xorlw	128
  4565   001072  6E5B               	movwf	??_efgtoa^0,c
  4566   001074  51E7               	movf	(efgtoa@n+1)& (0+255),w,b
  4567   001076  0A80               	xorlw	128
  4568   001078  585B               	subwfb	??_efgtoa^0,w,c
  4569   00107A  A0D8               	btfss	status,0,c
  4570   00107C  EF42  F008         	goto	u4981
  4571   001080  EF44  F008         	goto	u4980
  4572   001084                     u4981:
  4573   001084  EF18  F008         	goto	l4199
  4574   001088                     u4980:
  4575   001088                     l4207:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4579   001088  51E1               	movf	efgtoa@sign& (0+255),w,b
  4580   00108A  B4D8               	btfsc	status,2,c
  4581   00108C  EF4A  F008         	goto	u4991
  4582   001090  EF4C  F008         	goto	u4990
  4583   001094                     u4991:
  4584   001094  EF57  F008         	goto	l4211
  4585   001098                     u4990:
  4586   001098                     
  4587                           ; BSR set to: 0
  4588                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4589   001098  07E6               	decf	efgtoa@n& (0+255),f,b
  4590   00109A  A0D8               	btfss	status,0,c
  4591   00109C  07E7               	decf	(efgtoa@n+1)& (0+255),f,b
  4592   00109E  0E00               	movlw	low _dbuf
  4593   0010A0  25E6               	addwf	efgtoa@n& (0+255),w,b
  4594   0010A2  6ED9               	movwf	fsr2l,c
  4595   0010A4  0E01               	movlw	high _dbuf
  4596   0010A6  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4597   0010A8  6EDA               	movwf	fsr2h,c
  4598   0010AA  C0E1  FFDF         	movff	efgtoa@sign,indf2
  4599   0010AE                     l4211:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4603   0010AE  51DF               	movf	efgtoa@i& (0+255),w,b
  4604   0010B0  5FD5               	subwf	efgtoa@w& (0+255),f,b
  4605   0010B2  51E0               	movf	(efgtoa@i+1)& (0+255),w,b
  4606   0010B4  5BD6               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4607   0010B6                     
  4608                           ; BSR set to: 0
  4609                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4610   0010B6  C055  F00F         	movff	efgtoa@fp,pad@fp
  4611   0010BA  0E00               	movlw	low _dbuf
  4612   0010BC  25E6               	addwf	efgtoa@n& (0+255),w,b
  4613   0010BE  6E10               	movwf	pad@buf^0,c
  4614   0010C0  0E01               	movlw	high _dbuf
  4615   0010C2  21E7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4616   0010C4  6E11               	movwf	(pad@buf+1)^0,c
  4617   0010C6  C0D5  F012         	movff	efgtoa@w,pad@p
  4618   0010CA  C0D6  F013         	movff	efgtoa@w+1,pad@p+1
  4619   0010CE  EC3D  F019         	call	_pad	;wreg free
  4620   0010D2                     l897:
  4621   0010D2  0012               	return		;funcret
  4622   0010D4                     __end_of_efgtoa:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _strcpy *****************
  4626 ;; Defined at:
  4627 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4630 ;;		 -> dbuf(80), 
  4631 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4632 ;;		 -> STR_16(4), STR_13(4), 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  d               2    4[COMRAM] PTR unsigned char 
  4635 ;;		 -> dbuf(80), 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  2    0[COMRAM] PTR unsigned char 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4645 ;;      Params:         3       0       0       0       0       0       0
  4646 ;;      Locals:         2       0       0       0       0       0       0
  4647 ;;      Temps:          1       0       0       0       0       0       0
  4648 ;;      Totals:         6       0       0       0       0       0       0
  4649 ;;Total ram usage:        6 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_efgtoa
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text17
  4659   0034D8                     __ptext17:
  4660                           	callstack 0
  4661   0034D8                     _strcpy:
  4662                           	callstack 25
  4663   0034D8  C001  F005         	movff	strcpy@dest,strcpy@d
  4664   0034DC  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4665   0034E0                     l3917:
  4666   0034E0  2A03               	incf	strcpy@src^0,f,c
  4667   0034E2  0403               	decf	strcpy@src^0,w,c
  4668   0034E4  6E04               	movwf	??_strcpy^0,c
  4669   0034E6  C004  FFF6         	movff	??_strcpy,tblptrl
  4670   0034EA                     	if	1	;There is more than 1 active tblptr byte
  4671   0034EA  0E06               	movlw	high __smallconst
  4672   0034EC  6EF7               	movwf	tblptrh,c
  4673   0034EE                     	endif
  4674   0034EE                     	if	0	;tblptru may be non-zero
  4675   0034EE                     	endif
  4676   0034EE                     	if	0	;tblptru may be non-zero
  4677   0034EE                     	endif
  4678   0034EE  C005  FFD9         	movff	strcpy@d,fsr2l
  4679   0034F2  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4680   0034F6  4A05               	infsnz	strcpy@d^0,f,c
  4681   0034F8  2A06               	incf	(strcpy@d+1)^0,f,c
  4682   0034FA  0008               	tblrd		*
  4683   0034FC  CFF5 FFDF          	movff	tablat,indf2
  4684   003500  50DF               	movf	indf2,w,c
  4685   003502  A4D8               	btfss	status,2,c
  4686   003504  EF86  F01A         	goto	u4511
  4687   003508  EF88  F01A         	goto	u4510
  4688   00350C                     u4511:
  4689   00350C  EF70  F01A         	goto	l3917
  4690   003510                     u4510:
  4691   003510  0012               	return		;funcret
  4692   003512                     __end_of_strcpy:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _memcpy *****************
  4696 ;; Defined at:
  4697 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  d1              2    0[COMRAM] PTR void 
  4700 ;;		 -> dbuf(80), 
  4701 ;;  s1              2    2[COMRAM] PTR const void 
  4702 ;;		 -> dbuf(80), 
  4703 ;;  n               2    4[COMRAM] unsigned int 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4706 ;;		 -> dbuf(80), 
  4707 ;;  d               2    7[COMRAM] PTR unsigned char 
  4708 ;;		 -> dbuf(80), 
  4709 ;;  tmp             1    6[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  2    0[COMRAM] PTR void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4719 ;;      Params:         6       0       0       0       0       0       0
  4720 ;;      Locals:         5       0       0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0
  4722 ;;      Totals:        11       0       0       0       0       0       0
  4723 ;;Total ram usage:       11 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_efgtoa
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text18
  4733   003336                     __ptext18:
  4734                           	callstack 0
  4735   003336                     _memcpy:
  4736                           	callstack 25
  4737   003336  C003  F00A         	movff	memcpy@s1,memcpy@s
  4738   00333A  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4739   00333E  C001  F008         	movff	memcpy@d1,memcpy@d
  4740   003342  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4741   003346  EFB5  F019         	goto	l3929
  4742   00334A                     l3921:
  4743   00334A  C00A  FFD9         	movff	memcpy@s,fsr2l
  4744   00334E  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4745   003352  50DF               	movf	indf2,w,c
  4746   003354  6E07               	movwf	memcpy@tmp^0,c
  4747   003356  4A0A               	infsnz	memcpy@s^0,f,c
  4748   003358  2A0B               	incf	(memcpy@s+1)^0,f,c
  4749   00335A  C008  FFD9         	movff	memcpy@d,fsr2l
  4750   00335E  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4751   003362  C007  FFDF         	movff	memcpy@tmp,indf2
  4752   003366  4A08               	infsnz	memcpy@d^0,f,c
  4753   003368  2A09               	incf	(memcpy@d+1)^0,f,c
  4754   00336A                     l3929:
  4755   00336A  0605               	decf	memcpy@n^0,f,c
  4756   00336C  A0D8               	btfss	status,0,c
  4757   00336E  0606               	decf	(memcpy@n+1)^0,f,c
  4758   003370  2805               	incf	memcpy@n^0,w,c
  4759   003372  E106               	bnz	u4521
  4760   003374  2806               	incf	(memcpy@n+1)^0,w,c
  4761   003376  A4D8               	btfss	status,2,c
  4762   003378  EFC0  F019         	goto	u4521
  4763   00337C  EFC2  F019         	goto	u4520
  4764   003380                     u4521:
  4765   003380  EFA5  F019         	goto	l3921
  4766   003384                     u4520:
  4767   003384  0012               	return		;funcret
  4768   003386                     __end_of_memcpy:
  4769                           	callstack 0
  4770                           
  4771 ;; *************** function _labs *****************
  4772 ;; Defined at:
  4773 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  a               4    0[COMRAM] long 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  4    0[COMRAM] long 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4787 ;;      Params:         4       0       0       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0
  4789 ;;      Temps:          4       0       0       0       0       0       0
  4790 ;;      Totals:         8       0       0       0       0       0       0
  4791 ;;Total ram usage:        8 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_efgtoa
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text19
  4801   0032E0                     __ptext19:
  4802                           	callstack 0
  4803   0032E0                     _labs:
  4804                           	callstack 25
  4805   0032E0  BE04               	btfsc	(labs@a+3)^0,7,c
  4806   0032E2  EF75  F019         	goto	u3511
  4807   0032E6  EF77  F019         	goto	u3510
  4808   0032EA                     u3511:
  4809   0032EA  EF81  F019         	goto	l3217
  4810   0032EE                     u3510:
  4811   0032EE  C001  F001         	movff	labs@a,?_labs
  4812   0032F2  C002  F002         	movff	labs@a+1,?_labs+1
  4813   0032F6  C003  F003         	movff	labs@a+2,?_labs+2
  4814   0032FA  C004  F004         	movff	labs@a+3,?_labs+3
  4815   0032FE  EF9A  F019         	goto	l1028
  4816   003302                     l3217:
  4817   003302  C001  F005         	movff	labs@a,??_labs
  4818   003306  C002  F006         	movff	labs@a+1,??_labs+1
  4819   00330A  C003  F007         	movff	labs@a+2,??_labs+2
  4820   00330E  C004  F008         	movff	labs@a+3,??_labs+3
  4821   003312  1E05               	comf	??_labs^0,f,c
  4822   003314  1E06               	comf	(??_labs+1)^0,f,c
  4823   003316  1E07               	comf	(??_labs+2)^0,f,c
  4824   003318  1E08               	comf	(??_labs+3)^0,f,c
  4825   00331A  2A05               	incf	??_labs^0,f,c
  4826   00331C  0E00               	movlw	0
  4827   00331E  2206               	addwfc	(??_labs+1)^0,f,c
  4828   003320  2207               	addwfc	(??_labs+2)^0,f,c
  4829   003322  2208               	addwfc	(??_labs+3)^0,f,c
  4830   003324  C005  F001         	movff	??_labs,?_labs
  4831   003328  C006  F002         	movff	??_labs+1,?_labs+1
  4832   00332C  C007  F003         	movff	??_labs+2,?_labs+2
  4833   003330  C008  F004         	movff	??_labs+3,?_labs+3
  4834   003334                     l1028:
  4835   003334  0012               	return		;funcret
  4836   003336                     __end_of_labs:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _floorf *****************
  4840 ;; Defined at:
  4841 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  x               4   64[COMRAM] float 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  u               4   80[COMRAM] struct .
  4846 ;;  m               4   74[COMRAM] unsigned long 
  4847 ;;  e               2   78[COMRAM] int 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  4   64[COMRAM] float 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4857 ;;      Params:         4       0       0       0       0       0       0
  4858 ;;      Locals:        10       0       0       0       0       0       0
  4859 ;;      Temps:          6       0       0       0       0       0       0
  4860 ;;      Totals:        20       0       0       0       0       0       0
  4861 ;;Total ram usage:       20 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_efgtoa
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text20
  4871   00203C                     __ptext20:
  4872                           	callstack 0
  4873   00203C                     _floorf:
  4874                           	callstack 25
  4875   00203C  C080  F051         	movff	floorf@F521,floorf@u
  4876   002040  C081  F052         	movff	floorf@F521+1,floorf@u+1
  4877   002044  C082  F053         	movff	floorf@F521+2,floorf@u+2
  4878   002048  C083  F054         	movff	floorf@F521+3,floorf@u+3
  4879   00204C  C041  F051         	movff	floorf@x,floorf@u
  4880   002050  C042  F052         	movff	floorf@x+1,floorf@u+1
  4881   002054  C043  F053         	movff	floorf@x+2,floorf@u+2
  4882   002058  C044  F054         	movff	floorf@x+3,floorf@u+3
  4883   00205C  0E81               	movlw	129
  4884   00205E  6E45               	movwf	??_floorf^0,c
  4885   002060  0EFF               	movlw	255
  4886   002062  6E46               	movwf	(??_floorf+1)^0,c
  4887   002064  C051  F047         	movff	floorf@u,??_floorf+2
  4888   002068  C052  F048         	movff	floorf@u+1,??_floorf+3
  4889   00206C  C053  F049         	movff	floorf@u+2,??_floorf+4
  4890   002070  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4891   002074  0E18               	movlw	24
  4892   002076  EF42  F010         	goto	u3520
  4893   00207A                     u3525:
  4894   00207A  90D8               	bcf	status,0,c
  4895   00207C  324A               	rrcf	(??_floorf+5)^0,f,c
  4896   00207E  3249               	rrcf	(??_floorf+4)^0,f,c
  4897   002080  3248               	rrcf	(??_floorf+3)^0,f,c
  4898   002082  3247               	rrcf	(??_floorf+2)^0,f,c
  4899   002084                     u3520:
  4900   002084  2EE8               	decfsz	wreg,f,c
  4901   002086  EF3D  F010         	goto	u3525
  4902   00208A  5047               	movf	(??_floorf+2)^0,w,c
  4903   00208C  2445               	addwf	??_floorf^0,w,c
  4904   00208E  6E4F               	movwf	floorf@e^0,c
  4905   002090  0E00               	movlw	0
  4906   002092  2046               	addwfc	(??_floorf+1)^0,w,c
  4907   002094  6E50               	movwf	(floorf@e+1)^0,c
  4908   002096  BE50               	btfsc	(floorf@e+1)^0,7,c
  4909   002098  EF57  F010         	goto	u3531
  4910   00209C  5050               	movf	(floorf@e+1)^0,w,c
  4911   00209E  E109               	bnz	u3530
  4912   0020A0  0E17               	movlw	23
  4913   0020A2  5C4F               	subwf	floorf@e^0,w,c
  4914   0020A4  A0D8               	btfss	status,0,c
  4915   0020A6  EF57  F010         	goto	u3531
  4916   0020AA  EF59  F010         	goto	u3530
  4917   0020AE                     u3531:
  4918   0020AE  EF63  F010         	goto	l3227
  4919   0020B2                     u3530:
  4920   0020B2                     l3225:
  4921   0020B2  C041  F041         	movff	floorf@x,?_floorf
  4922   0020B6  C042  F042         	movff	floorf@x+1,?_floorf+1
  4923   0020BA  C043  F043         	movff	floorf@x+2,?_floorf+2
  4924   0020BE  C044  F044         	movff	floorf@x+3,?_floorf+3
  4925   0020C2  EF26  F011         	goto	l1014
  4926   0020C6                     l3227:
  4927   0020C6  BE50               	btfsc	(floorf@e+1)^0,7,c
  4928   0020C8  EF68  F010         	goto	u3541
  4929   0020CC  EF6A  F010         	goto	u3540
  4930   0020D0                     u3541:
  4931   0020D0  EFDA  F010         	goto	l3237
  4932   0020D4                     u3540:
  4933   0020D4  C04F  F045         	movff	floorf@e,??_floorf
  4934   0020D8  0EFF               	movlw	255
  4935   0020DA  6E46               	movwf	(??_floorf+1)^0,c
  4936   0020DC  0EFF               	movlw	255
  4937   0020DE  6E47               	movwf	(??_floorf+2)^0,c
  4938   0020E0  0E7F               	movlw	127
  4939   0020E2  6E48               	movwf	(??_floorf+3)^0,c
  4940   0020E4  0E00               	movlw	0
  4941   0020E6  6E49               	movwf	(??_floorf+4)^0,c
  4942   0020E8                     u3555:
  4943   0020E8  6645               	tstfsz	??_floorf^0,c
  4944   0020EA  EF79  F010         	goto	u3556
  4945   0020EE  EF81  F010         	goto	u3557
  4946   0020F2                     u3556:
  4947   0020F2  3449               	rlcf	(??_floorf+4)^0,w,c
  4948   0020F4  3249               	rrcf	(??_floorf+4)^0,f,c
  4949   0020F6  3248               	rrcf	(??_floorf+3)^0,f,c
  4950   0020F8  3247               	rrcf	(??_floorf+2)^0,f,c
  4951   0020FA  3246               	rrcf	(??_floorf+1)^0,f,c
  4952   0020FC  2E45               	decfsz	??_floorf^0,f,c
  4953   0020FE  EF74  F010         	goto	u3555
  4954   002102                     u3557:
  4955   002102  C046  F04B         	movff	??_floorf+1,floorf@m
  4956   002106  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4957   00210A  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4958   00210E  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4959   002112  504B               	movf	floorf@m^0,w,c
  4960   002114  1451               	andwf	floorf@u^0,w,c
  4961   002116  6E45               	movwf	??_floorf^0,c
  4962   002118  504C               	movf	(floorf@m+1)^0,w,c
  4963   00211A  1452               	andwf	(floorf@u+1)^0,w,c
  4964   00211C  6E46               	movwf	(??_floorf+1)^0,c
  4965   00211E  504D               	movf	(floorf@m+2)^0,w,c
  4966   002120  1453               	andwf	(floorf@u+2)^0,w,c
  4967   002122  6E47               	movwf	(??_floorf+2)^0,c
  4968   002124  504E               	movf	(floorf@m+3)^0,w,c
  4969   002126  1454               	andwf	(floorf@u+3)^0,w,c
  4970   002128  6E48               	movwf	(??_floorf+3)^0,c
  4971   00212A  5045               	movf	??_floorf^0,w,c
  4972   00212C  1046               	iorwf	(??_floorf+1)^0,w,c
  4973   00212E  1047               	iorwf	(??_floorf+2)^0,w,c
  4974   002130  1048               	iorwf	(??_floorf+3)^0,w,c
  4975   002132  A4D8               	btfss	status,2,c
  4976   002134  EF9E  F010         	goto	u3561
  4977   002138  EFA0  F010         	goto	u3560
  4978   00213C                     u3561:
  4979   00213C  EFA2  F010         	goto	l3233
  4980   002140                     u3560:
  4981   002140  EF59  F010         	goto	l3225
  4982   002144                     l3233:
  4983   002144  C051  F045         	movff	floorf@u,??_floorf
  4984   002148  C052  F046         	movff	floorf@u+1,??_floorf+1
  4985   00214C  C053  F047         	movff	floorf@u+2,??_floorf+2
  4986   002150  C054  F048         	movff	floorf@u+3,??_floorf+3
  4987   002154  0E20               	movlw	32
  4988   002156  EFB2  F010         	goto	u3570
  4989   00215A                     u3575:
  4990   00215A  90D8               	bcf	status,0,c
  4991   00215C  3248               	rrcf	(??_floorf+3)^0,f,c
  4992   00215E  3247               	rrcf	(??_floorf+2)^0,f,c
  4993   002160  3246               	rrcf	(??_floorf+1)^0,f,c
  4994   002162  3245               	rrcf	??_floorf^0,f,c
  4995   002164                     u3570:
  4996   002164  2EE8               	decfsz	wreg,f,c
  4997   002166  EFAD  F010         	goto	u3575
  4998   00216A  5045               	movf	??_floorf^0,w,c
  4999   00216C  1046               	iorwf	(??_floorf+1)^0,w,c
  5000   00216E  1047               	iorwf	(??_floorf+2)^0,w,c
  5001   002170  1048               	iorwf	(??_floorf+3)^0,w,c
  5002   002172  B4D8               	btfsc	status,2,c
  5003   002174  EFBE  F010         	goto	u3581
  5004   002178  EFC0  F010         	goto	u3580
  5005   00217C                     u3581:
  5006   00217C  EFC8  F010         	goto	l1017
  5007   002180                     u3580:
  5008   002180  504B               	movf	floorf@m^0,w,c
  5009   002182  2651               	addwf	floorf@u^0,f,c
  5010   002184  504C               	movf	(floorf@m+1)^0,w,c
  5011   002186  2252               	addwfc	(floorf@u+1)^0,f,c
  5012   002188  504D               	movf	(floorf@m+2)^0,w,c
  5013   00218A  2253               	addwfc	(floorf@u+2)^0,f,c
  5014   00218C  504E               	movf	(floorf@m+3)^0,w,c
  5015   00218E  2254               	addwfc	(floorf@u+3)^0,f,c
  5016   002190                     l1017:
  5017   002190  1C4B               	comf	floorf@m^0,w,c
  5018   002192  6E45               	movwf	??_floorf^0,c
  5019   002194  1C4C               	comf	(floorf@m+1)^0,w,c
  5020   002196  6E46               	movwf	(??_floorf+1)^0,c
  5021   002198  1C4D               	comf	(floorf@m+2)^0,w,c
  5022   00219A  6E47               	movwf	(??_floorf+2)^0,c
  5023   00219C  1C4E               	comf	(floorf@m+3)^0,w,c
  5024   00219E  6E48               	movwf	(??_floorf+3)^0,c
  5025   0021A0  5045               	movf	??_floorf^0,w,c
  5026   0021A2  1651               	andwf	floorf@u^0,f,c
  5027   0021A4  5046               	movf	(??_floorf+1)^0,w,c
  5028   0021A6  1652               	andwf	(floorf@u+1)^0,f,c
  5029   0021A8  5047               	movf	(??_floorf+2)^0,w,c
  5030   0021AA  1653               	andwf	(floorf@u+2)^0,f,c
  5031   0021AC  5048               	movf	(??_floorf+3)^0,w,c
  5032   0021AE  1654               	andwf	(floorf@u+3)^0,f,c
  5033   0021B0  EF1E  F011         	goto	l3245
  5034   0021B4                     l3237:
  5035   0021B4  C051  F045         	movff	floorf@u,??_floorf
  5036   0021B8  C052  F046         	movff	floorf@u+1,??_floorf+1
  5037   0021BC  C053  F047         	movff	floorf@u+2,??_floorf+2
  5038   0021C0  C054  F048         	movff	floorf@u+3,??_floorf+3
  5039   0021C4  0E20               	movlw	32
  5040   0021C6  EFEA  F010         	goto	u3590
  5041   0021CA                     u3595:
  5042   0021CA  90D8               	bcf	status,0,c
  5043   0021CC  3248               	rrcf	(??_floorf+3)^0,f,c
  5044   0021CE  3247               	rrcf	(??_floorf+2)^0,f,c
  5045   0021D0  3246               	rrcf	(??_floorf+1)^0,f,c
  5046   0021D2  3245               	rrcf	??_floorf^0,f,c
  5047   0021D4                     u3590:
  5048   0021D4  2EE8               	decfsz	wreg,f,c
  5049   0021D6  EFE5  F010         	goto	u3595
  5050   0021DA  5045               	movf	??_floorf^0,w,c
  5051   0021DC  1046               	iorwf	(??_floorf+1)^0,w,c
  5052   0021DE  1047               	iorwf	(??_floorf+2)^0,w,c
  5053   0021E0  1048               	iorwf	(??_floorf+3)^0,w,c
  5054   0021E2  A4D8               	btfss	status,2,c
  5055   0021E4  EFF6  F010         	goto	u3601
  5056   0021E8  EFF8  F010         	goto	u3600
  5057   0021EC                     u3601:
  5058   0021EC  EF02  F011         	goto	l3241
  5059   0021F0                     u3600:
  5060   0021F0  0E00               	movlw	0
  5061   0021F2  6E51               	movwf	floorf@u^0,c
  5062   0021F4  0E00               	movlw	0
  5063   0021F6  6E52               	movwf	(floorf@u+1)^0,c
  5064   0021F8  0E00               	movlw	0
  5065   0021FA  6E53               	movwf	(floorf@u+2)^0,c
  5066   0021FC  0E00               	movlw	0
  5067   0021FE  6E54               	movwf	(floorf@u+3)^0,c
  5068   002200  EF1E  F011         	goto	l3245
  5069   002204                     l3241:
  5070   002204  90D8               	bcf	status,0,c
  5071   002206  3451               	rlcf	floorf@u^0,w,c
  5072   002208  6E45               	movwf	??_floorf^0,c
  5073   00220A  3452               	rlcf	(floorf@u+1)^0,w,c
  5074   00220C  6E46               	movwf	(??_floorf+1)^0,c
  5075   00220E  3453               	rlcf	(floorf@u+2)^0,w,c
  5076   002210  6E47               	movwf	(??_floorf+2)^0,c
  5077   002212  3454               	rlcf	(floorf@u+3)^0,w,c
  5078   002214  6E48               	movwf	(??_floorf+3)^0,c
  5079   002216  5045               	movf	??_floorf^0,w,c
  5080   002218  1046               	iorwf	(??_floorf+1)^0,w,c
  5081   00221A  1047               	iorwf	(??_floorf+2)^0,w,c
  5082   00221C  1048               	iorwf	(??_floorf+3)^0,w,c
  5083   00221E  B4D8               	btfsc	status,2,c
  5084   002220  EF14  F011         	goto	u3611
  5085   002224  EF16  F011         	goto	u3610
  5086   002228                     u3611:
  5087   002228  EF1E  F011         	goto	l3245
  5088   00222C                     u3610:
  5089   00222C  0E00               	movlw	0
  5090   00222E  6E51               	movwf	floorf@u^0,c
  5091   002230  0E00               	movlw	0
  5092   002232  6E52               	movwf	(floorf@u+1)^0,c
  5093   002234  0E80               	movlw	128
  5094   002236  6E53               	movwf	(floorf@u+2)^0,c
  5095   002238  0EBF               	movlw	191
  5096   00223A  6E54               	movwf	(floorf@u+3)^0,c
  5097   00223C                     l3245:
  5098   00223C  C051  F041         	movff	floorf@u,?_floorf
  5099   002240  C052  F042         	movff	floorf@u+1,?_floorf+1
  5100   002244  C053  F043         	movff	floorf@u+2,?_floorf+2
  5101   002248  C054  F044         	movff	floorf@u+3,?_floorf+3
  5102   00224C                     l1014:
  5103   00224C  0012               	return		;funcret
  5104   00224E                     __end_of_floorf:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function ___fpclassifyf *****************
  5108 ;; Defined at:
  5109 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  x               4    0[COMRAM] float 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  u               4   10[COMRAM] struct .
  5114 ;;  e               2    8[COMRAM] int 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  2    0[COMRAM] int 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5124 ;;      Params:         4       0       0       0       0       0       0
  5125 ;;      Locals:         6       0       0       0       0       0       0
  5126 ;;      Temps:          4       0       0       0       0       0       0
  5127 ;;      Totals:        14       0       0       0       0       0       0
  5128 ;;Total ram usage:       14 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_efgtoa
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text21
  5138   002986                     __ptext21:
  5139                           	callstack 0
  5140   002986                     ___fpclassifyf:
  5141                           	callstack 25
  5142   002986  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5143   00298A  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5144   00298E  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5145   002992  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5146   002996  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5147   00299A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5148   00299E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5149   0029A2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5150   0029A6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5151   0029AA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5152   0029AE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5153   0029B2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5154   0029B6  0E18               	movlw	24
  5155   0029B8  EFE3  F014         	goto	u3430
  5156   0029BC                     u3435:
  5157   0029BC  90D8               	bcf	status,0,c
  5158   0029BE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5159   0029C0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5160   0029C2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5161   0029C4  3205               	rrcf	??___fpclassifyf^0,f,c
  5162   0029C6                     u3430:
  5163   0029C6  2EE8               	decfsz	wreg,f,c
  5164   0029C8  EFDE  F014         	goto	u3435
  5165   0029CC  5005               	movf	??___fpclassifyf^0,w,c
  5166   0029CE  6E09               	movwf	___fpclassifyf@e^0,c
  5167   0029D0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5168   0029D2  5009               	movf	___fpclassifyf@e^0,w,c
  5169   0029D4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5170   0029D6  A4D8               	btfss	status,2,c
  5171   0029D8  EFF0  F014         	goto	u3441
  5172   0029DC  EFF2  F014         	goto	u3440
  5173   0029E0                     u3441:
  5174   0029E0  EF12  F015         	goto	l3199
  5175   0029E4                     u3440:
  5176   0029E4  90D8               	bcf	status,0,c
  5177   0029E6  340B               	rlcf	___fpclassifyf@u^0,w,c
  5178   0029E8  6E05               	movwf	??___fpclassifyf^0,c
  5179   0029EA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5180   0029EC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5181   0029EE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5182   0029F0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5183   0029F2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5184   0029F4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5185   0029F6  5005               	movf	??___fpclassifyf^0,w,c
  5186   0029F8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5187   0029FA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5188   0029FC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5189   0029FE  A4D8               	btfss	status,2,c
  5190   002A00  EF04  F015         	goto	u3451
  5191   002A04  EF06  F015         	goto	u3450
  5192   002A08                     u3451:
  5193   002A08  EF0C  F015         	goto	l3195
  5194   002A0C                     u3450:
  5195   002A0C  0E00               	movlw	0
  5196   002A0E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5197   002A10  0E02               	movlw	2
  5198   002A12  6E01               	movwf	?___fpclassifyf^0,c
  5199   002A14  EF41  F015         	goto	l1000
  5200   002A18                     l3195:
  5201   002A18  0E00               	movlw	0
  5202   002A1A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5203   002A1C  0E03               	movlw	3
  5204   002A1E  6E01               	movwf	?___fpclassifyf^0,c
  5205   002A20  EF41  F015         	goto	l1000
  5206   002A24                     l3199:
  5207   002A24  2809               	incf	___fpclassifyf@e^0,w,c
  5208   002A26  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5209   002A28  A4D8               	btfss	status,2,c
  5210   002A2A  EF19  F015         	goto	u3461
  5211   002A2E  EF1B  F015         	goto	u3460
  5212   002A32                     u3461:
  5213   002A32  EF3D  F015         	goto	l3205
  5214   002A36                     u3460:
  5215   002A36  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5216   002A3A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5217   002A3E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5218   002A42  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5219   002A46  0E09               	movlw	9
  5220   002A48                     u3475:
  5221   002A48  90D8               	bcf	status,0,c
  5222   002A4A  3605               	rlcf	??___fpclassifyf^0,f,c
  5223   002A4C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5224   002A4E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5225   002A50  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5226   002A52  2EE8               	decfsz	wreg,f,c
  5227   002A54  EF24  F015         	goto	u3475
  5228   002A58  5005               	movf	??___fpclassifyf^0,w,c
  5229   002A5A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5230   002A5C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5231   002A5E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5232   002A60  B4D8               	btfsc	status,2,c
  5233   002A62  EF35  F015         	goto	u3481
  5234   002A66  EF38  F015         	goto	u3480
  5235   002A6A                     u3481:
  5236   002A6A  0E01               	movlw	1
  5237   002A6C  EF39  F015         	goto	u3490
  5238   002A70                     u3480:
  5239   002A70  0E00               	movlw	0
  5240   002A72                     u3490:
  5241   002A72  6E01               	movwf	?___fpclassifyf^0,c
  5242   002A74  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5243   002A76  EF41  F015         	goto	l1000
  5244   002A7A                     l3205:
  5245   002A7A  0E00               	movlw	0
  5246   002A7C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5247   002A7E  0E04               	movlw	4
  5248   002A80  6E01               	movwf	?___fpclassifyf^0,c
  5249   002A82                     l1000:
  5250   002A82  0012               	return		;funcret
  5251   002A84                     __end_of___fpclassifyf:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function ___fltol *****************
  5255 ;; Defined at:
  5256 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  f1              4    0[COMRAM] int 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  exp1            1    9[COMRAM] unsigned char 
  5261 ;;  sign1           1    8[COMRAM] unsigned char 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  4    0[COMRAM] long 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5271 ;;      Params:         4       0       0       0       0       0       0
  5272 ;;      Locals:         2       0       0       0       0       0       0
  5273 ;;      Temps:          4       0       0       0       0       0       0
  5274 ;;      Totals:        10       0       0       0       0       0       0
  5275 ;;Total ram usage:       10 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_efgtoa
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text22
  5285   00277C                     __ptext22:
  5286                           	callstack 0
  5287   00277C                     ___fltol:
  5288                           	callstack 25
  5289   00277C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5290   00277E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5291   002780  6E0A               	movwf	___fltol@exp1^0,c
  5292   002782  500A               	movf	___fltol@exp1^0,w,c
  5293   002784  A4D8               	btfss	status,2,c
  5294   002786  EFC7  F013         	goto	u3331
  5295   00278A  EFC9  F013         	goto	u3330
  5296   00278E                     u3331:
  5297   00278E  EFD3  F013         	goto	l3133
  5298   002792                     u3330:
  5299   002792                     l3129:
  5300   002792  0E00               	movlw	0
  5301   002794  6E01               	movwf	?___fltol^0,c
  5302   002796  0E00               	movlw	0
  5303   002798  6E02               	movwf	(?___fltol+1)^0,c
  5304   00279A  0E00               	movlw	0
  5305   00279C  6E03               	movwf	(?___fltol+2)^0,c
  5306   00279E  0E00               	movlw	0
  5307   0027A0  6E04               	movwf	(?___fltol+3)^0,c
  5308   0027A2  EF40  F014         	goto	l451
  5309   0027A6                     l3133:
  5310   0027A6  C001  F005         	movff	___fltol@f1,??___fltol
  5311   0027AA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5312   0027AE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5313   0027B2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5314   0027B6  0E20               	movlw	32
  5315   0027B8  EFE3  F013         	goto	u3340
  5316   0027BC                     u3345:
  5317   0027BC  90D8               	bcf	status,0,c
  5318   0027BE  3208               	rrcf	(??___fltol+3)^0,f,c
  5319   0027C0  3207               	rrcf	(??___fltol+2)^0,f,c
  5320   0027C2  3206               	rrcf	(??___fltol+1)^0,f,c
  5321   0027C4  3205               	rrcf	??___fltol^0,f,c
  5322   0027C6                     u3340:
  5323   0027C6  2EE8               	decfsz	wreg,f,c
  5324   0027C8  EFDE  F013         	goto	u3345
  5325   0027CC  5005               	movf	??___fltol^0,w,c
  5326   0027CE  6E09               	movwf	___fltol@sign1^0,c
  5327   0027D0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5328   0027D2  0EFF               	movlw	255
  5329   0027D4  1601               	andwf	___fltol@f1^0,f,c
  5330   0027D6  0EFF               	movlw	255
  5331   0027D8  1602               	andwf	(___fltol@f1+1)^0,f,c
  5332   0027DA  0EFF               	movlw	255
  5333   0027DC  1603               	andwf	(___fltol@f1+2)^0,f,c
  5334   0027DE  0E00               	movlw	0
  5335   0027E0  1604               	andwf	(___fltol@f1+3)^0,f,c
  5336   0027E2  0E96               	movlw	150
  5337   0027E4  5E0A               	subwf	___fltol@exp1^0,f,c
  5338   0027E6  BE0A               	btfsc	___fltol@exp1^0,7,c
  5339   0027E8  EFFA  F013         	goto	u3350
  5340   0027EC  EFF8  F013         	goto	u3351
  5341   0027F0                     u3351:
  5342   0027F0  EF10  F014         	goto	l3153
  5343   0027F4                     u3350:
  5344   0027F4  500A               	movf	___fltol@exp1^0,w,c
  5345   0027F6  0A80               	xorlw	128
  5346   0027F8  0F97               	addlw	151
  5347   0027FA  B0D8               	btfsc	status,0,c
  5348   0027FC  EF02  F014         	goto	u3361
  5349   002800  EF04  F014         	goto	u3360
  5350   002804                     u3361:
  5351   002804  EF06  F014         	goto	l3149
  5352   002808                     u3360:
  5353   002808  EFC9  F013         	goto	l3129
  5354   00280C                     l3149:
  5355   00280C  90D8               	bcf	status,0,c
  5356   00280E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5357   002810  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5358   002812  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5359   002814  3201               	rrcf	___fltol@f1^0,f,c
  5360   002816  3E0A               	incfsz	___fltol@exp1^0,f,c
  5361   002818  EF06  F014         	goto	l3149
  5362   00281C  EF28  F014         	goto	l3163
  5363   002820                     l3153:
  5364   002820  0E1F               	movlw	31
  5365   002822  640A               	cpfsgt	___fltol@exp1^0,c
  5366   002824  EF16  F014         	goto	u3371
  5367   002828  EF18  F014         	goto	u3370
  5368   00282C                     u3371:
  5369   00282C  EF20  F014         	goto	l3161
  5370   002830                     u3370:
  5371   002830  EFC9  F013         	goto	l3129
  5372   002834                     l3159:
  5373   002834  90D8               	bcf	status,0,c
  5374   002836  3601               	rlcf	___fltol@f1^0,f,c
  5375   002838  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5376   00283A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5377   00283C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5378   00283E  060A               	decf	___fltol@exp1^0,f,c
  5379   002840                     l3161:
  5380   002840  500A               	movf	___fltol@exp1^0,w,c
  5381   002842  A4D8               	btfss	status,2,c
  5382   002844  EF26  F014         	goto	u3381
  5383   002848  EF28  F014         	goto	u3380
  5384   00284C                     u3381:
  5385   00284C  EF1A  F014         	goto	l3159
  5386   002850                     u3380:
  5387   002850                     l3163:
  5388   002850  5009               	movf	___fltol@sign1^0,w,c
  5389   002852  B4D8               	btfsc	status,2,c
  5390   002854  EF2E  F014         	goto	u3391
  5391   002858  EF30  F014         	goto	u3390
  5392   00285C                     u3391:
  5393   00285C  EF38  F014         	goto	l3167
  5394   002860                     u3390:
  5395   002860  1E04               	comf	(___fltol@f1+3)^0,f,c
  5396   002862  1E03               	comf	(___fltol@f1+2)^0,f,c
  5397   002864  1E02               	comf	(___fltol@f1+1)^0,f,c
  5398   002866  6C01               	negf	___fltol@f1^0,c
  5399   002868  0E00               	movlw	0
  5400   00286A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5401   00286C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5402   00286E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5403   002870                     l3167:
  5404   002870  C001  F001         	movff	___fltol@f1,?___fltol
  5405   002874  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5406   002878  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5407   00287C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5408   002880                     l451:
  5409   002880  0012               	return		;funcret
  5410   002882                     __end_of___fltol:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function ___flsub *****************
  5414 ;; Defined at:
  5415 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  b               4   39[COMRAM] long 
  5418 ;;  a               4   43[COMRAM] long 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  4   39[COMRAM] long 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5430 ;;      Params:         8       0       0       0       0       0       0
  5431 ;;      Locals:         0       0       0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0
  5433 ;;      Totals:         8       0       0       0       0       0       0
  5434 ;;Total ram usage:        8 bytes
  5435 ;; Hardware stack levels used: 1
  5436 ;; Hardware stack levels required when called: 1
  5437 ;; This function calls:
  5438 ;;		___fladd
  5439 ;; This function is called by:
  5440 ;;		_efgtoa
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text23
  5445   0033D2                     __ptext23:
  5446                           	callstack 0
  5447   0033D2                     ___flsub:
  5448                           	callstack 24
  5449   0033D2  0E00               	movlw	0
  5450   0033D4  1A2C               	xorwf	___flsub@a^0,f,c
  5451   0033D6  0E00               	movlw	0
  5452   0033D8  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5453   0033DA  0E00               	movlw	0
  5454   0033DC  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5455   0033DE  0E80               	movlw	128
  5456   0033E0  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5457   0033E2  C028  F001         	movff	___flsub@b,___fladd@b
  5458   0033E6  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5459   0033EA  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5460   0033EE  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5461   0033F2  C02C  F005         	movff	___flsub@a,___fladd@a
  5462   0033F6  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5463   0033FA  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5464   0033FE  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5465   003402  EC6A  F008         	call	___fladd	;wreg free
  5466   003406  C001  F028         	movff	?___fladd,?___flsub
  5467   00340A  C002  F029         	movff	?___fladd+1,?___flsub+1
  5468   00340E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5469   003412  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5470   003416  0012               	return		;funcret
  5471   003418                     __end_of___flsub:
  5472                           	callstack 0
  5473                           
  5474 ;; *************** function ___fladd *****************
  5475 ;; Defined at:
  5476 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  b               4    0[COMRAM] long 
  5479 ;;  a               4    4[COMRAM] long 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  grs             1   15[COMRAM] unsigned char 
  5482 ;;  bexp            1   14[COMRAM] unsigned char 
  5483 ;;  aexp            1   13[COMRAM] unsigned char 
  5484 ;;  signs           1   12[COMRAM] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  4    0[COMRAM] unsigned char 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5494 ;;      Params:         8       0       0       0       0       0       0
  5495 ;;      Locals:         4       0       0       0       0       0       0
  5496 ;;      Temps:          4       0       0       0       0       0       0
  5497 ;;      Totals:        16       0       0       0       0       0       0
  5498 ;;Total ram usage:       16 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		___flsub
  5504 ;;		_efgtoa
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text24
  5509   0010D4                     __ptext24:
  5510                           	callstack 0
  5511   0010D4                     ___fladd:
  5512                           	callstack 24
  5513   0010D4  5004               	movf	(___fladd@b+3)^0,w,c
  5514   0010D6  0B80               	andlw	128
  5515   0010D8  6E0D               	movwf	___fladd@signs^0,c
  5516   0010DA  5004               	movf	(___fladd@b+3)^0,w,c
  5517   0010DC  2404               	addwf	(___fladd@b+3)^0,w,c
  5518   0010DE  6E0F               	movwf	___fladd@bexp^0,c
  5519   0010E0  AE03               	btfss	(___fladd@b+2)^0,7,c
  5520   0010E2  EF75  F008         	goto	u2291
  5521   0010E6  EF77  F008         	goto	u2290
  5522   0010EA                     u2291:
  5523   0010EA  EF78  F008         	goto	l2505
  5524   0010EE                     u2290:
  5525   0010EE  800F               	bsf	___fladd@bexp^0,0,c
  5526   0010F0                     l2505:
  5527   0010F0  500F               	movf	___fladd@bexp^0,w,c
  5528   0010F2  B4D8               	btfsc	status,2,c
  5529   0010F4  EF7E  F008         	goto	u2301
  5530   0010F8  EF80  F008         	goto	u2300
  5531   0010FC                     u2301:
  5532   0010FC  EF95  F008         	goto	l2515
  5533   001100                     u2300:
  5534   001100  280F               	incf	___fladd@bexp^0,w,c
  5535   001102  A4D8               	btfss	status,2,c
  5536   001104  EF86  F008         	goto	u2311
  5537   001108  EF88  F008         	goto	u2310
  5538   00110C                     u2311:
  5539   00110C  EF90  F008         	goto	l2511
  5540   001110                     u2310:
  5541   001110  0E00               	movlw	0
  5542   001112  6E01               	movwf	___fladd@b^0,c
  5543   001114  0E00               	movlw	0
  5544   001116  6E02               	movwf	(___fladd@b+1)^0,c
  5545   001118  0E00               	movlw	0
  5546   00111A  6E03               	movwf	(___fladd@b+2)^0,c
  5547   00111C  0E00               	movlw	0
  5548   00111E  6E04               	movwf	(___fladd@b+3)^0,c
  5549   001120                     l2511:
  5550   001120  8E03               	bsf	(___fladd@b+2)^0,7,c
  5551   001122  0E00               	movlw	0
  5552   001124  6E04               	movwf	(___fladd@b+3)^0,c
  5553   001126  EF9D  F008         	goto	l2517
  5554   00112A                     l2515:
  5555   00112A  0E00               	movlw	0
  5556   00112C  6E01               	movwf	___fladd@b^0,c
  5557   00112E  0E00               	movlw	0
  5558   001130  6E02               	movwf	(___fladd@b+1)^0,c
  5559   001132  0E00               	movlw	0
  5560   001134  6E03               	movwf	(___fladd@b+2)^0,c
  5561   001136  0E00               	movlw	0
  5562   001138  6E04               	movwf	(___fladd@b+3)^0,c
  5563   00113A                     l2517:
  5564   00113A  5008               	movf	(___fladd@a+3)^0,w,c
  5565   00113C  0B80               	andlw	128
  5566   00113E  6E0E               	movwf	___fladd@aexp^0,c
  5567   001140  500D               	movf	___fladd@signs^0,w,c
  5568   001142  180E               	xorwf	___fladd@aexp^0,w,c
  5569   001144  B4D8               	btfsc	status,2,c
  5570   001146  EFA7  F008         	goto	u2321
  5571   00114A  EFA9  F008         	goto	u2320
  5572   00114E                     u2321:
  5573   00114E  EFAA  F008         	goto	l2523
  5574   001152                     u2320:
  5575   001152  8C0D               	bsf	___fladd@signs^0,6,c
  5576   001154                     l2523:
  5577   001154  5008               	movf	(___fladd@a+3)^0,w,c
  5578   001156  2408               	addwf	(___fladd@a+3)^0,w,c
  5579   001158  6E0E               	movwf	___fladd@aexp^0,c
  5580   00115A  AE07               	btfss	(___fladd@a+2)^0,7,c
  5581   00115C  EFB2  F008         	goto	u2331
  5582   001160  EFB4  F008         	goto	u2330
  5583   001164                     u2331:
  5584   001164  EFB5  F008         	goto	l2529
  5585   001168                     u2330:
  5586   001168  800E               	bsf	___fladd@aexp^0,0,c
  5587   00116A                     l2529:
  5588   00116A  500E               	movf	___fladd@aexp^0,w,c
  5589   00116C  B4D8               	btfsc	status,2,c
  5590   00116E  EFBB  F008         	goto	u2341
  5591   001172  EFBD  F008         	goto	u2340
  5592   001176                     u2341:
  5593   001176  EFD2  F008         	goto	l2539
  5594   00117A                     u2340:
  5595   00117A  280E               	incf	___fladd@aexp^0,w,c
  5596   00117C  A4D8               	btfss	status,2,c
  5597   00117E  EFC3  F008         	goto	u2351
  5598   001182  EFC5  F008         	goto	u2350
  5599   001186                     u2351:
  5600   001186  EFCD  F008         	goto	l2535
  5601   00118A                     u2350:
  5602   00118A  0E00               	movlw	0
  5603   00118C  6E05               	movwf	___fladd@a^0,c
  5604   00118E  0E00               	movlw	0
  5605   001190  6E06               	movwf	(___fladd@a+1)^0,c
  5606   001192  0E00               	movlw	0
  5607   001194  6E07               	movwf	(___fladd@a+2)^0,c
  5608   001196  0E00               	movlw	0
  5609   001198  6E08               	movwf	(___fladd@a+3)^0,c
  5610   00119A                     l2535:
  5611   00119A  8E07               	bsf	(___fladd@a+2)^0,7,c
  5612   00119C  0E00               	movlw	0
  5613   00119E  6E08               	movwf	(___fladd@a+3)^0,c
  5614   0011A0  EFDA  F008         	goto	l2541
  5615   0011A4                     l2539:
  5616   0011A4  0E00               	movlw	0
  5617   0011A6  6E05               	movwf	___fladd@a^0,c
  5618   0011A8  0E00               	movlw	0
  5619   0011AA  6E06               	movwf	(___fladd@a+1)^0,c
  5620   0011AC  0E00               	movlw	0
  5621   0011AE  6E07               	movwf	(___fladd@a+2)^0,c
  5622   0011B0  0E00               	movlw	0
  5623   0011B2  6E08               	movwf	(___fladd@a+3)^0,c
  5624   0011B4                     l2541:
  5625   0011B4  500F               	movf	___fladd@bexp^0,w,c
  5626   0011B6  5C0E               	subwf	___fladd@aexp^0,w,c
  5627   0011B8  B0D8               	btfsc	status,0,c
  5628   0011BA  EFE1  F008         	goto	u2361
  5629   0011BE  EFE3  F008         	goto	u2360
  5630   0011C2                     u2361:
  5631   0011C2  EF0A  F009         	goto	l2577
  5632   0011C6                     u2360:
  5633   0011C6  AC0D               	btfss	___fladd@signs^0,6,c
  5634   0011C8  EFE8  F008         	goto	u2371
  5635   0011CC  EFEA  F008         	goto	u2370
  5636   0011D0                     u2371:
  5637   0011D0  EFEC  F008         	goto	l2547
  5638   0011D4                     u2370:
  5639   0011D4  0E80               	movlw	128
  5640   0011D6  1A0D               	xorwf	___fladd@signs^0,f,c
  5641   0011D8                     l2547:
  5642   0011D8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5643   0011DC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5644   0011E0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5645   0011E4  C001  F010         	movff	___fladd@b,___fladd@grs
  5646   0011E8  C005  F001         	movff	___fladd@a,___fladd@b
  5647   0011EC  C010  F005         	movff	___fladd@grs,___fladd@a
  5648   0011F0  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5649   0011F4  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5650   0011F8  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5651   0011FC  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5652   001200  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5653   001204  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5654   001208  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5655   00120C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5656   001210  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5657   001214                     l2577:
  5658   001214  0E00               	movlw	0
  5659   001216  6E10               	movwf	___fladd@grs^0,c
  5660   001218  500F               	movf	___fladd@bexp^0,w,c
  5661   00121A  C00E  F009         	movff	___fladd@aexp,??___fladd
  5662   00121E  6A0A               	clrf	(??___fladd+1)^0,c
  5663   001220  5E09               	subwf	??___fladd^0,f,c
  5664   001222  0E00               	movlw	0
  5665   001224  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5666   001226  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5667   001228  EF1F  F009         	goto	u2381
  5668   00122C  500A               	movf	(??___fladd+1)^0,w,c
  5669   00122E  E109               	bnz	u2380
  5670   001230  0E1A               	movlw	26
  5671   001232  5C09               	subwf	??___fladd^0,w,c
  5672   001234  A0D8               	btfss	status,0,c
  5673   001236  EF1F  F009         	goto	u2381
  5674   00123A  EF21  F009         	goto	u2380
  5675   00123E                     u2381:
  5676   00123E  EF58  F009         	goto	l683
  5677   001242                     u2380:
  5678   001242  5001               	movf	___fladd@b^0,w,c
  5679   001244  1002               	iorwf	(___fladd@b+1)^0,w,c
  5680   001246  1003               	iorwf	(___fladd@b+2)^0,w,c
  5681   001248  1004               	iorwf	(___fladd@b+3)^0,w,c
  5682   00124A  A4D8               	btfss	status,2,c
  5683   00124C  EF2A  F009         	goto	u2391
  5684   001250  EF2D  F009         	goto	u2390
  5685   001254                     u2391:
  5686   001254  0E01               	movlw	1
  5687   001256  EF2E  F009         	goto	u2400
  5688   00125A                     u2390:
  5689   00125A  0E00               	movlw	0
  5690   00125C                     u2400:
  5691   00125C  6E10               	movwf	___fladd@grs^0,c
  5692   00125E  0E00               	movlw	0
  5693   001260  6E01               	movwf	___fladd@b^0,c
  5694   001262  0E00               	movlw	0
  5695   001264  6E02               	movwf	(___fladd@b+1)^0,c
  5696   001266  0E00               	movlw	0
  5697   001268  6E03               	movwf	(___fladd@b+2)^0,c
  5698   00126A  0E00               	movlw	0
  5699   00126C  6E04               	movwf	(___fladd@b+3)^0,c
  5700   00126E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5701   001272  EF61  F009         	goto	l682
  5702   001276                     l684:
  5703   001276  A010               	btfss	___fladd@grs^0,0,c
  5704   001278  EF40  F009         	goto	u2411
  5705   00127C  EF42  F009         	goto	u2410
  5706   001280                     u2411:
  5707   001280  EF48  F009         	goto	l2589
  5708   001284                     u2410:
  5709   001284  90D8               	bcf	status,0,c
  5710   001286  3010               	rrcf	___fladd@grs^0,w,c
  5711   001288  0901               	iorlw	1
  5712   00128A  6E10               	movwf	___fladd@grs^0,c
  5713   00128C  EF4A  F009         	goto	l2591
  5714   001290                     l2589:
  5715   001290  90D8               	bcf	status,0,c
  5716   001292  3210               	rrcf	___fladd@grs^0,f,c
  5717   001294                     l2591:
  5718   001294  A001               	btfss	___fladd@b^0,0,c
  5719   001296  EF4F  F009         	goto	u2421
  5720   00129A  EF51  F009         	goto	u2420
  5721   00129E                     u2421:
  5722   00129E  EF52  F009         	goto	l2595
  5723   0012A2                     u2420:
  5724   0012A2  8E10               	bsf	___fladd@grs^0,7,c
  5725   0012A4                     l2595:
  5726   0012A4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5727   0012A6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5728   0012A8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5729   0012AA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5730   0012AC  3201               	rrcf	___fladd@b^0,f,c
  5731   0012AE  2A0F               	incf	___fladd@bexp^0,f,c
  5732   0012B0                     l683:
  5733   0012B0  500E               	movf	___fladd@aexp^0,w,c
  5734   0012B2  5C0F               	subwf	___fladd@bexp^0,w,c
  5735   0012B4  A0D8               	btfss	status,0,c
  5736   0012B6  EF5F  F009         	goto	u2431
  5737   0012BA  EF61  F009         	goto	u2430
  5738   0012BE                     u2431:
  5739   0012BE  EF3B  F009         	goto	l684
  5740   0012C2                     u2430:
  5741   0012C2                     l682:
  5742   0012C2  BC0D               	btfsc	___fladd@signs^0,6,c
  5743   0012C4  EF66  F009         	goto	u2441
  5744   0012C8  EF68  F009         	goto	u2440
  5745   0012CC                     u2441:
  5746   0012CC  EFA8  F009         	goto	l2623
  5747   0012D0                     u2440:
  5748   0012D0  500F               	movf	___fladd@bexp^0,w,c
  5749   0012D2  A4D8               	btfss	status,2,c
  5750   0012D4  EF6E  F009         	goto	u2451
  5751   0012D8  EF70  F009         	goto	u2450
  5752   0012DC                     u2451:
  5753   0012DC  EF7A  F009         	goto	l2605
  5754   0012E0                     u2450:
  5755   0012E0  0E00               	movlw	0
  5756   0012E2  6E01               	movwf	?___fladd^0,c
  5757   0012E4  0E00               	movlw	0
  5758   0012E6  6E02               	movwf	(?___fladd+1)^0,c
  5759   0012E8  0E00               	movlw	0
  5760   0012EA  6E03               	movwf	(?___fladd+2)^0,c
  5761   0012EC  0E00               	movlw	0
  5762   0012EE  6E04               	movwf	(?___fladd+3)^0,c
  5763   0012F0  EFC9  F00A         	goto	l691
  5764   0012F4                     l2605:
  5765   0012F4  5005               	movf	___fladd@a^0,w,c
  5766   0012F6  2601               	addwf	___fladd@b^0,f,c
  5767   0012F8  5006               	movf	(___fladd@a+1)^0,w,c
  5768   0012FA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5769   0012FC  5007               	movf	(___fladd@a+2)^0,w,c
  5770   0012FE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5771   001300  5008               	movf	(___fladd@a+3)^0,w,c
  5772   001302  2204               	addwfc	(___fladd@b+3)^0,f,c
  5773   001304  A004               	btfss	(___fladd@b+3)^0,0,c
  5774   001306  EF87  F009         	goto	u2461
  5775   00130A  EF89  F009         	goto	u2460
  5776   00130E                     u2461:
  5777   00130E  EF35  F00A         	goto	l2659
  5778   001312                     u2460:
  5779   001312  A010               	btfss	___fladd@grs^0,0,c
  5780   001314  EF8E  F009         	goto	u2471
  5781   001318  EF90  F009         	goto	u2470
  5782   00131C                     u2471:
  5783   00131C  EF96  F009         	goto	l2613
  5784   001320                     u2470:
  5785   001320  90D8               	bcf	status,0,c
  5786   001322  3010               	rrcf	___fladd@grs^0,w,c
  5787   001324  0901               	iorlw	1
  5788   001326  6E10               	movwf	___fladd@grs^0,c
  5789   001328  EF98  F009         	goto	l2615
  5790   00132C                     l2613:
  5791   00132C  90D8               	bcf	status,0,c
  5792   00132E  3210               	rrcf	___fladd@grs^0,f,c
  5793   001330                     l2615:
  5794   001330  A001               	btfss	___fladd@b^0,0,c
  5795   001332  EF9D  F009         	goto	u2481
  5796   001336  EF9F  F009         	goto	u2480
  5797   00133A                     u2481:
  5798   00133A  EFA0  F009         	goto	l2619
  5799   00133E                     u2480:
  5800   00133E  8E10               	bsf	___fladd@grs^0,7,c
  5801   001340                     l2619:
  5802   001340  3404               	rlcf	(___fladd@b+3)^0,w,c
  5803   001342  3204               	rrcf	(___fladd@b+3)^0,f,c
  5804   001344  3203               	rrcf	(___fladd@b+2)^0,f,c
  5805   001346  3202               	rrcf	(___fladd@b+1)^0,f,c
  5806   001348  3201               	rrcf	___fladd@b^0,f,c
  5807   00134A  2A0F               	incf	___fladd@bexp^0,f,c
  5808   00134C  EF35  F00A         	goto	l2659
  5809   001350                     l2623:
  5810   001350  5005               	movf	___fladd@a^0,w,c
  5811   001352  5C01               	subwf	___fladd@b^0,w,c
  5812   001354  5006               	movf	(___fladd@a+1)^0,w,c
  5813   001356  5802               	subwfb	(___fladd@b+1)^0,w,c
  5814   001358  5007               	movf	(___fladd@a+2)^0,w,c
  5815   00135A  5803               	subwfb	(___fladd@b+2)^0,w,c
  5816   00135C  5004               	movf	(___fladd@b+3)^0,w,c
  5817   00135E  0A80               	xorlw	128
  5818   001360  6E09               	movwf	??___fladd^0,c
  5819   001362  5008               	movf	(___fladd@a+3)^0,w,c
  5820   001364  0A80               	xorlw	128
  5821   001366  5809               	subwfb	??___fladd^0,w,c
  5822   001368  B0D8               	btfsc	status,0,c
  5823   00136A  EFB9  F009         	goto	u2491
  5824   00136E  EFBB  F009         	goto	u2490
  5825   001372                     u2491:
  5826   001372  EFE6  F009         	goto	l2633
  5827   001376                     u2490:
  5828   001376  5001               	movf	___fladd@b^0,w,c
  5829   001378  5C05               	subwf	___fladd@a^0,w,c
  5830   00137A  6E09               	movwf	??___fladd^0,c
  5831   00137C  5002               	movf	(___fladd@b+1)^0,w,c
  5832   00137E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5833   001380  6E0A               	movwf	(??___fladd+1)^0,c
  5834   001382  5003               	movf	(___fladd@b+2)^0,w,c
  5835   001384  5807               	subwfb	(___fladd@a+2)^0,w,c
  5836   001386  6E0B               	movwf	(??___fladd+2)^0,c
  5837   001388  5004               	movf	(___fladd@b+3)^0,w,c
  5838   00138A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5839   00138C  6E0C               	movwf	(??___fladd+3)^0,c
  5840   00138E  0EFF               	movlw	255
  5841   001390  2409               	addwf	??___fladd^0,w,c
  5842   001392  6E01               	movwf	___fladd@b^0,c
  5843   001394  0EFF               	movlw	255
  5844   001396  200A               	addwfc	(??___fladd+1)^0,w,c
  5845   001398  6E02               	movwf	(___fladd@b+1)^0,c
  5846   00139A  0EFF               	movlw	255
  5847   00139C  200B               	addwfc	(??___fladd+2)^0,w,c
  5848   00139E  6E03               	movwf	(___fladd@b+2)^0,c
  5849   0013A0  0EFF               	movlw	255
  5850   0013A2  200C               	addwfc	(??___fladd+3)^0,w,c
  5851   0013A4  6E04               	movwf	(___fladd@b+3)^0,c
  5852   0013A6  0E80               	movlw	128
  5853   0013A8  1A0D               	xorwf	___fladd@signs^0,f,c
  5854   0013AA  6C10               	negf	___fladd@grs^0,c
  5855   0013AC  5010               	movf	___fladd@grs^0,w,c
  5856   0013AE  A4D8               	btfss	status,2,c
  5857   0013B0  EFDC  F009         	goto	u2501
  5858   0013B4  EFDE  F009         	goto	u2500
  5859   0013B8                     u2501:
  5860   0013B8  EFEE  F009         	goto	l699
  5861   0013BC                     u2500:
  5862   0013BC  0E01               	movlw	1
  5863   0013BE  2601               	addwf	___fladd@b^0,f,c
  5864   0013C0  0E00               	movlw	0
  5865   0013C2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5866   0013C4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5867   0013C6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5868   0013C8  EFEE  F009         	goto	l699
  5869   0013CC                     l2633:
  5870   0013CC  5005               	movf	___fladd@a^0,w,c
  5871   0013CE  5E01               	subwf	___fladd@b^0,f,c
  5872   0013D0  5006               	movf	(___fladd@a+1)^0,w,c
  5873   0013D2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5874   0013D4  5007               	movf	(___fladd@a+2)^0,w,c
  5875   0013D6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5876   0013D8  5008               	movf	(___fladd@a+3)^0,w,c
  5877   0013DA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5878   0013DC                     l699:
  5879   0013DC  5001               	movf	___fladd@b^0,w,c
  5880   0013DE  1002               	iorwf	(___fladd@b+1)^0,w,c
  5881   0013E0  1003               	iorwf	(___fladd@b+2)^0,w,c
  5882   0013E2  1004               	iorwf	(___fladd@b+3)^0,w,c
  5883   0013E4  A4D8               	btfss	status,2,c
  5884   0013E6  EFF7  F009         	goto	u2511
  5885   0013EA  EFF9  F009         	goto	u2510
  5886   0013EE                     u2511:
  5887   0013EE  EF2E  F00A         	goto	l2657
  5888   0013F2                     u2510:
  5889   0013F2  5010               	movf	___fladd@grs^0,w,c
  5890   0013F4  A4D8               	btfss	status,2,c
  5891   0013F6  EFFF  F009         	goto	u2521
  5892   0013FA  EF01  F00A         	goto	u2520
  5893   0013FE                     u2521:
  5894   0013FE  EF2E  F00A         	goto	l2657
  5895   001402                     u2520:
  5896   001402  0E00               	movlw	0
  5897   001404  6E01               	movwf	?___fladd^0,c
  5898   001406  0E00               	movlw	0
  5899   001408  6E02               	movwf	(?___fladd+1)^0,c
  5900   00140A  0E00               	movlw	0
  5901   00140C  6E03               	movwf	(?___fladd+2)^0,c
  5902   00140E  0E00               	movlw	0
  5903   001410  6E04               	movwf	(?___fladd+3)^0,c
  5904   001412  EFC9  F00A         	goto	l691
  5905   001416                     l2641:
  5906   001416  90D8               	bcf	status,0,c
  5907   001418  3601               	rlcf	___fladd@b^0,f,c
  5908   00141A  3602               	rlcf	(___fladd@b+1)^0,f,c
  5909   00141C  3603               	rlcf	(___fladd@b+2)^0,f,c
  5910   00141E  3604               	rlcf	(___fladd@b+3)^0,f,c
  5911   001420  AE10               	btfss	___fladd@grs^0,7,c
  5912   001422  EF15  F00A         	goto	u2531
  5913   001426  EF17  F00A         	goto	u2530
  5914   00142A                     u2531:
  5915   00142A  EF18  F00A         	goto	l2647
  5916   00142E                     u2530:
  5917   00142E  8001               	bsf	___fladd@b^0,0,c
  5918   001430                     l2647:
  5919   001430  A010               	btfss	___fladd@grs^0,0,c
  5920   001432  EF1D  F00A         	goto	u2541
  5921   001436  EF1F  F00A         	goto	u2540
  5922   00143A                     u2541:
  5923   00143A  EF23  F00A         	goto	l2651
  5924   00143E                     u2540:
  5925   00143E  80D8               	bsf	status,0,c
  5926   001440  3610               	rlcf	___fladd@grs^0,f,c
  5927   001442  EF25  F00A         	goto	l2653
  5928   001446                     l2651:
  5929   001446  90D8               	bcf	status,0,c
  5930   001448  3610               	rlcf	___fladd@grs^0,f,c
  5931   00144A                     l2653:
  5932   00144A  500F               	movf	___fladd@bexp^0,w,c
  5933   00144C  B4D8               	btfsc	status,2,c
  5934   00144E  EF2B  F00A         	goto	u2551
  5935   001452  EF2D  F00A         	goto	u2550
  5936   001456                     u2551:
  5937   001456  EF2E  F00A         	goto	l2657
  5938   00145A                     u2550:
  5939   00145A  060F               	decf	___fladd@bexp^0,f,c
  5940   00145C                     l2657:
  5941   00145C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5942   00145E  EF33  F00A         	goto	u2561
  5943   001462  EF35  F00A         	goto	u2560
  5944   001466                     u2561:
  5945   001466  EF0B  F00A         	goto	l2641
  5946   00146A                     u2560:
  5947   00146A                     l2659:
  5948   00146A  0E00               	movlw	0
  5949   00146C  6E0E               	movwf	___fladd@aexp^0,c
  5950   00146E  AE10               	btfss	___fladd@grs^0,7,c
  5951   001470  EF3C  F00A         	goto	u2571
  5952   001474  EF3E  F00A         	goto	u2570
  5953   001478                     u2571:
  5954   001478  EF56  F00A         	goto	l708
  5955   00147C                     u2570:
  5956   00147C  C010  F009         	movff	___fladd@grs,??___fladd
  5957   001480  0E7F               	movlw	127
  5958   001482  1609               	andwf	??___fladd^0,f,c
  5959   001484  B4D8               	btfsc	status,2,c
  5960   001486  EF47  F00A         	goto	u2581
  5961   00148A  EF49  F00A         	goto	u2580
  5962   00148E                     u2581:
  5963   00148E  EF4D  F00A         	goto	l709
  5964   001492                     u2580:
  5965   001492                     l2665:
  5966   001492  0E01               	movlw	1
  5967   001494  6E0E               	movwf	___fladd@aexp^0,c
  5968   001496  EF56  F00A         	goto	l708
  5969   00149A                     l709:
  5970   00149A  A001               	btfss	___fladd@b^0,0,c
  5971   00149C  EF52  F00A         	goto	u2591
  5972   0014A0  EF54  F00A         	goto	u2590
  5973   0014A4                     u2591:
  5974   0014A4  EF56  F00A         	goto	l708
  5975   0014A8                     u2590:
  5976   0014A8  EF49  F00A         	goto	l2665
  5977   0014AC                     l708:
  5978   0014AC  500E               	movf	___fladd@aexp^0,w,c
  5979   0014AE  B4D8               	btfsc	status,2,c
  5980   0014B0  EF5C  F00A         	goto	u2601
  5981   0014B4  EF5E  F00A         	goto	u2600
  5982   0014B8                     u2601:
  5983   0014B8  EF89  F00A         	goto	l2677
  5984   0014BC                     u2600:
  5985   0014BC  0E01               	movlw	1
  5986   0014BE  2601               	addwf	___fladd@b^0,f,c
  5987   0014C0  0E00               	movlw	0
  5988   0014C2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5989   0014C4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5990   0014C6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5991   0014C8  A004               	btfss	(___fladd@b+3)^0,0,c
  5992   0014CA  EF69  F00A         	goto	u2611
  5993   0014CE  EF6B  F00A         	goto	u2610
  5994   0014D2                     u2611:
  5995   0014D2  EF89  F00A         	goto	l2677
  5996   0014D6                     u2610:
  5997   0014D6  C001  F009         	movff	___fladd@b,??___fladd
  5998   0014DA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5999   0014DE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6000   0014E2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6001   0014E6  340C               	rlcf	(??___fladd+3)^0,w,c
  6002   0014E8  320C               	rrcf	(??___fladd+3)^0,f,c
  6003   0014EA  320B               	rrcf	(??___fladd+2)^0,f,c
  6004   0014EC  320A               	rrcf	(??___fladd+1)^0,f,c
  6005   0014EE  3209               	rrcf	??___fladd^0,f,c
  6006   0014F0  C009  F001         	movff	??___fladd,___fladd@b
  6007   0014F4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6008   0014F8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6009   0014FC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6010   001500  280F               	incf	___fladd@bexp^0,w,c
  6011   001502  B4D8               	btfsc	status,2,c
  6012   001504  EF86  F00A         	goto	u2621
  6013   001508  EF88  F00A         	goto	u2620
  6014   00150C                     u2621:
  6015   00150C  EF89  F00A         	goto	l2677
  6016   001510                     u2620:
  6017   001510  2A0F               	incf	___fladd@bexp^0,f,c
  6018   001512                     l2677:
  6019   001512  280F               	incf	___fladd@bexp^0,w,c
  6020   001514  B4D8               	btfsc	status,2,c
  6021   001516  EF8F  F00A         	goto	u2631
  6022   00151A  EF91  F00A         	goto	u2630
  6023   00151E                     u2631:
  6024   00151E  EF99  F00A         	goto	l2681
  6025   001522                     u2630:
  6026   001522  500F               	movf	___fladd@bexp^0,w,c
  6027   001524  A4D8               	btfss	status,2,c
  6028   001526  EF97  F00A         	goto	u2641
  6029   00152A  EF99  F00A         	goto	u2640
  6030   00152E                     u2641:
  6031   00152E  EFAB  F00A         	goto	l2685
  6032   001532                     u2640:
  6033   001532                     l2681:
  6034   001532  0E00               	movlw	0
  6035   001534  6E01               	movwf	___fladd@b^0,c
  6036   001536  0E00               	movlw	0
  6037   001538  6E02               	movwf	(___fladd@b+1)^0,c
  6038   00153A  0E00               	movlw	0
  6039   00153C  6E03               	movwf	(___fladd@b+2)^0,c
  6040   00153E  0E00               	movlw	0
  6041   001540  6E04               	movwf	(___fladd@b+3)^0,c
  6042   001542  500F               	movf	___fladd@bexp^0,w,c
  6043   001544  A4D8               	btfss	status,2,c
  6044   001546  EFA7  F00A         	goto	u2651
  6045   00154A  EFA9  F00A         	goto	u2650
  6046   00154E                     u2651:
  6047   00154E  EFAB  F00A         	goto	l2685
  6048   001552                     u2650:
  6049   001552  0E00               	movlw	0
  6050   001554  6E0D               	movwf	___fladd@signs^0,c
  6051   001556                     l2685:
  6052   001556  A00F               	btfss	___fladd@bexp^0,0,c
  6053   001558  EFB0  F00A         	goto	u2661
  6054   00155C  EFB2  F00A         	goto	u2660
  6055   001560                     u2661:
  6056   001560  EFB5  F00A         	goto	l2689
  6057   001564                     u2660:
  6058   001564  8E03               	bsf	(___fladd@b+2)^0,7,c
  6059   001566  EFB6  F00A         	goto	l2691
  6060   00156A                     l2689:
  6061   00156A  9E03               	bcf	(___fladd@b+2)^0,7,c
  6062   00156C                     l2691:
  6063   00156C  90D8               	bcf	status,0,c
  6064   00156E  300F               	rrcf	___fladd@bexp^0,w,c
  6065   001570  6E04               	movwf	(___fladd@b+3)^0,c
  6066   001572  AE0D               	btfss	___fladd@signs^0,7,c
  6067   001574  EFBE  F00A         	goto	u2671
  6068   001578  EFC0  F00A         	goto	u2670
  6069   00157C                     u2671:
  6070   00157C  EFC1  F00A         	goto	l2697
  6071   001580                     u2670:
  6072   001580  8E04               	bsf	(___fladd@b+3)^0,7,c
  6073   001582                     l2697:
  6074   001582  C001  F001         	movff	___fladd@b,?___fladd
  6075   001586  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6076   00158A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6077   00158E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6078   001592                     l691:
  6079   001592  0012               	return		;funcret
  6080   001594                     __end_of___fladd:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function ___flneg *****************
  6084 ;; Defined at:
  6085 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  f1              4    0[COMRAM] unsigned char 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  4    0[COMRAM] unsigned char 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6099 ;;      Params:         4       0       0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0
  6102 ;;      Totals:         4       0       0       0       0       0       0
  6103 ;;Total ram usage:        4 bytes
  6104 ;; Hardware stack levels used: 1
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_efgtoa
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text25
  6113   003512                     __ptext25:
  6114                           	callstack 0
  6115   003512                     ___flneg:
  6116                           	callstack 25
  6117   003512  5001               	movf	___flneg@f1^0,w,c
  6118   003514  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6119   003516  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6120   003518  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6121   00351A  B4D8               	btfsc	status,2,c
  6122   00351C  EF92  F01A         	goto	u3321
  6123   003520  EF94  F01A         	goto	u3320
  6124   003524                     u3321:
  6125   003524  EF9C  F01A         	goto	l3123
  6126   003528                     u3320:
  6127   003528  0E00               	movlw	0
  6128   00352A  1A01               	xorwf	___flneg@f1^0,f,c
  6129   00352C  0E00               	movlw	0
  6130   00352E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6131   003530  0E00               	movlw	0
  6132   003532  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6133   003534  0E80               	movlw	128
  6134   003536  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6135   003538                     l3123:
  6136   003538  C001  F001         	movff	___flneg@f1,?___flneg
  6137   00353C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6138   003540  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6139   003544  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6140   003548  0012               	return		;funcret
  6141   00354A                     __end_of___flneg:
  6142                           	callstack 0
  6143                           
  6144 ;; *************** function ___flmul *****************
  6145 ;; Defined at:
  6146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  b               4   14[COMRAM] unsigned char 
  6149 ;;  a               4   18[COMRAM] unsigned char 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  prod            4   33[COMRAM] struct .
  6152 ;;  grs             4   27[COMRAM] unsigned long 
  6153 ;;  temp            2   37[COMRAM] struct .
  6154 ;;  bexp            1   32[COMRAM] unsigned char 
  6155 ;;  aexp            1   31[COMRAM] unsigned char 
  6156 ;;  sign            1   26[COMRAM] unsigned char 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  4   14[COMRAM] unsigned char 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0, prodl, prodh
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6166 ;;      Params:         8       0       0       0       0       0       0
  6167 ;;      Locals:        13       0       0       0       0       0       0
  6168 ;;      Temps:          4       0       0       0       0       0       0
  6169 ;;      Totals:        25       0       0       0       0       0       0
  6170 ;;Total ram usage:       25 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_conv_TEMP
  6176 ;;		_efgtoa
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text26
  6181   001594                     __ptext26:
  6182                           	callstack 0
  6183   001594                     ___flmul:
  6184                           	callstack 29
  6185   001594  5012               	movf	(___flmul@b+3)^0,w,c
  6186   001596  0B80               	andlw	128
  6187   001598  6E1B               	movwf	___flmul@sign^0,c
  6188   00159A  5012               	movf	(___flmul@b+3)^0,w,c
  6189   00159C  2412               	addwf	(___flmul@b+3)^0,w,c
  6190   00159E  6E21               	movwf	___flmul@bexp^0,c
  6191   0015A0  AE11               	btfss	(___flmul@b+2)^0,7,c
  6192   0015A2  EFD5  F00A         	goto	u2931
  6193   0015A6  EFD7  F00A         	goto	u2930
  6194   0015AA                     u2931:
  6195   0015AA  EFD8  F00A         	goto	l2871
  6196   0015AE                     u2930:
  6197   0015AE  8021               	bsf	___flmul@bexp^0,0,c
  6198   0015B0                     l2871:
  6199   0015B0  5021               	movf	___flmul@bexp^0,w,c
  6200   0015B2  B4D8               	btfsc	status,2,c
  6201   0015B4  EFDE  F00A         	goto	u2941
  6202   0015B8  EFE0  F00A         	goto	u2940
  6203   0015BC                     u2941:
  6204   0015BC  EFF3  F00A         	goto	l2879
  6205   0015C0                     u2940:
  6206   0015C0  2821               	incf	___flmul@bexp^0,w,c
  6207   0015C2  A4D8               	btfss	status,2,c
  6208   0015C4  EFE6  F00A         	goto	u2951
  6209   0015C8  EFE8  F00A         	goto	u2950
  6210   0015CC                     u2951:
  6211   0015CC  EFF0  F00A         	goto	l2877
  6212   0015D0                     u2950:
  6213   0015D0  0E00               	movlw	0
  6214   0015D2  6E0F               	movwf	___flmul@b^0,c
  6215   0015D4  0E00               	movlw	0
  6216   0015D6  6E10               	movwf	(___flmul@b+1)^0,c
  6217   0015D8  0E00               	movlw	0
  6218   0015DA  6E11               	movwf	(___flmul@b+2)^0,c
  6219   0015DC  0E00               	movlw	0
  6220   0015DE  6E12               	movwf	(___flmul@b+3)^0,c
  6221   0015E0                     l2877:
  6222   0015E0  8E11               	bsf	(___flmul@b+2)^0,7,c
  6223   0015E2  EFFB  F00A         	goto	l2881
  6224   0015E6                     l2879:
  6225   0015E6  0E00               	movlw	0
  6226   0015E8  6E0F               	movwf	___flmul@b^0,c
  6227   0015EA  0E00               	movlw	0
  6228   0015EC  6E10               	movwf	(___flmul@b+1)^0,c
  6229   0015EE  0E00               	movlw	0
  6230   0015F0  6E11               	movwf	(___flmul@b+2)^0,c
  6231   0015F2  0E00               	movlw	0
  6232   0015F4  6E12               	movwf	(___flmul@b+3)^0,c
  6233   0015F6                     l2881:
  6234   0015F6  5016               	movf	(___flmul@a+3)^0,w,c
  6235   0015F8  0B80               	andlw	128
  6236   0015FA  1A1B               	xorwf	___flmul@sign^0,f,c
  6237   0015FC  5016               	movf	(___flmul@a+3)^0,w,c
  6238   0015FE  2416               	addwf	(___flmul@a+3)^0,w,c
  6239   001600  6E20               	movwf	___flmul@aexp^0,c
  6240   001602  AE15               	btfss	(___flmul@a+2)^0,7,c
  6241   001604  EF06  F00B         	goto	u2961
  6242   001608  EF08  F00B         	goto	u2960
  6243   00160C                     u2961:
  6244   00160C  EF09  F00B         	goto	l2889
  6245   001610                     u2960:
  6246   001610  8020               	bsf	___flmul@aexp^0,0,c
  6247   001612                     l2889:
  6248   001612  5020               	movf	___flmul@aexp^0,w,c
  6249   001614  B4D8               	btfsc	status,2,c
  6250   001616  EF0F  F00B         	goto	u2971
  6251   00161A  EF11  F00B         	goto	u2970
  6252   00161E                     u2971:
  6253   00161E  EF24  F00B         	goto	l2897
  6254   001622                     u2970:
  6255   001622  2820               	incf	___flmul@aexp^0,w,c
  6256   001624  A4D8               	btfss	status,2,c
  6257   001626  EF17  F00B         	goto	u2981
  6258   00162A  EF19  F00B         	goto	u2980
  6259   00162E                     u2981:
  6260   00162E  EF21  F00B         	goto	l2895
  6261   001632                     u2980:
  6262   001632  0E00               	movlw	0
  6263   001634  6E13               	movwf	___flmul@a^0,c
  6264   001636  0E00               	movlw	0
  6265   001638  6E14               	movwf	(___flmul@a+1)^0,c
  6266   00163A  0E00               	movlw	0
  6267   00163C  6E15               	movwf	(___flmul@a+2)^0,c
  6268   00163E  0E00               	movlw	0
  6269   001640  6E16               	movwf	(___flmul@a+3)^0,c
  6270   001642                     l2895:
  6271   001642  8E15               	bsf	(___flmul@a+2)^0,7,c
  6272   001644  EF2C  F00B         	goto	l768
  6273   001648                     l2897:
  6274   001648  0E00               	movlw	0
  6275   00164A  6E13               	movwf	___flmul@a^0,c
  6276   00164C  0E00               	movlw	0
  6277   00164E  6E14               	movwf	(___flmul@a+1)^0,c
  6278   001650  0E00               	movlw	0
  6279   001652  6E15               	movwf	(___flmul@a+2)^0,c
  6280   001654  0E00               	movlw	0
  6281   001656  6E16               	movwf	(___flmul@a+3)^0,c
  6282   001658                     l768:
  6283   001658  5020               	movf	___flmul@aexp^0,w,c
  6284   00165A  B4D8               	btfsc	status,2,c
  6285   00165C  EF32  F00B         	goto	u2991
  6286   001660  EF34  F00B         	goto	u2990
  6287   001664                     u2991:
  6288   001664  EF3C  F00B         	goto	l2901
  6289   001668                     u2990:
  6290   001668  5021               	movf	___flmul@bexp^0,w,c
  6291   00166A  A4D8               	btfss	status,2,c
  6292   00166C  EF3A  F00B         	goto	u3001
  6293   001670  EF3C  F00B         	goto	u3000
  6294   001674                     u3001:
  6295   001674  EF46  F00B         	goto	l2905
  6296   001678                     u3000:
  6297   001678                     l2901:
  6298   001678  0E00               	movlw	0
  6299   00167A  6E0F               	movwf	?___flmul^0,c
  6300   00167C  0E00               	movlw	0
  6301   00167E  6E10               	movwf	(?___flmul+1)^0,c
  6302   001680  0E00               	movlw	0
  6303   001682  6E11               	movwf	(?___flmul+2)^0,c
  6304   001684  0E00               	movlw	0
  6305   001686  6E12               	movwf	(?___flmul+3)^0,c
  6306   001688  EFDE  F00C         	goto	l772
  6307   00168C                     l2905:
  6308   00168C  5015               	movf	(___flmul@a+2)^0,w,c
  6309   00168E  020F               	mulwf	___flmul@b^0,c
  6310   001690  CFF3 F026          	movff	prodl,___flmul@temp
  6311   001694  CFF4 F027          	movff	prodh,___flmul@temp+1
  6312   001698  5026               	movf	___flmul@temp^0,w,c
  6313   00169A  6E1C               	movwf	___flmul@grs^0,c
  6314   00169C  6A1D               	clrf	(___flmul@grs+1)^0,c
  6315   00169E  6A1E               	clrf	(___flmul@grs+2)^0,c
  6316   0016A0  6A1F               	clrf	(___flmul@grs+3)^0,c
  6317   0016A2  5027               	movf	(___flmul@temp+1)^0,w,c
  6318   0016A4  6E22               	movwf	___flmul@prod^0,c
  6319   0016A6  6A23               	clrf	(___flmul@prod+1)^0,c
  6320   0016A8  6A24               	clrf	(___flmul@prod+2)^0,c
  6321   0016AA  6A25               	clrf	(___flmul@prod+3)^0,c
  6322   0016AC  5014               	movf	(___flmul@a+1)^0,w,c
  6323   0016AE  0210               	mulwf	(___flmul@b+1)^0,c
  6324   0016B0  CFF3 F026          	movff	prodl,___flmul@temp
  6325   0016B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6326   0016B8  5026               	movf	___flmul@temp^0,w,c
  6327   0016BA  261C               	addwf	___flmul@grs^0,f,c
  6328   0016BC  0E00               	movlw	0
  6329   0016BE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6330   0016C0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6331   0016C2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6332   0016C4  5027               	movf	(___flmul@temp+1)^0,w,c
  6333   0016C6  2622               	addwf	___flmul@prod^0,f,c
  6334   0016C8  0E00               	movlw	0
  6335   0016CA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6336   0016CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6337   0016CE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6338   0016D0  5013               	movf	___flmul@a^0,w,c
  6339   0016D2  0211               	mulwf	(___flmul@b+2)^0,c
  6340   0016D4  CFF3 F026          	movff	prodl,___flmul@temp
  6341   0016D8  CFF4 F027          	movff	prodh,___flmul@temp+1
  6342   0016DC  5026               	movf	___flmul@temp^0,w,c
  6343   0016DE  261C               	addwf	___flmul@grs^0,f,c
  6344   0016E0  0E00               	movlw	0
  6345   0016E2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6346   0016E4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6347   0016E6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6348   0016E8  5027               	movf	(___flmul@temp+1)^0,w,c
  6349   0016EA  2622               	addwf	___flmul@prod^0,f,c
  6350   0016EC  0E00               	movlw	0
  6351   0016EE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6352   0016F0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6353   0016F2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6354   0016F4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6355   0016F8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6356   0016FC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6357   001700  6A1C               	clrf	___flmul@grs^0,c
  6358   001702  5013               	movf	___flmul@a^0,w,c
  6359   001704  0210               	mulwf	(___flmul@b+1)^0,c
  6360   001706  CFF3 F026          	movff	prodl,___flmul@temp
  6361   00170A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6362   00170E  5026               	movf	___flmul@temp^0,w,c
  6363   001710  261C               	addwf	___flmul@grs^0,f,c
  6364   001712  5027               	movf	(___flmul@temp+1)^0,w,c
  6365   001714  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6366   001716  0E00               	movlw	0
  6367   001718  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6368   00171A  0E00               	movlw	0
  6369   00171C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6370   00171E  5014               	movf	(___flmul@a+1)^0,w,c
  6371   001720  020F               	mulwf	___flmul@b^0,c
  6372   001722  CFF3 F026          	movff	prodl,___flmul@temp
  6373   001726  CFF4 F027          	movff	prodh,___flmul@temp+1
  6374   00172A  5026               	movf	___flmul@temp^0,w,c
  6375   00172C  261C               	addwf	___flmul@grs^0,f,c
  6376   00172E  5027               	movf	(___flmul@temp+1)^0,w,c
  6377   001730  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6378   001732  0E00               	movlw	0
  6379   001734  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6380   001736  0E00               	movlw	0
  6381   001738  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6382   00173A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6383   00173E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6384   001742  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6385   001746  6A1C               	clrf	___flmul@grs^0,c
  6386   001748  5013               	movf	___flmul@a^0,w,c
  6387   00174A  020F               	mulwf	___flmul@b^0,c
  6388   00174C  CFF3 F026          	movff	prodl,___flmul@temp
  6389   001750  CFF4 F027          	movff	prodh,___flmul@temp+1
  6390   001754  5026               	movf	___flmul@temp^0,w,c
  6391   001756  261C               	addwf	___flmul@grs^0,f,c
  6392   001758  5027               	movf	(___flmul@temp+1)^0,w,c
  6393   00175A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6394   00175C  0E00               	movlw	0
  6395   00175E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6396   001760  0E00               	movlw	0
  6397   001762  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6398   001764  5015               	movf	(___flmul@a+2)^0,w,c
  6399   001766  0210               	mulwf	(___flmul@b+1)^0,c
  6400   001768  CFF3 F026          	movff	prodl,___flmul@temp
  6401   00176C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6402   001770  5026               	movf	___flmul@temp^0,w,c
  6403   001772  2622               	addwf	___flmul@prod^0,f,c
  6404   001774  5027               	movf	(___flmul@temp+1)^0,w,c
  6405   001776  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6406   001778  0E00               	movlw	0
  6407   00177A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6408   00177C  0E00               	movlw	0
  6409   00177E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6410   001780  5014               	movf	(___flmul@a+1)^0,w,c
  6411   001782  0211               	mulwf	(___flmul@b+2)^0,c
  6412   001784  CFF3 F026          	movff	prodl,___flmul@temp
  6413   001788  CFF4 F027          	movff	prodh,___flmul@temp+1
  6414   00178C  5026               	movf	___flmul@temp^0,w,c
  6415   00178E  2622               	addwf	___flmul@prod^0,f,c
  6416   001790  5027               	movf	(___flmul@temp+1)^0,w,c
  6417   001792  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6418   001794  0E00               	movlw	0
  6419   001796  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6420   001798  0E00               	movlw	0
  6421   00179A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6422   00179C  5015               	movf	(___flmul@a+2)^0,w,c
  6423   00179E  0211               	mulwf	(___flmul@b+2)^0,c
  6424   0017A0  CFF3 F026          	movff	prodl,___flmul@temp
  6425   0017A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6426   0017A8  5026               	movf	___flmul@temp^0,w,c
  6427   0017AA  6E17               	movwf	??___flmul^0,c
  6428   0017AC  5027               	movf	(___flmul@temp+1)^0,w,c
  6429   0017AE  6E18               	movwf	(??___flmul+1)^0,c
  6430   0017B0  6A19               	clrf	(??___flmul+2)^0,c
  6431   0017B2  6A1A               	clrf	(??___flmul+3)^0,c
  6432   0017B4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6433   0017B8  C018  F019         	movff	??___flmul+1,??___flmul+2
  6434   0017BC  C017  F018         	movff	??___flmul,??___flmul+1
  6435   0017C0  6A17               	clrf	??___flmul^0,c
  6436   0017C2  5017               	movf	??___flmul^0,w,c
  6437   0017C4  2622               	addwf	___flmul@prod^0,f,c
  6438   0017C6  5018               	movf	(??___flmul+1)^0,w,c
  6439   0017C8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6440   0017CA  5019               	movf	(??___flmul+2)^0,w,c
  6441   0017CC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6442   0017CE  501A               	movf	(??___flmul+3)^0,w,c
  6443   0017D0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6444   0017D2  C01C  F017         	movff	___flmul@grs,??___flmul
  6445   0017D6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6446   0017DA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6447   0017DE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6448   0017E2  0E19               	movlw	25
  6449   0017E4  EFF9  F00B         	goto	u3010
  6450   0017E8                     u3015:
  6451   0017E8  90D8               	bcf	status,0,c
  6452   0017EA  321A               	rrcf	(??___flmul+3)^0,f,c
  6453   0017EC  3219               	rrcf	(??___flmul+2)^0,f,c
  6454   0017EE  3218               	rrcf	(??___flmul+1)^0,f,c
  6455   0017F0  3217               	rrcf	??___flmul^0,f,c
  6456   0017F2                     u3010:
  6457   0017F2  2EE8               	decfsz	wreg,f,c
  6458   0017F4  EFF4  F00B         	goto	u3015
  6459   0017F8  5017               	movf	??___flmul^0,w,c
  6460   0017FA  2622               	addwf	___flmul@prod^0,f,c
  6461   0017FC  5018               	movf	(??___flmul+1)^0,w,c
  6462   0017FE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6463   001800  5019               	movf	(??___flmul+2)^0,w,c
  6464   001802  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6465   001804  501A               	movf	(??___flmul+3)^0,w,c
  6466   001806  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6467   001808  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6468   00180C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6469   001810  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6470   001814  6A1C               	clrf	___flmul@grs^0,c
  6471   001816  5020               	movf	___flmul@aexp^0,w,c
  6472   001818  C021  F017         	movff	___flmul@bexp,??___flmul
  6473   00181C  6A18               	clrf	(??___flmul+1)^0,c
  6474   00181E  2617               	addwf	??___flmul^0,f,c
  6475   001820  0E00               	movlw	0
  6476   001822  2218               	addwfc	(??___flmul+1)^0,f,c
  6477   001824  0E82               	movlw	130
  6478   001826  2417               	addwf	??___flmul^0,w,c
  6479   001828  6E26               	movwf	___flmul@temp^0,c
  6480   00182A  0EFF               	movlw	255
  6481   00182C  2018               	addwfc	(??___flmul+1)^0,w,c
  6482   00182E  6E27               	movwf	(___flmul@temp+1)^0,c
  6483   001830  EF2F  F00C         	goto	l2953
  6484   001834                     l2947:
  6485   001834  90D8               	bcf	status,0,c
  6486   001836  3622               	rlcf	___flmul@prod^0,f,c
  6487   001838  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6488   00183A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6489   00183C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6490   00183E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6491   001840  EF24  F00C         	goto	u3021
  6492   001844  EF26  F00C         	goto	u3020
  6493   001848                     u3021:
  6494   001848  EF27  F00C         	goto	l775
  6495   00184C                     u3020:
  6496   00184C  8022               	bsf	___flmul@prod^0,0,c
  6497   00184E                     l775:
  6498   00184E  90D8               	bcf	status,0,c
  6499   001850  361C               	rlcf	___flmul@grs^0,f,c
  6500   001852  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6501   001854  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6502   001856  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6503   001858  0626               	decf	___flmul@temp^0,f,c
  6504   00185A  A0D8               	btfss	status,0,c
  6505   00185C  0627               	decf	(___flmul@temp+1)^0,f,c
  6506   00185E                     l2953:
  6507   00185E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6508   001860  EF34  F00C         	goto	u3031
  6509   001864  EF36  F00C         	goto	u3030
  6510   001868                     u3031:
  6511   001868  EF1A  F00C         	goto	l2947
  6512   00186C                     u3030:
  6513   00186C  0E00               	movlw	0
  6514   00186E  6E20               	movwf	___flmul@aexp^0,c
  6515   001870  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6516   001872  EF3D  F00C         	goto	u3041
  6517   001876  EF3F  F00C         	goto	u3040
  6518   00187A                     u3041:
  6519   00187A  EF63  F00C         	goto	l777
  6520   00187E                     u3040:
  6521   00187E  0EFF               	movlw	255
  6522   001880  141C               	andwf	___flmul@grs^0,w,c
  6523   001882  6E17               	movwf	??___flmul^0,c
  6524   001884  0EFF               	movlw	255
  6525   001886  141D               	andwf	(___flmul@grs+1)^0,w,c
  6526   001888  6E18               	movwf	(??___flmul+1)^0,c
  6527   00188A  0EFF               	movlw	255
  6528   00188C  141E               	andwf	(___flmul@grs+2)^0,w,c
  6529   00188E  6E19               	movwf	(??___flmul+2)^0,c
  6530   001890  0E7F               	movlw	127
  6531   001892  141F               	andwf	(___flmul@grs+3)^0,w,c
  6532   001894  6E1A               	movwf	(??___flmul+3)^0,c
  6533   001896  5017               	movf	??___flmul^0,w,c
  6534   001898  1018               	iorwf	(??___flmul+1)^0,w,c
  6535   00189A  1019               	iorwf	(??___flmul+2)^0,w,c
  6536   00189C  101A               	iorwf	(??___flmul+3)^0,w,c
  6537   00189E  B4D8               	btfsc	status,2,c
  6538   0018A0  EF54  F00C         	goto	u3051
  6539   0018A4  EF56  F00C         	goto	u3050
  6540   0018A8                     u3051:
  6541   0018A8  EF5A  F00C         	goto	l778
  6542   0018AC                     u3050:
  6543   0018AC                     l2961:
  6544   0018AC  0E01               	movlw	1
  6545   0018AE  6E20               	movwf	___flmul@aexp^0,c
  6546   0018B0  EF63  F00C         	goto	l777
  6547   0018B4                     l778:
  6548   0018B4  A022               	btfss	___flmul@prod^0,0,c
  6549   0018B6  EF5F  F00C         	goto	u3061
  6550   0018BA  EF61  F00C         	goto	u3060
  6551   0018BE                     u3061:
  6552   0018BE  EF63  F00C         	goto	l777
  6553   0018C2                     u3060:
  6554   0018C2  EF56  F00C         	goto	l2961
  6555   0018C6                     l777:
  6556   0018C6  5020               	movf	___flmul@aexp^0,w,c
  6557   0018C8  B4D8               	btfsc	status,2,c
  6558   0018CA  EF69  F00C         	goto	u3071
  6559   0018CE  EF6B  F00C         	goto	u3070
  6560   0018D2                     u3071:
  6561   0018D2  EF8F  F00C         	goto	l2973
  6562   0018D6                     u3070:
  6563   0018D6  0E01               	movlw	1
  6564   0018D8  2622               	addwf	___flmul@prod^0,f,c
  6565   0018DA  0E00               	movlw	0
  6566   0018DC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6567   0018DE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6568   0018E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6569   0018E2  A025               	btfss	(___flmul@prod+3)^0,0,c
  6570   0018E4  EF76  F00C         	goto	u3081
  6571   0018E8  EF78  F00C         	goto	u3080
  6572   0018EC                     u3081:
  6573   0018EC  EF8F  F00C         	goto	l2973
  6574   0018F0                     u3080:
  6575   0018F0  C022  F017         	movff	___flmul@prod,??___flmul
  6576   0018F4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6577   0018F8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6578   0018FC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6579   001900  341A               	rlcf	(??___flmul+3)^0,w,c
  6580   001902  321A               	rrcf	(??___flmul+3)^0,f,c
  6581   001904  3219               	rrcf	(??___flmul+2)^0,f,c
  6582   001906  3218               	rrcf	(??___flmul+1)^0,f,c
  6583   001908  3217               	rrcf	??___flmul^0,f,c
  6584   00190A  C017  F022         	movff	??___flmul,___flmul@prod
  6585   00190E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6586   001912  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6587   001916  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6588   00191A  4A26               	infsnz	___flmul@temp^0,f,c
  6589   00191C  2A27               	incf	(___flmul@temp+1)^0,f,c
  6590   00191E                     l2973:
  6591   00191E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6592   001920  EF9A  F00C         	goto	u3091
  6593   001924  5027               	movf	(___flmul@temp+1)^0,w,c
  6594   001926  E108               	bnz	u3090
  6595   001928  2826               	incf	___flmul@temp^0,w,c
  6596   00192A  A0D8               	btfss	status,0,c
  6597   00192C  EF9A  F00C         	goto	u3091
  6598   001930  EF9C  F00C         	goto	u3090
  6599   001934                     u3091:
  6600   001934  EFA6  F00C         	goto	l2977
  6601   001938                     u3090:
  6602   001938  0E00               	movlw	0
  6603   00193A  6E22               	movwf	___flmul@prod^0,c
  6604   00193C  0E00               	movlw	0
  6605   00193E  6E23               	movwf	(___flmul@prod+1)^0,c
  6606   001940  0E80               	movlw	128
  6607   001942  6E24               	movwf	(___flmul@prod+2)^0,c
  6608   001944  0E7F               	movlw	127
  6609   001946  6E25               	movwf	(___flmul@prod+3)^0,c
  6610   001948  EFD4  F00C         	goto	l2989
  6611   00194C                     l2977:
  6612   00194C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6613   00194E  EFB3  F00C         	goto	u3100
  6614   001952  5027               	movf	(___flmul@temp+1)^0,w,c
  6615   001954  E106               	bnz	u3101
  6616   001956  0426               	decf	___flmul@temp^0,w,c
  6617   001958  B0D8               	btfsc	status,0,c
  6618   00195A  EFB1  F00C         	goto	u3101
  6619   00195E  EFB3  F00C         	goto	u3100
  6620   001962                     u3101:
  6621   001962  EFBF  F00C         	goto	l785
  6622   001966                     u3100:
  6623   001966  0E00               	movlw	0
  6624   001968  6E22               	movwf	___flmul@prod^0,c
  6625   00196A  0E00               	movlw	0
  6626   00196C  6E23               	movwf	(___flmul@prod+1)^0,c
  6627   00196E  0E00               	movlw	0
  6628   001970  6E24               	movwf	(___flmul@prod+2)^0,c
  6629   001972  0E00               	movlw	0
  6630   001974  6E25               	movwf	(___flmul@prod+3)^0,c
  6631   001976  0E00               	movlw	0
  6632   001978  6E1B               	movwf	___flmul@sign^0,c
  6633   00197A  EFD4  F00C         	goto	l2989
  6634   00197E                     l785:
  6635   00197E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6636   001982  0EFF               	movlw	255
  6637   001984  1622               	andwf	___flmul@prod^0,f,c
  6638   001986  0EFF               	movlw	255
  6639   001988  1623               	andwf	(___flmul@prod+1)^0,f,c
  6640   00198A  0E7F               	movlw	127
  6641   00198C  1624               	andwf	(___flmul@prod+2)^0,f,c
  6642   00198E  0E00               	movlw	0
  6643   001990  1625               	andwf	(___flmul@prod+3)^0,f,c
  6644   001992  A021               	btfss	___flmul@bexp^0,0,c
  6645   001994  EFCE  F00C         	goto	u3111
  6646   001998  EFD0  F00C         	goto	u3110
  6647   00199C                     u3111:
  6648   00199C  EFD1  F00C         	goto	l2987
  6649   0019A0                     u3110:
  6650   0019A0  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6651   0019A2                     l2987:
  6652   0019A2  90D8               	bcf	status,0,c
  6653   0019A4  3021               	rrcf	___flmul@bexp^0,w,c
  6654   0019A6  6E25               	movwf	(___flmul@prod+3)^0,c
  6655   0019A8                     l2989:
  6656   0019A8  501B               	movf	___flmul@sign^0,w,c
  6657   0019AA  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6658   0019AC  C022  F00F         	movff	___flmul@prod,?___flmul
  6659   0019B0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6660   0019B4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6661   0019B8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6662   0019BC                     l772:
  6663   0019BC  0012               	return		;funcret
  6664   0019BE                     __end_of___flmul:
  6665                           	callstack 0
  6666                           
  6667 ;; *************** function ___flge *****************
  6668 ;; Defined at:
  6669 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  ff1             4   39[COMRAM] unsigned char 
  6672 ;;  ff2             4   43[COMRAM] unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;		None               void
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6684 ;;      Params:         8       0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0
  6686 ;;      Temps:          4       0       0       0       0       0       0
  6687 ;;      Totals:        12       0       0       0       0       0       0
  6688 ;;Total ram usage:       12 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_logica_controle
  6694 ;;		_efgtoa
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text27
  6699   002882                     __ptext27:
  6700                           	callstack 0
  6701   002882                     ___flge:
  6702                           	callstack 29
  6703   002882  0E00               	movlw	0
  6704   002884  1428               	andwf	___flge@ff1^0,w,c
  6705   002886  6E30               	movwf	??___flge^0,c
  6706   002888  0E00               	movlw	0
  6707   00288A  1429               	andwf	(___flge@ff1+1)^0,w,c
  6708   00288C  6E31               	movwf	(??___flge+1)^0,c
  6709   00288E  0E80               	movlw	128
  6710   002890  142A               	andwf	(___flge@ff1+2)^0,w,c
  6711   002892  6E32               	movwf	(??___flge+2)^0,c
  6712   002894  0E7F               	movlw	127
  6713   002896  142B               	andwf	(___flge@ff1+3)^0,w,c
  6714   002898  6E33               	movwf	(??___flge+3)^0,c
  6715   00289A  5030               	movf	??___flge^0,w,c
  6716   00289C  1031               	iorwf	(??___flge+1)^0,w,c
  6717   00289E  1032               	iorwf	(??___flge+2)^0,w,c
  6718   0028A0  1033               	iorwf	(??___flge+3)^0,w,c
  6719   0028A2  A4D8               	btfss	status,2,c
  6720   0028A4  EF56  F014         	goto	u3271
  6721   0028A8  EF58  F014         	goto	u3270
  6722   0028AC                     u3271:
  6723   0028AC  EF60  F014         	goto	l3101
  6724   0028B0                     u3270:
  6725   0028B0  0E00               	movlw	0
  6726   0028B2  6E28               	movwf	___flge@ff1^0,c
  6727   0028B4  0E00               	movlw	0
  6728   0028B6  6E29               	movwf	(___flge@ff1+1)^0,c
  6729   0028B8  0E00               	movlw	0
  6730   0028BA  6E2A               	movwf	(___flge@ff1+2)^0,c
  6731   0028BC  0E00               	movlw	0
  6732   0028BE  6E2B               	movwf	(___flge@ff1+3)^0,c
  6733   0028C0                     l3101:
  6734   0028C0  0E00               	movlw	0
  6735   0028C2  142C               	andwf	___flge@ff2^0,w,c
  6736   0028C4  6E30               	movwf	??___flge^0,c
  6737   0028C6  0E00               	movlw	0
  6738   0028C8  142D               	andwf	(___flge@ff2+1)^0,w,c
  6739   0028CA  6E31               	movwf	(??___flge+1)^0,c
  6740   0028CC  0E80               	movlw	128
  6741   0028CE  142E               	andwf	(___flge@ff2+2)^0,w,c
  6742   0028D0  6E32               	movwf	(??___flge+2)^0,c
  6743   0028D2  0E7F               	movlw	127
  6744   0028D4  142F               	andwf	(___flge@ff2+3)^0,w,c
  6745   0028D6  6E33               	movwf	(??___flge+3)^0,c
  6746   0028D8  5030               	movf	??___flge^0,w,c
  6747   0028DA  1031               	iorwf	(??___flge+1)^0,w,c
  6748   0028DC  1032               	iorwf	(??___flge+2)^0,w,c
  6749   0028DE  1033               	iorwf	(??___flge+3)^0,w,c
  6750   0028E0  A4D8               	btfss	status,2,c
  6751   0028E2  EF75  F014         	goto	u3281
  6752   0028E6  EF77  F014         	goto	u3280
  6753   0028EA                     u3281:
  6754   0028EA  EF7F  F014         	goto	l3105
  6755   0028EE                     u3280:
  6756   0028EE  0E00               	movlw	0
  6757   0028F0  6E2C               	movwf	___flge@ff2^0,c
  6758   0028F2  0E00               	movlw	0
  6759   0028F4  6E2D               	movwf	(___flge@ff2+1)^0,c
  6760   0028F6  0E00               	movlw	0
  6761   0028F8  6E2E               	movwf	(___flge@ff2+2)^0,c
  6762   0028FA  0E00               	movlw	0
  6763   0028FC  6E2F               	movwf	(___flge@ff2+3)^0,c
  6764   0028FE                     l3105:
  6765   0028FE  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6766   002900  EF84  F014         	goto	u3291
  6767   002904  EF86  F014         	goto	u3290
  6768   002908                     u3291:
  6769   002908  EF8F  F014         	goto	l3109
  6770   00290C                     u3290:
  6771   00290C  6C28               	negf	___flge@ff1^0,c
  6772   00290E  1E29               	comf	(___flge@ff1+1)^0,f,c
  6773   002910  B0D8               	btfsc	status,0,c
  6774   002912  2A29               	incf	(___flge@ff1+1)^0,f,c
  6775   002914  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6776   002916  B0D8               	btfsc	status,0,c
  6777   002918  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6778   00291A  0E80               	movlw	128
  6779   00291C  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6780   00291E                     l3109:
  6781   00291E  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6782   002920  EF94  F014         	goto	u3301
  6783   002924  EF96  F014         	goto	u3300
  6784   002928                     u3301:
  6785   002928  EF9F  F014         	goto	l419
  6786   00292C                     u3300:
  6787   00292C  6C2C               	negf	___flge@ff2^0,c
  6788   00292E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6789   002930  B0D8               	btfsc	status,0,c
  6790   002932  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6791   002934  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6792   002936  B0D8               	btfsc	status,0,c
  6793   002938  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6794   00293A  0E80               	movlw	128
  6795   00293C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6796   00293E                     l419:
  6797   00293E  0E00               	movlw	0
  6798   002940  1A28               	xorwf	___flge@ff1^0,f,c
  6799   002942  0E00               	movlw	0
  6800   002944  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6801   002946  0E00               	movlw	0
  6802   002948  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6803   00294A  0E80               	movlw	128
  6804   00294C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6805   00294E  0E00               	movlw	0
  6806   002950  1A2C               	xorwf	___flge@ff2^0,f,c
  6807   002952  0E00               	movlw	0
  6808   002954  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6809   002956  0E00               	movlw	0
  6810   002958  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6811   00295A  0E80               	movlw	128
  6812   00295C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6813   00295E  502C               	movf	___flge@ff2^0,w,c
  6814   002960  5C28               	subwf	___flge@ff1^0,w,c
  6815   002962  502D               	movf	(___flge@ff2+1)^0,w,c
  6816   002964  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6817   002966  502E               	movf	(___flge@ff2+2)^0,w,c
  6818   002968  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6819   00296A  502F               	movf	(___flge@ff2+3)^0,w,c
  6820   00296C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6821   00296E  B0D8               	btfsc	status,0,c
  6822   002970  EFBC  F014         	goto	u3311
  6823   002974  EFBE  F014         	goto	u3310
  6824   002978                     u3311:
  6825   002978  EFC1  F014         	goto	l3115
  6826   00297C                     u3310:
  6827   00297C  90D8               	bcf	status,0,c
  6828   00297E  EFC2  F014         	goto	l424
  6829   002982                     l3115:
  6830   002982  80D8               	bsf	status,0,c
  6831   002984                     l424:
  6832   002984  0012               	return		;funcret
  6833   002986                     __end_of___flge:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function ___fleq *****************
  6837 ;; Defined at:
  6838 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  ff1             4    0[COMRAM] unsigned char 
  6841 ;;  ff2             4    4[COMRAM] unsigned char 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;		None               void
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6853 ;;      Params:         8       0       0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0
  6855 ;;      Temps:          4       0       0       0       0       0       0
  6856 ;;      Totals:        12       0       0       0       0       0       0
  6857 ;;Total ram usage:       12 bytes
  6858 ;; Hardware stack levels used: 1
  6859 ;; This function calls:
  6860 ;;		Nothing
  6861 ;; This function is called by:
  6862 ;;		_efgtoa
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text28
  6867   002FEC                     __ptext28:
  6868                           	callstack 0
  6869   002FEC                     ___fleq:
  6870                           	callstack 25
  6871   002FEC  0E00               	movlw	0
  6872   002FEE  1401               	andwf	___fleq@ff1^0,w,c
  6873   002FF0  6E09               	movwf	??___fleq^0,c
  6874   002FF2  0E00               	movlw	0
  6875   002FF4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6876   002FF6  6E0A               	movwf	(??___fleq+1)^0,c
  6877   002FF8  0E80               	movlw	128
  6878   002FFA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6879   002FFC  6E0B               	movwf	(??___fleq+2)^0,c
  6880   002FFE  0E7F               	movlw	127
  6881   003000  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6882   003002  6E0C               	movwf	(??___fleq+3)^0,c
  6883   003004  5009               	movf	??___fleq^0,w,c
  6884   003006  100A               	iorwf	(??___fleq+1)^0,w,c
  6885   003008  100B               	iorwf	(??___fleq+2)^0,w,c
  6886   00300A  100C               	iorwf	(??___fleq+3)^0,w,c
  6887   00300C  A4D8               	btfss	status,2,c
  6888   00300E  EF0B  F018         	goto	u3241
  6889   003012  EF0D  F018         	goto	u3240
  6890   003016                     u3241:
  6891   003016  EF15  F018         	goto	l3085
  6892   00301A                     u3240:
  6893   00301A  0E00               	movlw	0
  6894   00301C  6E01               	movwf	___fleq@ff1^0,c
  6895   00301E  0E00               	movlw	0
  6896   003020  6E02               	movwf	(___fleq@ff1+1)^0,c
  6897   003022  0E00               	movlw	0
  6898   003024  6E03               	movwf	(___fleq@ff1+2)^0,c
  6899   003026  0E00               	movlw	0
  6900   003028  6E04               	movwf	(___fleq@ff1+3)^0,c
  6901   00302A                     l3085:
  6902   00302A  0E00               	movlw	0
  6903   00302C  1405               	andwf	___fleq@ff2^0,w,c
  6904   00302E  6E09               	movwf	??___fleq^0,c
  6905   003030  0E00               	movlw	0
  6906   003032  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6907   003034  6E0A               	movwf	(??___fleq+1)^0,c
  6908   003036  0E80               	movlw	128
  6909   003038  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6910   00303A  6E0B               	movwf	(??___fleq+2)^0,c
  6911   00303C  0E7F               	movlw	127
  6912   00303E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6913   003040  6E0C               	movwf	(??___fleq+3)^0,c
  6914   003042  5009               	movf	??___fleq^0,w,c
  6915   003044  100A               	iorwf	(??___fleq+1)^0,w,c
  6916   003046  100B               	iorwf	(??___fleq+2)^0,w,c
  6917   003048  100C               	iorwf	(??___fleq+3)^0,w,c
  6918   00304A  A4D8               	btfss	status,2,c
  6919   00304C  EF2A  F018         	goto	u3251
  6920   003050  EF2C  F018         	goto	u3250
  6921   003054                     u3251:
  6922   003054  EF34  F018         	goto	l3089
  6923   003058                     u3250:
  6924   003058  0E00               	movlw	0
  6925   00305A  6E05               	movwf	___fleq@ff2^0,c
  6926   00305C  0E00               	movlw	0
  6927   00305E  6E06               	movwf	(___fleq@ff2+1)^0,c
  6928   003060  0E00               	movlw	0
  6929   003062  6E07               	movwf	(___fleq@ff2+2)^0,c
  6930   003064  0E00               	movlw	0
  6931   003066  6E08               	movwf	(___fleq@ff2+3)^0,c
  6932   003068                     l3089:
  6933   003068  5005               	movf	___fleq@ff2^0,w,c
  6934   00306A  1801               	xorwf	___fleq@ff1^0,w,c
  6935   00306C  E10F               	bnz	u3260
  6936   00306E  5006               	movf	(___fleq@ff2+1)^0,w,c
  6937   003070  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6938   003072  E10C               	bnz	u3260
  6939   003074  5007               	movf	(___fleq@ff2+2)^0,w,c
  6940   003076  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6941   003078  E109               	bnz	u3260
  6942   00307A  5008               	movf	(___fleq@ff2+3)^0,w,c
  6943   00307C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6944   00307E  B4D8               	btfsc	status,2,c
  6945   003080  EF44  F018         	goto	u3261
  6946   003084  EF46  F018         	goto	u3260
  6947   003088                     u3261:
  6948   003088  EF49  F018         	goto	l3093
  6949   00308C                     u3260:
  6950   00308C  90D8               	bcf	status,0,c
  6951   00308E  EF4A  F018         	goto	l413
  6952   003092                     l3093:
  6953   003092  80D8               	bsf	status,0,c
  6954   003094                     l413:
  6955   003094  0012               	return		;funcret
  6956   003096                     __end_of___fleq:
  6957                           	callstack 0
  6958                           
  6959 ;; *************** function ___fldiv *****************
  6960 ;; Defined at:
  6961 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  b               4   39[COMRAM] unsigned char 
  6964 ;;  a               4   43[COMRAM] unsigned char 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  grs             4   58[COMRAM] unsigned long 
  6967 ;;  rem             4   51[COMRAM] unsigned long 
  6968 ;;  new_exp         2   56[COMRAM] short 
  6969 ;;  aexp            1   63[COMRAM] unsigned char 
  6970 ;;  bexp            1   62[COMRAM] unsigned char 
  6971 ;;  sign            1   55[COMRAM] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  4   39[COMRAM] unsigned char 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6981 ;;      Params:         8       0       0       0       0       0       0
  6982 ;;      Locals:        13       0       0       0       0       0       0
  6983 ;;      Temps:          4       0       0       0       0       0       0
  6984 ;;      Totals:        25       0       0       0       0       0       0
  6985 ;;Total ram usage:       25 bytes
  6986 ;; Hardware stack levels used: 1
  6987 ;; This function calls:
  6988 ;;		Nothing
  6989 ;; This function is called by:
  6990 ;;		_conv_TEMP
  6991 ;;		_efgtoa
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text29
  6996   0019BE                     __ptext29:
  6997                           	callstack 0
  6998   0019BE                     ___fldiv:
  6999                           	callstack 29
  7000   0019BE  502B               	movf	(___fldiv@b+3)^0,w,c
  7001   0019C0  0B80               	andlw	128
  7002   0019C2  6E38               	movwf	___fldiv@sign^0,c
  7003   0019C4  502B               	movf	(___fldiv@b+3)^0,w,c
  7004   0019C6  242B               	addwf	(___fldiv@b+3)^0,w,c
  7005   0019C8  6E3F               	movwf	___fldiv@bexp^0,c
  7006   0019CA  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7007   0019CC  EFEA  F00C         	goto	u2701
  7008   0019D0  EFEC  F00C         	goto	u2700
  7009   0019D4                     u2701:
  7010   0019D4  EFED  F00C         	goto	l2733
  7011   0019D8                     u2700:
  7012   0019D8  803F               	bsf	___fldiv@bexp^0,0,c
  7013   0019DA                     l2733:
  7014   0019DA  503F               	movf	___fldiv@bexp^0,w,c
  7015   0019DC  B4D8               	btfsc	status,2,c
  7016   0019DE  EFF3  F00C         	goto	u2711
  7017   0019E2  EFF5  F00C         	goto	u2710
  7018   0019E6                     u2711:
  7019   0019E6  EF0A  F00D         	goto	l2743
  7020   0019EA                     u2710:
  7021   0019EA  283F               	incf	___fldiv@bexp^0,w,c
  7022   0019EC  A4D8               	btfss	status,2,c
  7023   0019EE  EFFB  F00C         	goto	u2721
  7024   0019F2  EFFD  F00C         	goto	u2720
  7025   0019F6                     u2721:
  7026   0019F6  EF05  F00D         	goto	l2739
  7027   0019FA                     u2720:
  7028   0019FA  0E00               	movlw	0
  7029   0019FC  6E28               	movwf	___fldiv@b^0,c
  7030   0019FE  0E00               	movlw	0
  7031   001A00  6E29               	movwf	(___fldiv@b+1)^0,c
  7032   001A02  0E00               	movlw	0
  7033   001A04  6E2A               	movwf	(___fldiv@b+2)^0,c
  7034   001A06  0E00               	movlw	0
  7035   001A08  6E2B               	movwf	(___fldiv@b+3)^0,c
  7036   001A0A                     l2739:
  7037   001A0A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7038   001A0C  0E00               	movlw	0
  7039   001A0E  6E2B               	movwf	(___fldiv@b+3)^0,c
  7040   001A10  EF12  F00D         	goto	l2745
  7041   001A14                     l2743:
  7042   001A14  0E00               	movlw	0
  7043   001A16  6E28               	movwf	___fldiv@b^0,c
  7044   001A18  0E00               	movlw	0
  7045   001A1A  6E29               	movwf	(___fldiv@b+1)^0,c
  7046   001A1C  0E00               	movlw	0
  7047   001A1E  6E2A               	movwf	(___fldiv@b+2)^0,c
  7048   001A20  0E00               	movlw	0
  7049   001A22  6E2B               	movwf	(___fldiv@b+3)^0,c
  7050   001A24                     l2745:
  7051   001A24  502F               	movf	(___fldiv@a+3)^0,w,c
  7052   001A26  0B80               	andlw	128
  7053   001A28  1A38               	xorwf	___fldiv@sign^0,f,c
  7054   001A2A  502F               	movf	(___fldiv@a+3)^0,w,c
  7055   001A2C  242F               	addwf	(___fldiv@a+3)^0,w,c
  7056   001A2E  6E40               	movwf	___fldiv@aexp^0,c
  7057   001A30  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  7058   001A32  EF1D  F00D         	goto	u2731
  7059   001A36  EF1F  F00D         	goto	u2730
  7060   001A3A                     u2731:
  7061   001A3A  EF20  F00D         	goto	l2753
  7062   001A3E                     u2730:
  7063   001A3E  8040               	bsf	___fldiv@aexp^0,0,c
  7064   001A40                     l2753:
  7065   001A40  5040               	movf	___fldiv@aexp^0,w,c
  7066   001A42  B4D8               	btfsc	status,2,c
  7067   001A44  EF26  F00D         	goto	u2741
  7068   001A48  EF28  F00D         	goto	u2740
  7069   001A4C                     u2741:
  7070   001A4C  EF3D  F00D         	goto	l2763
  7071   001A50                     u2740:
  7072   001A50  2840               	incf	___fldiv@aexp^0,w,c
  7073   001A52  A4D8               	btfss	status,2,c
  7074   001A54  EF2E  F00D         	goto	u2751
  7075   001A58  EF30  F00D         	goto	u2750
  7076   001A5C                     u2751:
  7077   001A5C  EF38  F00D         	goto	l2759
  7078   001A60                     u2750:
  7079   001A60  0E00               	movlw	0
  7080   001A62  6E2C               	movwf	___fldiv@a^0,c
  7081   001A64  0E00               	movlw	0
  7082   001A66  6E2D               	movwf	(___fldiv@a+1)^0,c
  7083   001A68  0E00               	movlw	0
  7084   001A6A  6E2E               	movwf	(___fldiv@a+2)^0,c
  7085   001A6C  0E00               	movlw	0
  7086   001A6E  6E2F               	movwf	(___fldiv@a+3)^0,c
  7087   001A70                     l2759:
  7088   001A70  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  7089   001A72  0E00               	movlw	0
  7090   001A74  6E2F               	movwf	(___fldiv@a+3)^0,c
  7091   001A76  EF45  F00D         	goto	l2765
  7092   001A7A                     l2763:
  7093   001A7A  0E00               	movlw	0
  7094   001A7C  6E2C               	movwf	___fldiv@a^0,c
  7095   001A7E  0E00               	movlw	0
  7096   001A80  6E2D               	movwf	(___fldiv@a+1)^0,c
  7097   001A82  0E00               	movlw	0
  7098   001A84  6E2E               	movwf	(___fldiv@a+2)^0,c
  7099   001A86  0E00               	movlw	0
  7100   001A88  6E2F               	movwf	(___fldiv@a+3)^0,c
  7101   001A8A                     l2765:
  7102   001A8A  502C               	movf	___fldiv@a^0,w,c
  7103   001A8C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7104   001A8E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7105   001A90  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7106   001A92  A4D8               	btfss	status,2,c
  7107   001A94  EF4E  F00D         	goto	u2761
  7108   001A98  EF50  F00D         	goto	u2760
  7109   001A9C                     u2761:
  7110   001A9C  EF68  F00D         	goto	l2777
  7111   001AA0                     u2760:
  7112   001AA0  0E00               	movlw	0
  7113   001AA2  6E28               	movwf	___fldiv@b^0,c
  7114   001AA4  0E00               	movlw	0
  7115   001AA6  6E29               	movwf	(___fldiv@b+1)^0,c
  7116   001AA8  0E00               	movlw	0
  7117   001AAA  6E2A               	movwf	(___fldiv@b+2)^0,c
  7118   001AAC  0E00               	movlw	0
  7119   001AAE  6E2B               	movwf	(___fldiv@b+3)^0,c
  7120   001AB0  0E80               	movlw	128
  7121   001AB2  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7122   001AB4  0E7F               	movlw	127
  7123   001AB6  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7124   001AB8                     l2771:
  7125   001AB8  5038               	movf	___fldiv@sign^0,w,c
  7126   001ABA  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7127   001ABC  C028  F028         	movff	___fldiv@b,?___fldiv
  7128   001AC0  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7129   001AC4  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7130   001AC8  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7131   001ACC  EFAB  F00E         	goto	l736
  7132   001AD0                     l2777:
  7133   001AD0  503F               	movf	___fldiv@bexp^0,w,c
  7134   001AD2  A4D8               	btfss	status,2,c
  7135   001AD4  EF6E  F00D         	goto	u2771
  7136   001AD8  EF70  F00D         	goto	u2770
  7137   001ADC                     u2771:
  7138   001ADC  EF7A  F00D         	goto	l2785
  7139   001AE0                     u2770:
  7140   001AE0  0E00               	movlw	0
  7141   001AE2  6E28               	movwf	?___fldiv^0,c
  7142   001AE4  0E00               	movlw	0
  7143   001AE6  6E29               	movwf	(?___fldiv+1)^0,c
  7144   001AE8  0E00               	movlw	0
  7145   001AEA  6E2A               	movwf	(?___fldiv+2)^0,c
  7146   001AEC  0E00               	movlw	0
  7147   001AEE  6E2B               	movwf	(?___fldiv+3)^0,c
  7148   001AF0  EFAB  F00E         	goto	l736
  7149   001AF4                     l2785:
  7150   001AF4  5040               	movf	___fldiv@aexp^0,w,c
  7151   001AF6  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7152   001AFA  6A31               	clrf	(??___fldiv+1)^0,c
  7153   001AFC  5E30               	subwf	??___fldiv^0,f,c
  7154   001AFE  0E00               	movlw	0
  7155   001B00  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7156   001B02  0E7F               	movlw	127
  7157   001B04  2430               	addwf	??___fldiv^0,w,c
  7158   001B06  6E39               	movwf	___fldiv@new_exp^0,c
  7159   001B08  0E00               	movlw	0
  7160   001B0A  2031               	addwfc	(??___fldiv+1)^0,w,c
  7161   001B0C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7162   001B0E  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7163   001B12  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7164   001B16  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7165   001B1A  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7166   001B1E  0E00               	movlw	0
  7167   001B20  6E28               	movwf	___fldiv@b^0,c
  7168   001B22  0E00               	movlw	0
  7169   001B24  6E29               	movwf	(___fldiv@b+1)^0,c
  7170   001B26  0E00               	movlw	0
  7171   001B28  6E2A               	movwf	(___fldiv@b+2)^0,c
  7172   001B2A  0E00               	movlw	0
  7173   001B2C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7174   001B2E  0E00               	movlw	0
  7175   001B30  6E3B               	movwf	___fldiv@grs^0,c
  7176   001B32  0E00               	movlw	0
  7177   001B34  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7178   001B36  0E00               	movlw	0
  7179   001B38  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7180   001B3A  0E00               	movlw	0
  7181   001B3C  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7182   001B3E  0E00               	movlw	0
  7183   001B40  6E40               	movwf	___fldiv@aexp^0,c
  7184   001B42  EFDB  F00D         	goto	l738
  7185   001B46                     l2795:
  7186   001B46  5040               	movf	___fldiv@aexp^0,w,c
  7187   001B48  B4D8               	btfsc	status,2,c
  7188   001B4A  EFA9  F00D         	goto	u2781
  7189   001B4E  EFAB  F00D         	goto	u2780
  7190   001B52                     u2781:
  7191   001B52  EFC2  F00D         	goto	l2803
  7192   001B56                     u2780:
  7193   001B56  90D8               	bcf	status,0,c
  7194   001B58  3634               	rlcf	___fldiv@rem^0,f,c
  7195   001B5A  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7196   001B5C  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7197   001B5E  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7198   001B60  90D8               	bcf	status,0,c
  7199   001B62  3628               	rlcf	___fldiv@b^0,f,c
  7200   001B64  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7201   001B66  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7202   001B68  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7203   001B6A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7204   001B6C  EFBA  F00D         	goto	u2791
  7205   001B70  EFBC  F00D         	goto	u2790
  7206   001B74                     u2791:
  7207   001B74  EFBD  F00D         	goto	l741
  7208   001B78                     u2790:
  7209   001B78  8028               	bsf	___fldiv@b^0,0,c
  7210   001B7A                     l741:
  7211   001B7A  90D8               	bcf	status,0,c
  7212   001B7C  363B               	rlcf	___fldiv@grs^0,f,c
  7213   001B7E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7214   001B80  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7215   001B82  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7216   001B84                     l2803:
  7217   001B84  502C               	movf	___fldiv@a^0,w,c
  7218   001B86  5C34               	subwf	___fldiv@rem^0,w,c
  7219   001B88  502D               	movf	(___fldiv@a+1)^0,w,c
  7220   001B8A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7221   001B8C  502E               	movf	(___fldiv@a+2)^0,w,c
  7222   001B8E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7223   001B90  502F               	movf	(___fldiv@a+3)^0,w,c
  7224   001B92  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7225   001B94  A0D8               	btfss	status,0,c
  7226   001B96  EFCF  F00D         	goto	u2801
  7227   001B9A  EFD1  F00D         	goto	u2800
  7228   001B9E                     u2801:
  7229   001B9E  EFDA  F00D         	goto	l2809
  7230   001BA2                     u2800:
  7231   001BA2  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7232   001BA4  502C               	movf	___fldiv@a^0,w,c
  7233   001BA6  5E34               	subwf	___fldiv@rem^0,f,c
  7234   001BA8  502D               	movf	(___fldiv@a+1)^0,w,c
  7235   001BAA  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7236   001BAC  502E               	movf	(___fldiv@a+2)^0,w,c
  7237   001BAE  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7238   001BB0  502F               	movf	(___fldiv@a+3)^0,w,c
  7239   001BB2  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7240   001BB4                     l2809:
  7241   001BB4  2A40               	incf	___fldiv@aexp^0,f,c
  7242   001BB6                     l738:
  7243   001BB6  0E19               	movlw	25
  7244   001BB8  6440               	cpfsgt	___fldiv@aexp^0,c
  7245   001BBA  EFE1  F00D         	goto	u2811
  7246   001BBE  EFE3  F00D         	goto	u2810
  7247   001BC2                     u2811:
  7248   001BC2  EFA3  F00D         	goto	l2795
  7249   001BC6                     u2810:
  7250   001BC6  5034               	movf	___fldiv@rem^0,w,c
  7251   001BC8  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7252   001BCA  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7253   001BCC  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7254   001BCE  B4D8               	btfsc	status,2,c
  7255   001BD0  EFEC  F00D         	goto	u2821
  7256   001BD4  EFEE  F00D         	goto	u2820
  7257   001BD8                     u2821:
  7258   001BD8  EF06  F00E         	goto	l2821
  7259   001BDC                     u2820:
  7260   001BDC  803B               	bsf	___fldiv@grs^0,0,c
  7261   001BDE  EF06  F00E         	goto	l2821
  7262   001BE2                     l2815:
  7263   001BE2  90D8               	bcf	status,0,c
  7264   001BE4  3628               	rlcf	___fldiv@b^0,f,c
  7265   001BE6  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7266   001BE8  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7267   001BEA  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7268   001BEC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7269   001BEE  EFFB  F00D         	goto	u2831
  7270   001BF2  EFFD  F00D         	goto	u2830
  7271   001BF6                     u2831:
  7272   001BF6  EFFE  F00D         	goto	l747
  7273   001BFA                     u2830:
  7274   001BFA  8028               	bsf	___fldiv@b^0,0,c
  7275   001BFC                     l747:
  7276   001BFC  90D8               	bcf	status,0,c
  7277   001BFE  363B               	rlcf	___fldiv@grs^0,f,c
  7278   001C00  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7279   001C02  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7280   001C04  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7281   001C06  0639               	decf	___fldiv@new_exp^0,f,c
  7282   001C08  A0D8               	btfss	status,0,c
  7283   001C0A  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7284   001C0C                     l2821:
  7285   001C0C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7286   001C0E  EF0B  F00E         	goto	u2841
  7287   001C12  EF0D  F00E         	goto	u2840
  7288   001C16                     u2841:
  7289   001C16  EFF1  F00D         	goto	l2815
  7290   001C1A                     u2840:
  7291   001C1A  0E00               	movlw	0
  7292   001C1C  6E40               	movwf	___fldiv@aexp^0,c
  7293   001C1E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7294   001C20  EF14  F00E         	goto	u2851
  7295   001C24  EF16  F00E         	goto	u2850
  7296   001C28                     u2851:
  7297   001C28  EF3A  F00E         	goto	l749
  7298   001C2C                     u2850:
  7299   001C2C  0EFF               	movlw	255
  7300   001C2E  143B               	andwf	___fldiv@grs^0,w,c
  7301   001C30  6E30               	movwf	??___fldiv^0,c
  7302   001C32  0EFF               	movlw	255
  7303   001C34  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7304   001C36  6E31               	movwf	(??___fldiv+1)^0,c
  7305   001C38  0EFF               	movlw	255
  7306   001C3A  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7307   001C3C  6E32               	movwf	(??___fldiv+2)^0,c
  7308   001C3E  0E7F               	movlw	127
  7309   001C40  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7310   001C42  6E33               	movwf	(??___fldiv+3)^0,c
  7311   001C44  5030               	movf	??___fldiv^0,w,c
  7312   001C46  1031               	iorwf	(??___fldiv+1)^0,w,c
  7313   001C48  1032               	iorwf	(??___fldiv+2)^0,w,c
  7314   001C4A  1033               	iorwf	(??___fldiv+3)^0,w,c
  7315   001C4C  B4D8               	btfsc	status,2,c
  7316   001C4E  EF2B  F00E         	goto	u2861
  7317   001C52  EF2D  F00E         	goto	u2860
  7318   001C56                     u2861:
  7319   001C56  EF31  F00E         	goto	l750
  7320   001C5A                     u2860:
  7321   001C5A                     l2829:
  7322   001C5A  0E01               	movlw	1
  7323   001C5C  6E40               	movwf	___fldiv@aexp^0,c
  7324   001C5E  EF3A  F00E         	goto	l749
  7325   001C62                     l750:
  7326   001C62  A028               	btfss	___fldiv@b^0,0,c
  7327   001C64  EF36  F00E         	goto	u2871
  7328   001C68  EF38  F00E         	goto	u2870
  7329   001C6C                     u2871:
  7330   001C6C  EF3A  F00E         	goto	l749
  7331   001C70                     u2870:
  7332   001C70  EF2D  F00E         	goto	l2829
  7333   001C74                     l749:
  7334   001C74  5040               	movf	___fldiv@aexp^0,w,c
  7335   001C76  B4D8               	btfsc	status,2,c
  7336   001C78  EF40  F00E         	goto	u2881
  7337   001C7C  EF42  F00E         	goto	u2880
  7338   001C80                     u2881:
  7339   001C80  EF66  F00E         	goto	l2841
  7340   001C84                     u2880:
  7341   001C84  0E01               	movlw	1
  7342   001C86  2628               	addwf	___fldiv@b^0,f,c
  7343   001C88  0E00               	movlw	0
  7344   001C8A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7345   001C8C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7346   001C8E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7347   001C90  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7348   001C92  EF4D  F00E         	goto	u2891
  7349   001C96  EF4F  F00E         	goto	u2890
  7350   001C9A                     u2891:
  7351   001C9A  EF66  F00E         	goto	l2841
  7352   001C9E                     u2890:
  7353   001C9E  C028  F030         	movff	___fldiv@b,??___fldiv
  7354   001CA2  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7355   001CA6  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7356   001CAA  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7357   001CAE  3433               	rlcf	(??___fldiv+3)^0,w,c
  7358   001CB0  3233               	rrcf	(??___fldiv+3)^0,f,c
  7359   001CB2  3232               	rrcf	(??___fldiv+2)^0,f,c
  7360   001CB4  3231               	rrcf	(??___fldiv+1)^0,f,c
  7361   001CB6  3230               	rrcf	??___fldiv^0,f,c
  7362   001CB8  C030  F028         	movff	??___fldiv,___fldiv@b
  7363   001CBC  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7364   001CC0  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7365   001CC4  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7366   001CC8  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7367   001CCA  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7368   001CCC                     l2841:
  7369   001CCC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7370   001CCE  EF71  F00E         	goto	u2901
  7371   001CD2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7372   001CD4  E108               	bnz	u2900
  7373   001CD6  2839               	incf	___fldiv@new_exp^0,w,c
  7374   001CD8  A0D8               	btfss	status,0,c
  7375   001CDA  EF71  F00E         	goto	u2901
  7376   001CDE  EF73  F00E         	goto	u2900
  7377   001CE2                     u2901:
  7378   001CE2  EF7E  F00E         	goto	l2845
  7379   001CE6                     u2900:
  7380   001CE6  0E00               	movlw	0
  7381   001CE8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7382   001CEA  6839               	setf	___fldiv@new_exp^0,c
  7383   001CEC  0E00               	movlw	0
  7384   001CEE  6E28               	movwf	___fldiv@b^0,c
  7385   001CF0  0E00               	movlw	0
  7386   001CF2  6E29               	movwf	(___fldiv@b+1)^0,c
  7387   001CF4  0E00               	movlw	0
  7388   001CF6  6E2A               	movwf	(___fldiv@b+2)^0,c
  7389   001CF8  0E00               	movlw	0
  7390   001CFA  6E2B               	movwf	(___fldiv@b+3)^0,c
  7391   001CFC                     l2845:
  7392   001CFC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7393   001CFE  EF8B  F00E         	goto	u2910
  7394   001D02  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7395   001D04  E106               	bnz	u2911
  7396   001D06  0439               	decf	___fldiv@new_exp^0,w,c
  7397   001D08  B0D8               	btfsc	status,0,c
  7398   001D0A  EF89  F00E         	goto	u2911
  7399   001D0E  EF8B  F00E         	goto	u2910
  7400   001D12                     u2911:
  7401   001D12  EF99  F00E         	goto	l2849
  7402   001D16                     u2910:
  7403   001D16  0E00               	movlw	0
  7404   001D18  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7405   001D1A  0E00               	movlw	0
  7406   001D1C  6E39               	movwf	___fldiv@new_exp^0,c
  7407   001D1E  0E00               	movlw	0
  7408   001D20  6E28               	movwf	___fldiv@b^0,c
  7409   001D22  0E00               	movlw	0
  7410   001D24  6E29               	movwf	(___fldiv@b+1)^0,c
  7411   001D26  0E00               	movlw	0
  7412   001D28  6E2A               	movwf	(___fldiv@b+2)^0,c
  7413   001D2A  0E00               	movlw	0
  7414   001D2C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7415   001D2E  0E00               	movlw	0
  7416   001D30  6E38               	movwf	___fldiv@sign^0,c
  7417   001D32                     l2849:
  7418   001D32  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7419   001D36  A03F               	btfss	___fldiv@bexp^0,0,c
  7420   001D38  EFA0  F00E         	goto	u2921
  7421   001D3C  EFA2  F00E         	goto	u2920
  7422   001D40                     u2921:
  7423   001D40  EFA5  F00E         	goto	l2855
  7424   001D44                     u2920:
  7425   001D44  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7426   001D46  EFA6  F00E         	goto	l2857
  7427   001D4A                     l2855:
  7428   001D4A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7429   001D4C                     l2857:
  7430   001D4C  90D8               	bcf	status,0,c
  7431   001D4E  303F               	rrcf	___fldiv@bexp^0,w,c
  7432   001D50  6E2B               	movwf	(___fldiv@b+3)^0,c
  7433   001D52  EF5C  F00D         	goto	l2771
  7434   001D56                     l736:
  7435   001D56  0012               	return		;funcret
  7436   001D58                     __end_of___fldiv:
  7437                           	callstack 0
  7438                           
  7439 ;; *************** function _dtoa *****************
  7440 ;; Defined at:
  7441 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  7444 ;;		 -> sprintf@f(12), 
  7445 ;;  d               2   23[COMRAM] int 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  i               2   32[COMRAM] int 
  7448 ;;  w               2   29[COMRAM] int 
  7449 ;;  p               2   27[COMRAM] int 
  7450 ;;  s               1   31[COMRAM] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7460 ;;      Params:         3       0       0       0       0       0       0
  7461 ;;      Locals:         9       0       0       0       0       0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0
  7463 ;;      Totals:        12       0       0       0       0       0       0
  7464 ;;Total ram usage:       12 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 4
  7467 ;; This function calls:
  7468 ;;		___awdiv
  7469 ;;		___awmod
  7470 ;;		_abs
  7471 ;;		_pad
  7472 ;; This function is called by:
  7473 ;;		_vfpfcnvrt
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text30
  7478   0025CC                     __ptext30:
  7479                           	callstack 0
  7480   0025CC                     _dtoa:
  7481                           	callstack 22
  7482   0025CC                     
  7483                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  7484   0025CC  BE19               	btfsc	(dtoa@d+1)^0,7,c
  7485   0025CE  EFEB  F012         	goto	u4531
  7486   0025D2  EFEE  F012         	goto	u4530
  7487   0025D6                     u4531:
  7488   0025D6  0E01               	movlw	1
  7489   0025D8  EFEF  F012         	goto	u4540
  7490   0025DC                     u4530:
  7491   0025DC  0E00               	movlw	0
  7492   0025DE                     u4540:
  7493   0025DE  6E20               	movwf	dtoa@s^0,c
  7494                           
  7495                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  7496   0025E0  BE7C               	btfsc	(_prec+1)^0,7,c
  7497   0025E2  EFF5  F012         	goto	u4551
  7498   0025E6  EFF7  F012         	goto	u4550
  7499   0025EA                     u4551:
  7500   0025EA  EFF8  F012         	goto	l3935
  7501   0025EE                     u4550:
  7502   0025EE                     
  7503                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  7504   0025EE  927F               	bcf	_flags^0,1,c
  7505   0025F0                     l3935:
  7506                           
  7507                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  7508   0025F0  BE7C               	btfsc	(_prec+1)^0,7,c
  7509   0025F2  EFFF  F012         	goto	u4560
  7510   0025F6  EFFD  F012         	goto	u4561
  7511   0025FA                     u4561:
  7512   0025FA  EF05  F013         	goto	l870
  7513   0025FE                     u4560:
  7514   0025FE  0E00               	movlw	0
  7515   002600  6E1D               	movwf	(dtoa@p+1)^0,c
  7516   002602  0E01               	movlw	1
  7517   002604  6E1C               	movwf	dtoa@p^0,c
  7518   002606  EF09  F013         	goto	l872
  7519   00260A                     l870:
  7520   00260A  C07B  F01C         	movff	_prec,dtoa@p
  7521   00260E  C07C  F01D         	movff	_prec+1,dtoa@p+1
  7522   002612                     l872:
  7523                           
  7524                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7525   002612  C090  F01E         	movff	_width,dtoa@w
  7526   002616  C091  F01F         	movff	_width+1,dtoa@w+1
  7527   00261A                     
  7528                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  7529   00261A  5020               	movf	dtoa@s^0,w,c
  7530   00261C  B4D8               	btfsc	status,2,c
  7531   00261E  EF13  F013         	goto	u4571
  7532   002622  EF15  F013         	goto	u4570
  7533   002626                     u4571:
  7534   002626  EF2C  F013         	goto	l873
  7535   00262A                     u4570:
  7536   00262A                     
  7537                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  7538   00262A  061E               	decf	dtoa@w^0,f,c
  7539   00262C  A0D8               	btfss	status,0,c
  7540   00262E  061F               	decf	(dtoa@w+1)^0,f,c
  7541   002630                     
  7542                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7543   002630  5020               	movf	dtoa@s^0,w,c
  7544   002632  A4D8               	btfss	status,2,c
  7545   002634  EF1E  F013         	goto	u4581
  7546   002638  EF20  F013         	goto	u4580
  7547   00263C                     u4581:
  7548   00263C  EF26  F013         	goto	l3947
  7549   002640                     u4580:
  7550   002640  0E00               	movlw	0
  7551   002642  6E1B               	movwf	(_dtoa$1124+1)^0,c
  7552   002644  0E2B               	movlw	43
  7553   002646  6E1A               	movwf	_dtoa$1124^0,c
  7554   002648  EF2A  F013         	goto	l3949
  7555   00264C                     l3947:
  7556   00264C  0E00               	movlw	0
  7557   00264E  6E1B               	movwf	(_dtoa$1124+1)^0,c
  7558   002650  0E2D               	movlw	45
  7559   002652  6E1A               	movwf	_dtoa$1124^0,c
  7560   002654                     l3949:
  7561   002654  C01A  F020         	movff	_dtoa$1124,dtoa@s
  7562   002658                     l873:
  7563                           
  7564                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7565   002658  0E00               	movlw	0
  7566   00265A  6E22               	movwf	(dtoa@i+1)^0,c
  7567   00265C  0E4F               	movlw	79
  7568   00265E  6E21               	movwf	dtoa@i^0,c
  7569   002660                     
  7570                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7571   002660  0E00               	movlw	0
  7572   002662  0101               	movlb	1	; () banked
  7573   002664  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7574                           
  7575                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7576   002666  EF65  F013         	goto	l3963
  7577   00266A                     l3953:
  7578                           
  7579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  7580   00266A  0621               	decf	dtoa@i^0,f,c
  7581   00266C  A0D8               	btfss	status,0,c
  7582   00266E  0622               	decf	(dtoa@i+1)^0,f,c
  7583   002670                     
  7584                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7585   002670  0E00               	movlw	low _dbuf
  7586   002672  2421               	addwf	dtoa@i^0,w,c
  7587   002674  6ED9               	movwf	fsr2l,c
  7588   002676  0E01               	movlw	high _dbuf
  7589   002678  2022               	addwfc	(dtoa@i+1)^0,w,c
  7590   00267A  6EDA               	movwf	fsr2h,c
  7591   00267C  C018  F001         	movff	dtoa@d,___awmod@dividend
  7592   002680  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  7593   002684  0E00               	movlw	0
  7594   002686  6E04               	movwf	(___awmod@divisor+1)^0,c
  7595   002688  0E0A               	movlw	10
  7596   00268A  6E03               	movwf	___awmod@divisor^0,c
  7597   00268C  EC9E  F017         	call	___awmod	;wreg free
  7598   002690  C001  F007         	movff	?___awmod,abs@a
  7599   002694  C002  F008         	movff	?___awmod+1,abs@a+1
  7600   002698  ECA5  F01A         	call	_abs	;wreg free
  7601   00269C  5007               	movf	?_abs^0,w,c
  7602   00269E  0F30               	addlw	48
  7603   0026A0  6EDF               	movwf	indf2,c
  7604   0026A2                     
  7605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  7606   0026A2  061C               	decf	dtoa@p^0,f,c
  7607   0026A4  A0D8               	btfss	status,0,c
  7608   0026A6  061D               	decf	(dtoa@p+1)^0,f,c
  7609   0026A8                     
  7610                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  7611   0026A8  061E               	decf	dtoa@w^0,f,c
  7612   0026AA  A0D8               	btfss	status,0,c
  7613   0026AC  061F               	decf	(dtoa@w+1)^0,f,c
  7614   0026AE                     
  7615                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7616   0026AE  C018  F001         	movff	dtoa@d,___awdiv@dividend
  7617   0026B2  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  7618   0026B6  0E00               	movlw	0
  7619   0026B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7620   0026BA  0E0A               	movlw	10
  7621   0026BC  6E03               	movwf	___awdiv@divisor^0,c
  7622   0026BE  EC85  F016         	call	___awdiv	;wreg free
  7623   0026C2  C001  F018         	movff	?___awdiv,dtoa@d
  7624   0026C6  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  7625   0026CA                     l3963:
  7626                           
  7627                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7628   0026CA  BE22               	btfsc	(dtoa@i+1)^0,7,c
  7629   0026CC  EF70  F013         	goto	u4591
  7630   0026D0  5022               	movf	(dtoa@i+1)^0,w,c
  7631   0026D2  E108               	bnz	u4590
  7632   0026D4  0421               	decf	dtoa@i^0,w,c
  7633   0026D6  A0D8               	btfss	status,0,c
  7634   0026D8  EF70  F013         	goto	u4591
  7635   0026DC  EF72  F013         	goto	u4590
  7636   0026E0                     u4591:
  7637   0026E0  EF9C  F013         	goto	l3973
  7638   0026E4                     u4590:
  7639   0026E4  5018               	movf	dtoa@d^0,w,c
  7640   0026E6  1019               	iorwf	(dtoa@d+1)^0,w,c
  7641   0026E8  A4D8               	btfss	status,2,c
  7642   0026EA  EF79  F013         	goto	u4601
  7643   0026EE  EF7B  F013         	goto	u4600
  7644   0026F2                     u4601:
  7645   0026F2  EF35  F013         	goto	l3953
  7646   0026F6                     u4600:
  7647   0026F6  BE1D               	btfsc	(dtoa@p+1)^0,7,c
  7648   0026F8  EF88  F013         	goto	u4610
  7649   0026FC  501D               	movf	(dtoa@p+1)^0,w,c
  7650   0026FE  E106               	bnz	u4611
  7651   002700  041C               	decf	dtoa@p^0,w,c
  7652   002702  B0D8               	btfsc	status,0,c
  7653   002704  EF86  F013         	goto	u4611
  7654   002708  EF88  F013         	goto	u4610
  7655   00270C                     u4611:
  7656   00270C  EF35  F013         	goto	l3953
  7657   002710                     u4610:
  7658   002710  BE1F               	btfsc	(dtoa@w+1)^0,7,c
  7659   002712  EF93  F013         	goto	u4621
  7660   002716  501F               	movf	(dtoa@w+1)^0,w,c
  7661   002718  E108               	bnz	u4620
  7662   00271A  041E               	decf	dtoa@w^0,w,c
  7663   00271C  A0D8               	btfss	status,0,c
  7664   00271E  EF93  F013         	goto	u4621
  7665   002722  EF95  F013         	goto	u4620
  7666   002726                     u4621:
  7667   002726  EF9C  F013         	goto	l3973
  7668   00272A                     u4620:
  7669   00272A  B27F               	btfsc	_flags^0,1,c
  7670   00272C  EF9A  F013         	goto	u4631
  7671   002730  EF9C  F013         	goto	u4630
  7672   002734                     u4631:
  7673   002734  EF35  F013         	goto	l3953
  7674   002738                     u4630:
  7675   002738                     l3973:
  7676                           
  7677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7678   002738  5020               	movf	dtoa@s^0,w,c
  7679   00273A  B4D8               	btfsc	status,2,c
  7680   00273C  EFA2  F013         	goto	u4641
  7681   002740  EFA4  F013         	goto	u4640
  7682   002744                     u4641:
  7683   002744  EFAF  F013         	goto	l3979
  7684   002748                     u4640:
  7685   002748                     
  7686                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  7687   002748  0621               	decf	dtoa@i^0,f,c
  7688   00274A  A0D8               	btfss	status,0,c
  7689   00274C  0622               	decf	(dtoa@i+1)^0,f,c
  7690   00274E                     
  7691                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7692   00274E  0E00               	movlw	low _dbuf
  7693   002750  2421               	addwf	dtoa@i^0,w,c
  7694   002752  6ED9               	movwf	fsr2l,c
  7695   002754  0E01               	movlw	high _dbuf
  7696   002756  2022               	addwfc	(dtoa@i+1)^0,w,c
  7697   002758  6EDA               	movwf	fsr2h,c
  7698   00275A  C020  FFDF         	movff	dtoa@s,indf2
  7699   00275E                     l3979:
  7700                           
  7701                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7702   00275E  C017  F00F         	movff	dtoa@fp,pad@fp
  7703   002762  0E00               	movlw	low _dbuf
  7704   002764  2421               	addwf	dtoa@i^0,w,c
  7705   002766  6E10               	movwf	pad@buf^0,c
  7706   002768  0E01               	movlw	high _dbuf
  7707   00276A  2022               	addwfc	(dtoa@i+1)^0,w,c
  7708   00276C  6E11               	movwf	(pad@buf+1)^0,c
  7709   00276E  C01E  F012         	movff	dtoa@w,pad@p
  7710   002772  C01F  F013         	movff	dtoa@w+1,pad@p+1
  7711   002776  EC3D  F019         	call	_pad	;wreg free
  7712   00277A  0012               	return		;funcret
  7713   00277C                     __end_of_dtoa:
  7714                           	callstack 0
  7715                           
  7716 ;; *************** function _pad *****************
  7717 ;; Defined at:
  7718 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  7721 ;;		 -> sprintf@f(12), 
  7722 ;;  buf             2   15[COMRAM] PTR unsigned char 
  7723 ;;		 -> dbuf(80), 
  7724 ;;  p               2   17[COMRAM] int 
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;  i               2   20[COMRAM] int 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7736 ;;      Params:         5       0       0       0       0       0       0
  7737 ;;      Locals:         2       0       0       0       0       0       0
  7738 ;;      Temps:          1       0       0       0       0       0       0
  7739 ;;      Totals:         8       0       0       0       0       0       0
  7740 ;;Total ram usage:        8 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; Hardware stack levels required when called: 3
  7743 ;; This function calls:
  7744 ;;		_fputc
  7745 ;;		_fputs
  7746 ;; This function is called by:
  7747 ;;		_dtoa
  7748 ;;		_efgtoa
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text31
  7753   00327A                     __ptext31:
  7754                           	callstack 0
  7755   00327A                     _pad:
  7756                           	callstack 22
  7757   00327A                     
  7758                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  7759   00327A  BE13               	btfsc	(pad@p+1)^0,7,c
  7760   00327C  EF44  F019         	goto	u4490
  7761   003280  EF42  F019         	goto	u4491
  7762   003284                     u4491:
  7763   003284  EF48  F019         	goto	l861
  7764   003288                     u4490:
  7765   003288                     
  7766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7767   003288  0E00               	movlw	0
  7768   00328A  6E13               	movwf	(pad@p+1)^0,c
  7769   00328C  0E00               	movlw	0
  7770   00328E  6E12               	movwf	pad@p^0,c
  7771   003290                     l861:
  7772                           
  7773                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7774   003290  0E00               	movlw	0
  7775   003292  6E16               	movwf	(pad@i+1)^0,c
  7776   003294  0E00               	movlw	0
  7777   003296  6E15               	movwf	pad@i^0,c
  7778                           
  7779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7780   003298  EF58  F019         	goto	l3911
  7781   00329C                     l3907:
  7782                           
  7783                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7784   00329C  0E00               	movlw	0
  7785   00329E  6E02               	movwf	(fputc@c+1)^0,c
  7786   0032A0  0E20               	movlw	32
  7787   0032A2  6E01               	movwf	fputc@c^0,c
  7788   0032A4  C00F  F003         	movff	pad@fp,fputc@fp
  7789   0032A8  ECE7  F016         	call	_fputc	;wreg free
  7790   0032AC                     
  7791                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7792   0032AC  4A15               	infsnz	pad@i^0,f,c
  7793   0032AE  2A16               	incf	(pad@i+1)^0,f,c
  7794   0032B0                     l3911:
  7795                           
  7796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7797   0032B0  5012               	movf	pad@p^0,w,c
  7798   0032B2  5C15               	subwf	pad@i^0,w,c
  7799   0032B4  5016               	movf	(pad@i+1)^0,w,c
  7800   0032B6  0A80               	xorlw	128
  7801   0032B8  6E14               	movwf	??_pad^0,c
  7802   0032BA  5013               	movf	(pad@p+1)^0,w,c
  7803   0032BC  0A80               	xorlw	128
  7804   0032BE  5814               	subwfb	??_pad^0,w,c
  7805   0032C0  A0D8               	btfss	status,0,c
  7806   0032C2  EF65  F019         	goto	u4501
  7807   0032C6  EF67  F019         	goto	u4500
  7808   0032CA                     u4501:
  7809   0032CA  EF4E  F019         	goto	l3907
  7810   0032CE                     u4500:
  7811   0032CE                     
  7812                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7813   0032CE  C010  F009         	movff	pad@buf,fputs@s
  7814   0032D2  C011  F00A         	movff	pad@buf+1,fputs@s+1
  7815   0032D6  C00F  F00B         	movff	pad@fp,fputs@fp
  7816   0032DA  EC4C  F01A         	call	_fputs	;wreg free
  7817   0032DE  0012               	return		;funcret
  7818   0032E0                     __end_of_pad:
  7819                           	callstack 0
  7820                           
  7821 ;; *************** function _fputs *****************
  7822 ;; Defined at:
  7823 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7826 ;;		 -> dbuf(80), 
  7827 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  7828 ;;		 -> sprintf@f(12), 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  i               2   12[COMRAM] int 
  7831 ;;  c               1   11[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  2    8[COMRAM] int 
  7834 ;; Registers used:
  7835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7841 ;;      Params:         3       0       0       0       0       0       0
  7842 ;;      Locals:         3       0       0       0       0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0
  7844 ;;      Totals:         6       0       0       0       0       0       0
  7845 ;;Total ram usage:        6 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 2
  7848 ;; This function calls:
  7849 ;;		_fputc
  7850 ;; This function is called by:
  7851 ;;		_pad
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text32
  7856   003498                     __ptext32:
  7857                           	callstack 0
  7858   003498                     _fputs:
  7859                           	callstack 22
  7860   003498  0E00               	movlw	0
  7861   00349A  6E0E               	movwf	(fputs@i+1)^0,c
  7862   00349C  0E00               	movlw	0
  7863   00349E  6E0D               	movwf	fputs@i^0,c
  7864   0034A0  EF5B  F01A         	goto	l3901
  7865   0034A4                     l3897:
  7866   0034A4  C00C  F001         	movff	fputs@c,fputc@c
  7867   0034A8  6A02               	clrf	(fputc@c+1)^0,c
  7868   0034AA  C00B  F003         	movff	fputs@fp,fputc@fp
  7869   0034AE  ECE7  F016         	call	_fputc	;wreg free
  7870   0034B2  4A0D               	infsnz	fputs@i^0,f,c
  7871   0034B4  2A0E               	incf	(fputs@i+1)^0,f,c
  7872   0034B6                     l3901:
  7873   0034B6  500D               	movf	fputs@i^0,w,c
  7874   0034B8  2409               	addwf	fputs@s^0,w,c
  7875   0034BA  6ED9               	movwf	fsr2l,c
  7876   0034BC  500E               	movf	(fputs@i+1)^0,w,c
  7877   0034BE  200A               	addwfc	(fputs@s+1)^0,w,c
  7878   0034C0  6EDA               	movwf	fsr2h,c
  7879   0034C2  50DF               	movf	indf2,w,c
  7880   0034C4  6E0C               	movwf	fputs@c^0,c
  7881   0034C6  500C               	movf	fputs@c^0,w,c
  7882   0034C8  A4D8               	btfss	status,2,c
  7883   0034CA  EF69  F01A         	goto	u4481
  7884   0034CE  EF6B  F01A         	goto	u4480
  7885   0034D2                     u4481:
  7886   0034D2  EF52  F01A         	goto	l3897
  7887   0034D6                     u4480:
  7888   0034D6  0012               	return		;funcret
  7889   0034D8                     __end_of_fputs:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function _fputc *****************
  7893 ;; Defined at:
  7894 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  c               2    0[COMRAM] int 
  7897 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7898 ;;		 -> sprintf@f(12), 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  2    0[COMRAM] int 
  7903 ;; Registers used:
  7904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7910 ;;      Params:         3       0       0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0
  7912 ;;      Temps:          5       0       0       0       0       0       0
  7913 ;;      Totals:         8       0       0       0       0       0       0
  7914 ;;Total ram usage:        8 bytes
  7915 ;; Hardware stack levels used: 1
  7916 ;; Hardware stack levels required when called: 1
  7917 ;; This function calls:
  7918 ;;		_putch
  7919 ;; This function is called by:
  7920 ;;		_pad
  7921 ;;		_vfpfcnvrt
  7922 ;;		_fputs
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text33
  7927   002DCE                     __ptext33:
  7928                           	callstack 0
  7929   002DCE                     _fputc:
  7930                           	callstack 25
  7931   002DCE  5003               	movf	fputc@fp^0,w,c
  7932   002DD0  B4D8               	btfsc	status,2,c
  7933   002DD2  EFED  F016         	goto	u2251
  7934   002DD6  EFEF  F016         	goto	u2250
  7935   002DDA                     u2251:
  7936   002DDA  EFF7  F016         	goto	l2489
  7937   002DDE                     u2250:
  7938   002DDE  5003               	movf	fputc@fp^0,w,c
  7939   002DE0  A4D8               	btfss	status,2,c
  7940   002DE2  EFF5  F016         	goto	u2261
  7941   002DE6  EFF7  F016         	goto	u2260
  7942   002DEA                     u2261:
  7943   002DEA  EFFC  F016         	goto	l2491
  7944   002DEE                     u2260:
  7945   002DEE                     l2489:
  7946   002DEE  5001               	movf	fputc@c^0,w,c
  7947   002DF0  EC4D  F01B         	call	_putch
  7948   002DF4  EF43  F017         	goto	l1046
  7949   002DF8                     l2491:
  7950   002DF8  5003               	movf	fputc@fp^0,w,c
  7951   002DFA  6ED9               	movwf	fsr2l,c
  7952   002DFC  6ADA               	clrf	fsr2h,c
  7953   002DFE  0E0A               	movlw	10
  7954   002E00  26D9               	addwf	fsr2l,f,c
  7955   002E02  50DE               	movf	postinc2,w,c
  7956   002E04  10DE               	iorwf	postinc2,w,c
  7957   002E06  B4D8               	btfsc	status,2,c
  7958   002E08  EF08  F017         	goto	u2271
  7959   002E0C  EF0A  F017         	goto	u2270
  7960   002E10                     u2271:
  7961   002E10  EF23  F017         	goto	l2495
  7962   002E14                     u2270:
  7963   002E14  5003               	movf	fputc@fp^0,w,c
  7964   002E16  6ED9               	movwf	fsr2l,c
  7965   002E18  6ADA               	clrf	fsr2h,c
  7966   002E1A  0E0A               	movlw	10
  7967   002E1C  26D9               	addwf	fsr2l,f,c
  7968   002E1E  5003               	movf	fputc@fp^0,w,c
  7969   002E20  6EE1               	movwf	fsr1l,c
  7970   002E22  6AE2               	clrf	fsr1h,c
  7971   002E24  0E03               	movlw	3
  7972   002E26  26E1               	addwf	fsr1l,f,c
  7973   002E28  50DE               	movf	postinc2,w,c
  7974   002E2A  5CE6               	subwf	postinc1,w,c
  7975   002E2C  50E6               	movf	postinc1,w,c
  7976   002E2E  0A80               	xorlw	128
  7977   002E30  6E08               	movwf	(??_fputc+4)^0,c
  7978   002E32  50DE               	movf	postinc2,w,c
  7979   002E34  0A80               	xorlw	128
  7980   002E36  5808               	subwfb	(??_fputc+4)^0,w,c
  7981   002E38  B0D8               	btfsc	status,0,c
  7982   002E3A  EF21  F017         	goto	u2281
  7983   002E3E  EF23  F017         	goto	u2280
  7984   002E42                     u2281:
  7985   002E42  EF43  F017         	goto	l1046
  7986   002E46                     u2280:
  7987   002E46                     l2495:
  7988   002E46  5003               	movf	fputc@fp^0,w,c
  7989   002E48  6ED9               	movwf	fsr2l,c
  7990   002E4A  6ADA               	clrf	fsr2h,c
  7991   002E4C  0E03               	movlw	3
  7992   002E4E  26D9               	addwf	fsr2l,f,c
  7993   002E50  CFDE F004          	movff	postinc2,??_fputc
  7994   002E54  CFDD F005          	movff	postdec2,??_fputc+1
  7995   002E58  5003               	movf	fputc@fp^0,w,c
  7996   002E5A  6ED9               	movwf	fsr2l,c
  7997   002E5C  6ADA               	clrf	fsr2h,c
  7998   002E5E  CFDE F006          	movff	postinc2,??_fputc+2
  7999   002E62  CFDD F007          	movff	postdec2,??_fputc+3
  8000   002E66  5004               	movf	??_fputc^0,w,c
  8001   002E68  2406               	addwf	(??_fputc+2)^0,w,c
  8002   002E6A  6ED9               	movwf	fsr2l,c
  8003   002E6C  5005               	movf	(??_fputc+1)^0,w,c
  8004   002E6E  2007               	addwfc	(??_fputc+3)^0,w,c
  8005   002E70  6EDA               	movwf	fsr2h,c
  8006   002E72  C001  FFDF         	movff	fputc@c,indf2
  8007   002E76  5003               	movf	fputc@fp^0,w,c
  8008   002E78  6ED9               	movwf	fsr2l,c
  8009   002E7A  6ADA               	clrf	fsr2h,c
  8010   002E7C  0E03               	movlw	3
  8011   002E7E  26D9               	addwf	fsr2l,f,c
  8012   002E80  2ADE               	incf	postinc2,f,c
  8013   002E82  0E00               	movlw	0
  8014   002E84  22DD               	addwfc	postdec2,f,c
  8015   002E86                     l1046:
  8016   002E86  0012               	return		;funcret
  8017   002E88                     __end_of_fputc:
  8018                           	callstack 0
  8019                           
  8020 ;; *************** function _putch *****************
  8021 ;; Defined at:
  8022 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  c               1    wreg     unsigned char 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  c               1    0[COMRAM] unsigned char 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8036 ;;      Params:         0       0       0       0       0       0       0
  8037 ;;      Locals:         0       0       0       0       0       0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0
  8039 ;;      Totals:         0       0       0       0       0       0       0
  8040 ;;Total ram usage:        0 bytes
  8041 ;; Hardware stack levels used: 1
  8042 ;; This function calls:
  8043 ;;		Nothing
  8044 ;; This function is called by:
  8045 ;;		_fputc
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           	psect	text34
  8050   00369A                     __ptext34:
  8051                           	callstack 0
  8052   00369A                     _putch:
  8053                           	callstack 25
  8054   00369A  0012               	return		;funcret
  8055   00369C                     __end_of_putch:
  8056                           	callstack 0
  8057                           
  8058 ;; *************** function _abs *****************
  8059 ;; Defined at:
  8060 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  a               2    6[COMRAM] int 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  2    6[COMRAM] int 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8074 ;;      Params:         2       0       0       0       0       0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0
  8076 ;;      Temps:          2       0       0       0       0       0       0
  8077 ;;      Totals:         4       0       0       0       0       0       0
  8078 ;;Total ram usage:        4 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_dtoa
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text35
  8088   00354A                     __ptext35:
  8089                           	callstack 0
  8090   00354A                     _abs:
  8091                           	callstack 25
  8092   00354A  BE08               	btfsc	(abs@a+1)^0,7,c
  8093   00354C  EFAA  F01A         	goto	u3421
  8094   003550  EFAC  F01A         	goto	u3420
  8095   003554                     u3421:
  8096   003554  EFB2  F01A         	goto	l1005
  8097   003558                     u3420:
  8098   003558  C007  F007         	movff	abs@a,?_abs
  8099   00355C  C008  F008         	movff	abs@a+1,?_abs+1
  8100   003560  EFBE  F01A         	goto	l1008
  8101   003564                     l1005:
  8102   003564  C007  F009         	movff	abs@a,??_abs
  8103   003568  C008  F00A         	movff	abs@a+1,??_abs+1
  8104   00356C  1E09               	comf	??_abs^0,f,c
  8105   00356E  1E0A               	comf	(??_abs+1)^0,f,c
  8106   003570  4A09               	infsnz	??_abs^0,f,c
  8107   003572  2A0A               	incf	(??_abs+1)^0,f,c
  8108   003574  C009  F007         	movff	??_abs,?_abs
  8109   003578  C00A  F008         	movff	??_abs+1,?_abs+1
  8110   00357C                     l1008:
  8111   00357C  0012               	return		;funcret
  8112   00357E                     __end_of_abs:
  8113                           	callstack 0
  8114                           
  8115 ;; *************** function ___awmod *****************
  8116 ;; Defined at:
  8117 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  dividend        2    0[COMRAM] int 
  8120 ;;  divisor         2    2[COMRAM] int 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  sign            1    5[COMRAM] unsigned char 
  8123 ;;  counter         1    4[COMRAM] unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  2    0[COMRAM] int 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2, status,0
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8133 ;;      Params:         4       0       0       0       0       0       0
  8134 ;;      Locals:         2       0       0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0
  8136 ;;      Totals:         6       0       0       0       0       0       0
  8137 ;;Total ram usage:        6 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_dtoa
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text36
  8147   002F3C                     __ptext36:
  8148                           	callstack 0
  8149   002F3C                     ___awmod:
  8150                           	callstack 25
  8151   002F3C  0E00               	movlw	0
  8152   002F3E  6E06               	movwf	___awmod@sign^0,c
  8153   002F40  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8154   002F42  EFA7  F017         	goto	u3180
  8155   002F46  EFA5  F017         	goto	u3181
  8156   002F4A                     u3181:
  8157   002F4A  EFAD  F017         	goto	l3053
  8158   002F4E                     u3180:
  8159   002F4E  6C01               	negf	___awmod@dividend^0,c
  8160   002F50  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8161   002F52  B0D8               	btfsc	status,0,c
  8162   002F54  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8163   002F56  0E01               	movlw	1
  8164   002F58  6E06               	movwf	___awmod@sign^0,c
  8165   002F5A                     l3053:
  8166   002F5A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8167   002F5C  EFB4  F017         	goto	u3190
  8168   002F60  EFB2  F017         	goto	u3191
  8169   002F64                     u3191:
  8170   002F64  EFB8  F017         	goto	l3057
  8171   002F68                     u3190:
  8172   002F68  6C03               	negf	___awmod@divisor^0,c
  8173   002F6A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8174   002F6C  B0D8               	btfsc	status,0,c
  8175   002F6E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8176   002F70                     l3057:
  8177   002F70  5003               	movf	___awmod@divisor^0,w,c
  8178   002F72  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8179   002F74  B4D8               	btfsc	status,2,c
  8180   002F76  EFBF  F017         	goto	u3201
  8181   002F7A  EFC1  F017         	goto	u3200
  8182   002F7E                     u3201:
  8183   002F7E  EFE5  F017         	goto	l3073
  8184   002F82                     u3200:
  8185   002F82  0E01               	movlw	1
  8186   002F84  6E05               	movwf	___awmod@counter^0,c
  8187   002F86  EFC9  F017         	goto	l3063
  8188   002F8A                     l3061:
  8189   002F8A  90D8               	bcf	status,0,c
  8190   002F8C  3603               	rlcf	___awmod@divisor^0,f,c
  8191   002F8E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8192   002F90  2A05               	incf	___awmod@counter^0,f,c
  8193   002F92                     l3063:
  8194   002F92  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8195   002F94  EFCE  F017         	goto	u3211
  8196   002F98  EFD0  F017         	goto	u3210
  8197   002F9C                     u3211:
  8198   002F9C  EFC5  F017         	goto	l3061
  8199   002FA0                     u3210:
  8200   002FA0                     l3065:
  8201   002FA0  5003               	movf	___awmod@divisor^0,w,c
  8202   002FA2  5C01               	subwf	___awmod@dividend^0,w,c
  8203   002FA4  5004               	movf	(___awmod@divisor+1)^0,w,c
  8204   002FA6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8205   002FA8  A0D8               	btfss	status,0,c
  8206   002FAA  EFD9  F017         	goto	u3221
  8207   002FAE  EFDB  F017         	goto	u3220
  8208   002FB2                     u3221:
  8209   002FB2  EFDF  F017         	goto	l3069
  8210   002FB6                     u3220:
  8211   002FB6  5003               	movf	___awmod@divisor^0,w,c
  8212   002FB8  5E01               	subwf	___awmod@dividend^0,f,c
  8213   002FBA  5004               	movf	(___awmod@divisor+1)^0,w,c
  8214   002FBC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8215   002FBE                     l3069:
  8216   002FBE  90D8               	bcf	status,0,c
  8217   002FC0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8218   002FC2  3203               	rrcf	___awmod@divisor^0,f,c
  8219   002FC4  2E05               	decfsz	___awmod@counter^0,f,c
  8220   002FC6  EFD0  F017         	goto	l3065
  8221   002FCA                     l3073:
  8222   002FCA  5006               	movf	___awmod@sign^0,w,c
  8223   002FCC  B4D8               	btfsc	status,2,c
  8224   002FCE  EFEB  F017         	goto	u3231
  8225   002FD2  EFED  F017         	goto	u3230
  8226   002FD6                     u3231:
  8227   002FD6  EFF1  F017         	goto	l3077
  8228   002FDA                     u3230:
  8229   002FDA  6C01               	negf	___awmod@dividend^0,c
  8230   002FDC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8231   002FDE  B0D8               	btfsc	status,0,c
  8232   002FE0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8233   002FE2                     l3077:
  8234   002FE2  C001  F001         	movff	___awmod@dividend,?___awmod
  8235   002FE6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8236   002FEA  0012               	return		;funcret
  8237   002FEC                     __end_of___awmod:
  8238                           	callstack 0
  8239                           
  8240 ;; *************** function ___awdiv *****************
  8241 ;; Defined at:
  8242 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  dividend        2    0[COMRAM] int 
  8245 ;;  divisor         2    2[COMRAM] int 
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  quotient        2    6[COMRAM] int 
  8248 ;;  sign            1    5[COMRAM] unsigned char 
  8249 ;;  counter         1    4[COMRAM] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  2    0[COMRAM] int 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8259 ;;      Params:         4       0       0       0       0       0       0
  8260 ;;      Locals:         4       0       0       0       0       0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0
  8262 ;;      Totals:         8       0       0       0       0       0       0
  8263 ;;Total ram usage:        8 bytes
  8264 ;; Hardware stack levels used: 1
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_dtoa
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text37
  8273   002D0A                     __ptext37:
  8274                           	callstack 0
  8275   002D0A                     ___awdiv:
  8276                           	callstack 25
  8277   002D0A  0E00               	movlw	0
  8278   002D0C  6E06               	movwf	___awdiv@sign^0,c
  8279   002D0E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8280   002D10  EF8E  F016         	goto	u3120
  8281   002D14  EF8C  F016         	goto	u3121
  8282   002D18                     u3121:
  8283   002D18  EF94  F016         	goto	l3009
  8284   002D1C                     u3120:
  8285   002D1C  6C03               	negf	___awdiv@divisor^0,c
  8286   002D1E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8287   002D20  B0D8               	btfsc	status,0,c
  8288   002D22  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8289   002D24  0E01               	movlw	1
  8290   002D26  6E06               	movwf	___awdiv@sign^0,c
  8291   002D28                     l3009:
  8292   002D28  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8293   002D2A  EF9B  F016         	goto	u3130
  8294   002D2E  EF99  F016         	goto	u3131
  8295   002D32                     u3131:
  8296   002D32  EFA1  F016         	goto	l3015
  8297   002D36                     u3130:
  8298   002D36  6C01               	negf	___awdiv@dividend^0,c
  8299   002D38  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8300   002D3A  B0D8               	btfsc	status,0,c
  8301   002D3C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8302   002D3E  0E01               	movlw	1
  8303   002D40  1A06               	xorwf	___awdiv@sign^0,f,c
  8304   002D42                     l3015:
  8305   002D42  0E00               	movlw	0
  8306   002D44  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8307   002D46  0E00               	movlw	0
  8308   002D48  6E07               	movwf	___awdiv@quotient^0,c
  8309   002D4A  5003               	movf	___awdiv@divisor^0,w,c
  8310   002D4C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8311   002D4E  B4D8               	btfsc	status,2,c
  8312   002D50  EFAC  F016         	goto	u3141
  8313   002D54  EFAE  F016         	goto	u3140
  8314   002D58                     u3141:
  8315   002D58  EFD6  F016         	goto	l3037
  8316   002D5C                     u3140:
  8317   002D5C  0E01               	movlw	1
  8318   002D5E  6E05               	movwf	___awdiv@counter^0,c
  8319   002D60  EFB6  F016         	goto	l3023
  8320   002D64                     l3021:
  8321   002D64  90D8               	bcf	status,0,c
  8322   002D66  3603               	rlcf	___awdiv@divisor^0,f,c
  8323   002D68  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8324   002D6A  2A05               	incf	___awdiv@counter^0,f,c
  8325   002D6C                     l3023:
  8326   002D6C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8327   002D6E  EFBB  F016         	goto	u3151
  8328   002D72  EFBD  F016         	goto	u3150
  8329   002D76                     u3151:
  8330   002D76  EFB2  F016         	goto	l3021
  8331   002D7A                     u3150:
  8332   002D7A                     l3025:
  8333   002D7A  90D8               	bcf	status,0,c
  8334   002D7C  3607               	rlcf	___awdiv@quotient^0,f,c
  8335   002D7E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8336   002D80  5003               	movf	___awdiv@divisor^0,w,c
  8337   002D82  5C01               	subwf	___awdiv@dividend^0,w,c
  8338   002D84  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8339   002D86  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8340   002D88  A0D8               	btfss	status,0,c
  8341   002D8A  EFC9  F016         	goto	u3161
  8342   002D8E  EFCB  F016         	goto	u3160
  8343   002D92                     u3161:
  8344   002D92  EFD0  F016         	goto	l3033
  8345   002D96                     u3160:
  8346   002D96  5003               	movf	___awdiv@divisor^0,w,c
  8347   002D98  5E01               	subwf	___awdiv@dividend^0,f,c
  8348   002D9A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8349   002D9C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8350   002D9E  8007               	bsf	___awdiv@quotient^0,0,c
  8351   002DA0                     l3033:
  8352   002DA0  90D8               	bcf	status,0,c
  8353   002DA2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8354   002DA4  3203               	rrcf	___awdiv@divisor^0,f,c
  8355   002DA6  2E05               	decfsz	___awdiv@counter^0,f,c
  8356   002DA8  EFBD  F016         	goto	l3025
  8357   002DAC                     l3037:
  8358   002DAC  5006               	movf	___awdiv@sign^0,w,c
  8359   002DAE  B4D8               	btfsc	status,2,c
  8360   002DB0  EFDC  F016         	goto	u3171
  8361   002DB4  EFDE  F016         	goto	u3170
  8362   002DB8                     u3171:
  8363   002DB8  EFE2  F016         	goto	l3041
  8364   002DBC                     u3170:
  8365   002DBC  6C07               	negf	___awdiv@quotient^0,c
  8366   002DBE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8367   002DC0  B0D8               	btfsc	status,0,c
  8368   002DC2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8369   002DC4                     l3041:
  8370   002DC4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8371   002DC8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8372   002DCC  0012               	return		;funcret
  8373   002DCE                     __end_of___awdiv:
  8374                           	callstack 0
  8375                           
  8376 ;; *************** function _lcd_clear *****************
  8377 ;; Defined at:
  8378 ;;		line 71 in file "LCD4b_EXSTO.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8392 ;;      Params:         0       0       0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0
  8395 ;;      Totals:         0       0       0       0       0       0       0
  8396 ;;Total ram usage:        0 bytes
  8397 ;; Hardware stack levels used: 1
  8398 ;; Hardware stack levels required when called: 4
  8399 ;; This function calls:
  8400 ;;		_lcd_write
  8401 ;; This function is called by:
  8402 ;;		_LCD_tela1
  8403 ;;		_LCD_tela2
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text38
  8408   0035DE                     __ptext38:
  8409                           	callstack 0
  8410   0035DE                     _lcd_clear:
  8411                           	callstack 25
  8412   0035DE                     
  8413                           ;LCD4b_EXSTO.c: 73:     lcd_write(1,1,"               ");
  8414   0035DE  0E01               	movlw	1
  8415   0035E0  6E07               	movwf	lcd_write@col^0,c
  8416   0035E2  0E09               	movlw	low (STR_3+8)
  8417   0035E4  6E08               	movwf	lcd_write@str^0,c
  8418   0035E6  5008               	movf	lcd_write@str^0,w,c
  8419   0035E8  A4D8               	btfss	status,2,c
  8420   0035EA  0E06               	movlw	high __smallconst
  8421   0035EC  6E09               	movwf	(lcd_write@str+1)^0,c
  8422   0035EE  0E01               	movlw	1
  8423   0035F0  EC9E  F018         	call	_lcd_write
  8424                           
  8425                           ;LCD4b_EXSTO.c: 74:     lcd_write(2,1,"               ");
  8426   0035F4  0E01               	movlw	1
  8427   0035F6  6E07               	movwf	lcd_write@col^0,c
  8428   0035F8  0E09               	movlw	low (STR_3+8)
  8429   0035FA  6E08               	movwf	lcd_write@str^0,c
  8430   0035FC  5008               	movf	lcd_write@str^0,w,c
  8431   0035FE  A4D8               	btfss	status,2,c
  8432   003600  0E06               	movlw	high __smallconst
  8433   003602  6E09               	movwf	(lcd_write@str+1)^0,c
  8434   003604  0E02               	movlw	2
  8435   003606  EC9E  F018         	call	_lcd_write
  8436   00360A  0012               	return		;funcret
  8437   00360C                     __end_of_lcd_clear:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function _lcd_write *****************
  8441 ;; Defined at:
  8442 ;;		line 77 in file "LCD4b_EXSTO.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  lin             1    wreg     unsigned char 
  8445 ;;  col             1    6[COMRAM] unsigned char 
  8446 ;;  str             2    7[COMRAM] PTR unsigned char 
  8447 ;;		 -> STR_12(16), STR_11(16), STR_10(16), STR_9(17), 
  8448 ;;		 -> STR_8(17), string_RES1(8), string_FAN2(8), string_FAN1(8), 
  8449 ;;		 -> STR_4(24), STR_3(24), string_percent(16), string_temp(16), 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  lin             1   10[COMRAM] unsigned char 
  8452 ;;  end             1    9[COMRAM] unsigned char 
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8462 ;;      Params:         3       0       0       0       0       0       0
  8463 ;;      Locals:         2       0       0       0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0
  8465 ;;      Totals:         5       0       0       0       0       0       0
  8466 ;;Total ram usage:        5 bytes
  8467 ;; Hardware stack levels used: 1
  8468 ;; Hardware stack levels required when called: 3
  8469 ;; This function calls:
  8470 ;;		_lcd_send_byte
  8471 ;; This function is called by:
  8472 ;;		_LCD_tela1
  8473 ;;		_LCD_tela2
  8474 ;;		_lcd_clear
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text39
  8479   00313C                     __ptext39:
  8480                           	callstack 0
  8481   00313C                     _lcd_write:
  8482                           	callstack 26
  8483                           
  8484                           ;incstack = 0
  8485                           ;lcd_write@lin stored from wreg
  8486   00313C  6E0B               	movwf	lcd_write@lin^0,c
  8487   00313E                     
  8488                           ;LCD4b_EXSTO.c: 77: void lcd_write(char lin, char col, char *str);LCD4b_EXSTO.c: 78: {;L
      +                          CD4b_EXSTO.c: 79:     char end;;LCD4b_EXSTO.c: 81:     if(lin == 1)
  8489   00313E  040B               	decf	lcd_write@lin^0,w,c
  8490   003140  A4D8               	btfss	status,2,c
  8491   003142  EFA5  F018         	goto	u4201
  8492   003146  EFA7  F018         	goto	u4200
  8493   00314A                     u4201:
  8494   00314A  EFAC  F018         	goto	l3689
  8495   00314E                     u4200:
  8496   00314E                     
  8497                           ;LCD4b_EXSTO.c: 82:     {;LCD4b_EXSTO.c: 83:         end = col + 0X80 - 1;
  8498   00314E  5007               	movf	lcd_write@col^0,w,c
  8499   003150  0F7F               	addlw	127
  8500   003152  6E0A               	movwf	lcd_write@end^0,c
  8501                           
  8502                           ;LCD4b_EXSTO.c: 84:     }
  8503   003154  EFB8  F018         	goto	l3693
  8504   003158                     l3689:
  8505   003158  0E02               	movlw	2
  8506   00315A  180B               	xorwf	lcd_write@lin^0,w,c
  8507   00315C  A4D8               	btfss	status,2,c
  8508   00315E  EFB3  F018         	goto	u4211
  8509   003162  EFB5  F018         	goto	u4210
  8510   003166                     u4211:
  8511   003166  EFB8  F018         	goto	l3693
  8512   00316A                     u4210:
  8513   00316A                     
  8514                           ;LCD4b_EXSTO.c: 86:     {;LCD4b_EXSTO.c: 87:         end = col + 0xC0 - 1;
  8515   00316A  5007               	movf	lcd_write@col^0,w,c
  8516   00316C  0FBF               	addlw	191
  8517   00316E  6E0A               	movwf	lcd_write@end^0,c
  8518   003170                     l3693:
  8519                           
  8520                           ;LCD4b_EXSTO.c: 89:     lcd_send_byte(0,end);
  8521   003170  C00A  F005         	movff	lcd_write@end,lcd_send_byte@data
  8522   003174  0E00               	movlw	0
  8523   003176  EC29  F01B         	call	_lcd_send_byte
  8524                           
  8525                           ;LCD4b_EXSTO.c: 91:     while(*str)
  8526   00317A  EFD5  F018         	goto	l3699
  8527   00317E                     l3695:
  8528                           
  8529                           ;LCD4b_EXSTO.c: 92:     {;LCD4b_EXSTO.c: 93:         lcd_send_byte(1,*str);
  8530   00317E  C008  FFF6         	movff	lcd_write@str,tblptrl
  8531   003182  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  8532   003186  6AF8               	clrf	tblptru,c
  8533   003188  0E05               	movlw	(high __ramtop+-1)
  8534   00318A  64F7               	cpfsgt	tblptrh,c
  8535   00318C  D003               	bra	u4227
  8536   00318E  0008               	tblrd		*
  8537   003190  50F5               	movf	tablat,w,c
  8538   003192  D005               	bra	u4220
  8539   003194                     u4227:
  8540   003194  CFF6 FFE1          	movff	tblptrl,fsr1l
  8541   003198  CFF7 FFE2          	movff	tblptrh,fsr1h
  8542   00319C  50E7               	movf	indf1,w,c
  8543   00319E                     u4220:
  8544   00319E  6E05               	movwf	lcd_send_byte@data^0,c
  8545   0031A0  0E01               	movlw	1
  8546   0031A2  EC29  F01B         	call	_lcd_send_byte
  8547   0031A6                     
  8548                           ;LCD4b_EXSTO.c: 94:         str++;
  8549   0031A6  4A08               	infsnz	lcd_write@str^0,f,c
  8550   0031A8  2A09               	incf	(lcd_write@str+1)^0,f,c
  8551   0031AA                     l3699:
  8552                           
  8553                           ;LCD4b_EXSTO.c: 91:     while(*str)
  8554   0031AA  C008  FFF6         	movff	lcd_write@str,tblptrl
  8555   0031AE  C009  FFF7         	movff	lcd_write@str+1,tblptrh
  8556   0031B2  6AF8               	clrf	tblptru,c
  8557   0031B4  0E05               	movlw	(high __ramtop+-1)
  8558   0031B6  64F7               	cpfsgt	tblptrh,c
  8559   0031B8  D003               	bra	u4237
  8560   0031BA  0008               	tblrd		*
  8561   0031BC  50F5               	movf	tablat,w,c
  8562   0031BE  D005               	bra	u4230
  8563   0031C0                     u4237:
  8564   0031C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8565   0031C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8566   0031C8  50E7               	movf	indf1,w,c
  8567   0031CA                     u4230:
  8568   0031CA  0900               	iorlw	0
  8569   0031CC  A4D8               	btfss	status,2,c
  8570   0031CE  EFEB  F018         	goto	u4241
  8571   0031D2  EFED  F018         	goto	u4240
  8572   0031D6                     u4241:
  8573   0031D6  EFBF  F018         	goto	l3695
  8574   0031DA                     u4240:
  8575   0031DA  0012               	return		;funcret
  8576   0031DC                     __end_of_lcd_write:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function _lcd_send_byte *****************
  8580 ;; Defined at:
  8581 ;;		line 63 in file "LCD4b_EXSTO.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  level           1    wreg     unsigned char 
  8584 ;;  data            1    4[COMRAM] unsigned char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  level           1    5[COMRAM] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2, status,0, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8596 ;;      Params:         1       0       0       0       0       0       0
  8597 ;;      Locals:         1       0       0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0
  8599 ;;      Totals:         2       0       0       0       0       0       0
  8600 ;;Total ram usage:        2 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; Hardware stack levels required when called: 2
  8603 ;; This function calls:
  8604 ;;		_lcd_cmd
  8605 ;; This function is called by:
  8606 ;;		_lcd_write
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text40
  8611   003652                     __ptext40:
  8612                           	callstack 0
  8613   003652                     _lcd_send_byte:
  8614                           	callstack 26
  8615                           
  8616                           ;incstack = 0
  8617                           ;lcd_send_byte@level stored from wreg
  8618   003652  6E06               	movwf	lcd_send_byte@level^0,c
  8619   003654                     
  8620                           ;LCD4b_EXSTO.c: 63: void lcd_send_byte(char level, char data);LCD4b_EXSTO.c: 64: {;LCD4b
      +                          _EXSTO.c: 65:     PORTEbits.RE0 = level;
  8621   003654  B006               	btfsc	lcd_send_byte@level^0,0,c
  8622   003656  D002               	bra	u4125
  8623   003658  9084               	bcf	132,0,c	;volatile
  8624   00365A  D001               	bra	u4126
  8625   00365C                     u4125:
  8626   00365C  8084               	bsf	132,0,c	;volatile
  8627   00365E                     u4126:
  8628   00365E                     
  8629                           ;LCD4b_EXSTO.c: 66:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8630   00365E  0E42               	movlw	66
  8631   003660                     u5207:
  8632   003660  2EE8               	decfsz	wreg,f,c
  8633   003662  D7FE               	bra	u5207
  8634   003664  D000               	nop2	
  8635   003666                     
  8636                           ;LCD4b_EXSTO.c: 67:     PORTEbits.RE2 = 0;
  8637   003666  9484               	bcf	132,2,c	;volatile
  8638   003668                     
  8639                           ;LCD4b_EXSTO.c: 68:     lcd_cmd(data);
  8640   003668  5005               	movf	lcd_send_byte@data^0,w,c
  8641   00366A  EC42  F015         	call	_lcd_cmd
  8642   00366E  0012               	return		;funcret
  8643   003670                     __end_of_lcd_send_byte:
  8644                           	callstack 0
  8645                           
  8646 ;; *************** function _lcd_cmd *****************
  8647 ;; Defined at:
  8648 ;;		line 42 in file "LCD4b_EXSTO.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  cmd             1    wreg     unsigned char 
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;  cmd             1    3[COMRAM] unsigned char 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  1    wreg      void 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2, status,0, cstack
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8662 ;;      Params:         0       0       0       0       0       0       0
  8663 ;;      Locals:         1       0       0       0       0       0       0
  8664 ;;      Temps:          1       0       0       0       0       0       0
  8665 ;;      Totals:         2       0       0       0       0       0       0
  8666 ;;Total ram usage:        2 bytes
  8667 ;; Hardware stack levels used: 1
  8668 ;; Hardware stack levels required when called: 1
  8669 ;; This function calls:
  8670 ;;		_set_bit
  8671 ;; This function is called by:
  8672 ;;		_lcd_init
  8673 ;;		_lcd_send_byte
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text41
  8678   002A84                     __ptext41:
  8679                           	callstack 0
  8680   002A84                     _lcd_cmd:
  8681                           	callstack 28
  8682                           
  8683                           ;incstack = 0
  8684                           ;lcd_cmd@cmd stored from wreg
  8685   002A84  6E04               	movwf	lcd_cmd@cmd^0,c
  8686   002A86                     
  8687                           ;LCD4b_EXSTO.c: 42: void lcd_cmd(char cmd);LCD4b_EXSTO.c: 43: {;LCD4b_EXSTO.c: 44:     P
      +                          ORTDbits.RD4 = set_bit(cmd, 0b00010000);
  8688   002A86  0E10               	movlw	16
  8689   002A88  6E01               	movwf	set_bit@comp^0,c
  8690   002A8A  5004               	movf	lcd_cmd@cmd^0,w,c
  8691   002A8C  EC19  F01B         	call	_set_bit
  8692   002A90  6E03               	movwf	??_lcd_cmd^0,c
  8693   002A92  3A03               	swapf	??_lcd_cmd^0,f,c
  8694   002A94  5083               	movf	131,w,c	;volatile
  8695   002A96  1803               	xorwf	??_lcd_cmd^0,w,c
  8696   002A98  0BEF               	andlw	-17
  8697   002A9A  1803               	xorwf	??_lcd_cmd^0,w,c
  8698   002A9C  6E83               	movwf	131,c	;volatile
  8699                           
  8700                           ;LCD4b_EXSTO.c: 45:     PORTDbits.RD5 = set_bit(cmd, 0b00100000);
  8701   002A9E  0E20               	movlw	32
  8702   002AA0  6E01               	movwf	set_bit@comp^0,c
  8703   002AA2  5004               	movf	lcd_cmd@cmd^0,w,c
  8704   002AA4  EC19  F01B         	call	_set_bit
  8705   002AA8  6E03               	movwf	??_lcd_cmd^0,c
  8706   002AAA  3A03               	swapf	??_lcd_cmd^0,f,c
  8707   002AAC  4603               	rlncf	??_lcd_cmd^0,f,c
  8708   002AAE  5083               	movf	131,w,c	;volatile
  8709   002AB0  1803               	xorwf	??_lcd_cmd^0,w,c
  8710   002AB2  0BDF               	andlw	-33
  8711   002AB4  1803               	xorwf	??_lcd_cmd^0,w,c
  8712   002AB6  6E83               	movwf	131,c	;volatile
  8713                           
  8714                           ;LCD4b_EXSTO.c: 46:     PORTDbits.RD6 = set_bit(cmd, 0b01000000);
  8715   002AB8  0E40               	movlw	64
  8716   002ABA  6E01               	movwf	set_bit@comp^0,c
  8717   002ABC  5004               	movf	lcd_cmd@cmd^0,w,c
  8718   002ABE  EC19  F01B         	call	_set_bit
  8719   002AC2  6E03               	movwf	??_lcd_cmd^0,c
  8720   002AC4  3A03               	swapf	??_lcd_cmd^0,f,c
  8721   002AC6  4603               	rlncf	??_lcd_cmd^0,f,c
  8722   002AC8  4603               	rlncf	??_lcd_cmd^0,f,c
  8723   002ACA  5083               	movf	131,w,c	;volatile
  8724   002ACC  1803               	xorwf	??_lcd_cmd^0,w,c
  8725   002ACE  0BBF               	andlw	-65
  8726   002AD0  1803               	xorwf	??_lcd_cmd^0,w,c
  8727   002AD2  6E83               	movwf	131,c	;volatile
  8728                           
  8729                           ;LCD4b_EXSTO.c: 47:     PORTDbits.RD7 = set_bit(cmd, 0b10000000);
  8730   002AD4  0E80               	movlw	128
  8731   002AD6  6E01               	movwf	set_bit@comp^0,c
  8732   002AD8  5004               	movf	lcd_cmd@cmd^0,w,c
  8733   002ADA  EC19  F01B         	call	_set_bit
  8734   002ADE  6E03               	movwf	??_lcd_cmd^0,c
  8735   002AE0  3203               	rrcf	??_lcd_cmd^0,f,c
  8736   002AE2  3203               	rrcf	??_lcd_cmd^0,f,c
  8737   002AE4  5083               	movf	131,w,c	;volatile
  8738   002AE6  1803               	xorwf	??_lcd_cmd^0,w,c
  8739   002AE8  0B7F               	andlw	-129
  8740   002AEA  1803               	xorwf	??_lcd_cmd^0,w,c
  8741   002AEC  6E83               	movwf	131,c	;volatile
  8742   002AEE                     
  8743                           ;LCD4b_EXSTO.c: 49:     PORTEbits.RE2 = 1;
  8744   002AEE  8484               	bsf	132,2,c	;volatile
  8745   002AF0                     
  8746                           ;LCD4b_EXSTO.c: 50:     PORTEbits.RE2 = 0;
  8747   002AF0  9484               	bcf	132,2,c	;volatile
  8748   002AF2                     
  8749                           ;LCD4b_EXSTO.c: 52:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8750   002AF2  0E42               	movlw	66
  8751   002AF4                     u5217:
  8752   002AF4  2EE8               	decfsz	wreg,f,c
  8753   002AF6  D7FE               	bra	u5217
  8754   002AF8  D000               	nop2	
  8755   002AFA                     
  8756                           ;LCD4b_EXSTO.c: 54:     PORTDbits.RD4 = set_bit(cmd, 0b00000001);
  8757   002AFA  0E01               	movlw	1
  8758   002AFC  6E01               	movwf	set_bit@comp^0,c
  8759   002AFE  5004               	movf	lcd_cmd@cmd^0,w,c
  8760   002B00  EC19  F01B         	call	_set_bit
  8761   002B04  6E03               	movwf	??_lcd_cmd^0,c
  8762   002B06  3A03               	swapf	??_lcd_cmd^0,f,c
  8763   002B08  5083               	movf	131,w,c	;volatile
  8764   002B0A  1803               	xorwf	??_lcd_cmd^0,w,c
  8765   002B0C  0BEF               	andlw	-17
  8766   002B0E  1803               	xorwf	??_lcd_cmd^0,w,c
  8767   002B10  6E83               	movwf	131,c	;volatile
  8768   002B12                     
  8769                           ;LCD4b_EXSTO.c: 55:     PORTDbits.RD5 = set_bit(cmd, 0b00000010);
  8770   002B12  0E02               	movlw	2
  8771   002B14  6E01               	movwf	set_bit@comp^0,c
  8772   002B16  5004               	movf	lcd_cmd@cmd^0,w,c
  8773   002B18  EC19  F01B         	call	_set_bit
  8774   002B1C  6E03               	movwf	??_lcd_cmd^0,c
  8775   002B1E  3A03               	swapf	??_lcd_cmd^0,f,c
  8776   002B20  4603               	rlncf	??_lcd_cmd^0,f,c
  8777   002B22  5083               	movf	131,w,c	;volatile
  8778   002B24  1803               	xorwf	??_lcd_cmd^0,w,c
  8779   002B26  0BDF               	andlw	-33
  8780   002B28  1803               	xorwf	??_lcd_cmd^0,w,c
  8781   002B2A  6E83               	movwf	131,c	;volatile
  8782   002B2C                     
  8783                           ;LCD4b_EXSTO.c: 56:     PORTDbits.RD6 = set_bit(cmd, 0b00000100);
  8784   002B2C  0E04               	movlw	4
  8785   002B2E  6E01               	movwf	set_bit@comp^0,c
  8786   002B30  5004               	movf	lcd_cmd@cmd^0,w,c
  8787   002B32  EC19  F01B         	call	_set_bit
  8788   002B36  6E03               	movwf	??_lcd_cmd^0,c
  8789   002B38  3A03               	swapf	??_lcd_cmd^0,f,c
  8790   002B3A  4603               	rlncf	??_lcd_cmd^0,f,c
  8791   002B3C  4603               	rlncf	??_lcd_cmd^0,f,c
  8792   002B3E  5083               	movf	131,w,c	;volatile
  8793   002B40  1803               	xorwf	??_lcd_cmd^0,w,c
  8794   002B42  0BBF               	andlw	-65
  8795   002B44  1803               	xorwf	??_lcd_cmd^0,w,c
  8796   002B46  6E83               	movwf	131,c	;volatile
  8797   002B48                     
  8798                           ;LCD4b_EXSTO.c: 57:     PORTDbits.RD7 = set_bit(cmd, 0b00001000);
  8799   002B48  0E08               	movlw	8
  8800   002B4A  6E01               	movwf	set_bit@comp^0,c
  8801   002B4C  5004               	movf	lcd_cmd@cmd^0,w,c
  8802   002B4E  EC19  F01B         	call	_set_bit
  8803   002B52  6E03               	movwf	??_lcd_cmd^0,c
  8804   002B54  3203               	rrcf	??_lcd_cmd^0,f,c
  8805   002B56  3203               	rrcf	??_lcd_cmd^0,f,c
  8806   002B58  5083               	movf	131,w,c	;volatile
  8807   002B5A  1803               	xorwf	??_lcd_cmd^0,w,c
  8808   002B5C  0B7F               	andlw	-129
  8809   002B5E  1803               	xorwf	??_lcd_cmd^0,w,c
  8810   002B60  6E83               	movwf	131,c	;volatile
  8811   002B62                     
  8812                           ;LCD4b_EXSTO.c: 59:     PORTEbits.RE2 = 1;
  8813   002B62  8484               	bsf	132,2,c	;volatile
  8814   002B64                     
  8815                           ;LCD4b_EXSTO.c: 60:     PORTEbits.RE2 = 0;
  8816   002B64  9484               	bcf	132,2,c	;volatile
  8817   002B66  0012               	return		;funcret
  8818   002B68                     __end_of_lcd_cmd:
  8819                           	callstack 0
  8820                           
  8821 ;; *************** function _set_bit *****************
  8822 ;; Defined at:
  8823 ;;		line 36 in file "LCD4b_EXSTO.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  cmd             1    wreg     unsigned char 
  8826 ;;  comp            1    0[COMRAM] unsigned char 
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;  cmd             1    1[COMRAM] unsigned char 
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  1    wreg      unsigned char 
  8831 ;; Registers used:
  8832 ;;		wreg, status,2, status,0
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8838 ;;      Params:         1       0       0       0       0       0       0
  8839 ;;      Locals:         1       0       0       0       0       0       0
  8840 ;;      Temps:          0       0       0       0       0       0       0
  8841 ;;      Totals:         2       0       0       0       0       0       0
  8842 ;;Total ram usage:        2 bytes
  8843 ;; Hardware stack levels used: 1
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_lcd_cmd
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text42
  8852   003632                     __ptext42:
  8853                           	callstack 0
  8854   003632                     _set_bit:
  8855                           	callstack 28
  8856                           
  8857                           ;incstack = 0
  8858                           ;set_bit@cmd stored from wreg
  8859   003632  6E02               	movwf	set_bit@cmd^0,c
  8860   003634                     
  8861                           ;LCD4b_EXSTO.c: 36: char set_bit(char cmd, char comp);LCD4b_EXSTO.c: 37: {;LCD4b_EXSTO.c
      +                          : 38:     if((cmd & comp) >= 1) return 1;
  8862   003634  5002               	movf	set_bit@cmd^0,w,c
  8863   003636  1401               	andwf	set_bit@comp^0,w,c
  8864   003638  0900               	iorlw	0
  8865   00363A  B4D8               	btfsc	status,2,c
  8866   00363C  EF22  F01B         	goto	u2691
  8867   003640  EF24  F01B         	goto	u2690
  8868   003644                     u2691:
  8869   003644  EF27  F01B         	goto	l2717
  8870   003648                     u2690:
  8871   003648  0E01               	movlw	1
  8872   00364A  EF28  F01B         	goto	l132
  8873   00364E                     l2717:
  8874   00364E  0E00               	movlw	0
  8875   003650                     l132:
  8876   003650  0012               	return		;funcret
  8877   003652                     __end_of_set_bit:
  8878                           	callstack 0
  8879                           
  8880                           	psect	rparam
  8881   000000                     
  8882                           	psect	config
  8883                           
  8884                           ; Padding undefined space
  8885   300000                     	org	3145728
  8886   300000  FF                 	db	255
  8887                           
  8888                           ;Config register CONFIG1H @ 0x300001
  8889                           ;	Oscillator Selection bits
  8890                           ;	OSC = HS, HS oscillator
  8891                           ;	Fail-Safe Clock Monitor Enable bit
  8892                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8893                           ;	Internal/External Oscillator Switchover bit
  8894                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8895   300001                     	org	3145729
  8896   300001  02                 	db	2
  8897                           
  8898                           ;Config register CONFIG2L @ 0x300002
  8899                           ;	Power-up Timer Enable bit
  8900                           ;	PWRT = OFF, PWRT disabled
  8901                           ;	Brown-out Reset Enable bits
  8902                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8903                           ;	Brown Out Reset Voltage bits
  8904                           ;	BORV = 3, Minimum setting
  8905   300002                     	org	3145730
  8906   300002  19                 	db	25
  8907                           
  8908                           ;Config register CONFIG2H @ 0x300003
  8909                           ;	Watchdog Timer Enable bit
  8910                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8911                           ;	Watchdog Timer Postscale Select bits
  8912                           ;	WDTPS = 32768, 1:32768
  8913   300003                     	org	3145731
  8914   300003  1E                 	db	30
  8915                           
  8916                           ; Padding undefined space
  8917   300004                     	org	3145732
  8918   300004  FF                 	db	255
  8919                           
  8920                           ;Config register CONFIG3H @ 0x300005
  8921                           ;	CCP2 MUX bit
  8922                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8923                           ;	PORTB A/D Enable bit
  8924                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8925                           ;	Low-Power Timer1 Oscillator Enable bit
  8926                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8927                           ;	MCLR Pin Enable bit
  8928                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8929   300005                     	org	3145733
  8930   300005  81                 	db	129
  8931                           
  8932                           ;Config register CONFIG4L @ 0x300006
  8933                           ;	Stack Full/Underflow Reset Enable bit
  8934                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8935                           ;	Single-Supply ICSP Enable bit
  8936                           ;	LVP = OFF, Single-Supply ICSP disabled
  8937                           ;	Extended Instruction Set Enable bit
  8938                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8939                           ;	Background Debugger Enable bit
  8940                           ;	DEBUG = 0x1, unprogrammed default
  8941   300006                     	org	3145734
  8942   300006  81                 	db	129
  8943                           
  8944                           ; Padding undefined space
  8945   300007                     	org	3145735
  8946   300007  FF                 	db	255
  8947                           
  8948                           ;Config register CONFIG5L @ 0x300008
  8949                           ;	Code Protection bit
  8950                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8951                           ;	Code Protection bit
  8952                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8953                           ;	Code Protection bit
  8954                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8955                           ;	Code Protection bit
  8956                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8957   300008                     	org	3145736
  8958   300008  0F                 	db	15
  8959                           
  8960                           ;Config register CONFIG5H @ 0x300009
  8961                           ;	Boot Block Code Protection bit
  8962                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8963                           ;	Data EEPROM Code Protection bit
  8964                           ;	CPD = OFF, Data EEPROM not code-protected
  8965   300009                     	org	3145737
  8966   300009  C0                 	db	192
  8967                           
  8968                           ;Config register CONFIG6L @ 0x30000A
  8969                           ;	Write Protection bit
  8970                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8971                           ;	Write Protection bit
  8972                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8973                           ;	Write Protection bit
  8974                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8975                           ;	Write Protection bit
  8976                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8977   30000A                     	org	3145738
  8978   30000A  0F                 	db	15
  8979                           
  8980                           ;Config register CONFIG6H @ 0x30000B
  8981                           ;	Configuration Register Write Protection bit
  8982                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8983                           ;	Boot Block Write Protection bit
  8984                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8985                           ;	Data EEPROM Write Protection bit
  8986                           ;	WRTD = OFF, Data EEPROM not write-protected
  8987   30000B                     	org	3145739
  8988   30000B  E0                 	db	224
  8989                           
  8990                           ;Config register CONFIG7L @ 0x30000C
  8991                           ;	Table Read Protection bit
  8992                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8993                           ;	Table Read Protection bit
  8994                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8995                           ;	Table Read Protection bit
  8996                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8997                           ;	Table Read Protection bit
  8998                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8999   30000C                     	org	3145740
  9000   30000C  0F                 	db	15
  9001                           
  9002                           ;Config register CONFIG7H @ 0x30000D
  9003                           ;	Boot Block Table Read Protection bit
  9004                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9005   30000D                     	org	3145741
  9006   30000D  40                 	db	64
  9007                           tosu	equ	0xFFF
  9008                           tosh	equ	0xFFE
  9009                           tosl	equ	0xFFD
  9010                           stkptr	equ	0xFFC
  9011                           pclatu	equ	0xFFB
  9012                           pclath	equ	0xFFA
  9013                           pcl	equ	0xFF9
  9014                           tblptru	equ	0xFF8
  9015                           tblptrh	equ	0xFF7
  9016                           tblptrl	equ	0xFF6
  9017                           tablat	equ	0xFF5
  9018                           prodh	equ	0xFF4
  9019                           prodl	equ	0xFF3
  9020                           indf0	equ	0xFEF
  9021                           postinc0	equ	0xFEE
  9022                           postdec0	equ	0xFED
  9023                           preinc0	equ	0xFEC
  9024                           plusw0	equ	0xFEB
  9025                           fsr0h	equ	0xFEA
  9026                           fsr0l	equ	0xFE9
  9027                           wreg	equ	0xFE8
  9028                           indf1	equ	0xFE7
  9029                           postinc1	equ	0xFE6
  9030                           postdec1	equ	0xFE5
  9031                           preinc1	equ	0xFE4
  9032                           plusw1	equ	0xFE3
  9033                           fsr1h	equ	0xFE2
  9034                           fsr1l	equ	0xFE1
  9035                           bsr	equ	0xFE0
  9036                           indf2	equ	0xFDF
  9037                           postinc2	equ	0xFDE
  9038                           postdec2	equ	0xFDD
  9039                           preinc2	equ	0xFDC
  9040                           plusw2	equ	0xFDB
  9041                           fsr2h	equ	0xFDA
  9042                           fsr2l	equ	0xFD9
  9043                           status	equ	0xFD8

Data Sizes:
    Strings     126
    Constant    0
    Data        0
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    118     127
    BANK0           128     56     120
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_write@str	PTR unsigned char  size(2) Largest target is 24
		 -> STR_10(CODE[16]), STR_11(CODE[16]), STR_12(CODE[16]), STR_3(CODE[24]), 
		 -> STR_4(CODE[24]), STR_8(CODE[17]), STR_9(CODE[17]), string_FAN1(BANK0[8]), 
		 -> string_FAN2(BANK0[8]), string_percent(BANK1[16]), string_RES1(BANK0[8]), string_temp(BANK0[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1014$buffer	PTR unsigned char  size(2) Largest target is 0

    S1014$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_2(CODE[8]), STR_5(CODE[3]), STR_6(CODE[3]), 
		 -> STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> string_FAN1(BANK0[8]), string_FAN2(BANK0[8]), string_percent(BANK1[16]), string_RES1(BANK0[8]), 
		 -> string_temp(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_13(CODE[4]), STR_16(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_2(CODE[8]), STR_5(CODE[3]), STR_6(CODE[3]), 
		 -> STR_7(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_2(CODE[8]), STR_5(CODE[3]), STR_6(CODE[3]), 
		 -> STR_7(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_2(CODE[8]), STR_5(CODE[3]), STR_6(CODE[3]), 
		 -> STR_7(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_tela1
    _main->_LCD_tela2
    _logica_controle->___flge
    _lcd_init->_lcd_cmd
    _conv_TEMP->___fldiv
    _LCD_tela2->_sprintf
    _LCD_tela1->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_clear->_lcd_write
    _lcd_write->_lcd_send_byte
    _lcd_send_byte->_lcd_cmd
    _lcd_cmd->_set_bit

Critical Paths under _main in BANK0

    _LCD_tela2->_sprintf
    _LCD_tela1->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   84367
                          _LCD_tela1
                          _LCD_tela2
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN3
                          _conv_TEMP
                           _lcd_init
                    _logica_controle
 ---------------------------------------------------------------------------------
 (1) _logica_controle                                      0     0      0    1702
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _conv_TEMP                                            0     0      0    5517
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _conv_AN3                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_tela2                                            1     1      0   38137
                                            117 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _LCD_tela1                                            1     1      0   38137
                                            117 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    15      9   32127
                                            104 COMRAM    13    13      0
                                             47 BANK0      9     0      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   30897
                                            103 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   30382
                                             92 COMRAM    11     8      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   22305
                                             84 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1702
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    5085
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3263
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1154
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0    3005
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            5     2      3    3005
                                              6 COMRAM     5     2      3
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_tela1
     _lcd_clear
       _lcd_write
         _lcd_send_byte
           _lcd_cmd
             _set_bit
     _lcd_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _LCD_tela2
     _lcd_clear
     _lcd_write
     _sprintf
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN3
   _conv_TEMP
     ___fldiv
     ___flmul
     ___xxtofl
   _lcd_init
     _lcd_cmd
   _logica_controle
     ___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     38      78       5       93.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     76      7F       1      100.0%
BITBIGSFRh          2C      0       0      16        0.0%
BITBIGSFRlhl        24      0       0      18        0.0%
BITBIGSFRlhhh        E      0       0      17        0.0%
BITBIGSFRlllh        E      0       0      20        0.0%
BITBIGSFRllh         4      0       0      19        0.0%
BITBIGSFRllll        1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     157      22        0.0%
DATA                 0      0     157       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Sep 27 09:24:19 2024

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l71 368E                          l80 2C3A                          l65 3698  
                        l74 358E                          l90 2416                          l68 3680  
                        l76 359C                          l93 2F3A                          l77 35AE  
                        l86 23F2                          l96 2D08              ?_lcd_send_byte 0005  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l102 33B8  
                       l132 3650                         l142 360A                         l151 31DA  
                       l136 2B66                         l128 3278                         l154 3630  
                       l139 366E                         l413 3094                         l424 2984  
                       l419 293E                         l451 2880                         l428 3548  
                       l385 2DCC                         l708 14AC                         l724 3416  
                       l900 0A06                         l812 25CA                         l741 1B7A  
                       l709 149A                         l398 2FEA                         l750 1C62  
                       l902 084C                         l823 2562                         l736 1D56  
                       l832 3456                         l816 2506                         l809 246E  
                       l738 1BB6                         l682 12C2                         l930 0E50  
                       l747 1BFC                         l691 1592                         l683 12B0  
                       l772 19BC                         l684 1276                         l861 3290  
                       l749 1C74                         l870 260A                         l775 184E  
                       l872 2612                         l768 1658                         l952 313A  
                       l865 32DE                         l873 2658                         l785 197E  
                       l777 18C6                         l778 18B4                         l699 13DC  
                       l948 3132                         l965 203A                         l886 277A  
                       l990 3496                         l897 10D2                         _abs 354A  
                       _pad 327A                ___awmod@sign 0006                         wreg 0FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                ___fltol@exp1 000A  
                      l1000 2A82                        l1005 3564                        l1014 224C  
                      l1008 357C                        l1017 2190                        l1034 3384  
                      ?_abs 0007                        l1028 3334                        l1046 2E86  
                      l1054 34D6                        l1063 3510                        l3001 2D0A  
                      l1057 369A                        l3011 2D36                        l3003 2D0E  
                      l3021 2D64                        l3013 2D3E                        l3005 2D1C  
                      l3101 28C0                        l3031 2D9E                        l3023 2D6C  
                      l3015 2D42                        l3007 2D24                        l3111 292C  
                      l3103 28EE                        l3041 2DC4                        l3033 2DA0  
                      l3025 2D7A                        l3017 2D4A                        l3009 2D28  
                      l3113 297C                        l3105 28FE                        l3121 3528  
                      l3201 2A36                        l4001 06FE                        l3035 2DA6  
                      l3027 2D80                        l3019 2D5C                        l3051 2F56  
                      l3115 2982                        l3107 290C                        l3123 3538  
                      l4011 074E                        l4003 070A                        l3029 2D96  
                      l3037 2DAC                        l3061 2F8A                        l3053 2F5A  
                      l3045 2F3C                        l3109 291E                        l2501 10E0  
                      l3141 27E6                        l3133 27A6                        l3205 2A7A  
                      l3221 203C                        l3213 32E0                        l4101 0B7A  
                      l4021 077E                        l4013 0752                        l4005 0712  
                      l3039 2DBC                        l3071 2FC4                        l3063 2F92  
                      l3055 2F68                        l3047 2F40                        l3119 3512  
                      l2511 1120                        l2503 10EE                        l3151 2816  
                      l3143 27F4                        l3135 27D0                        l3127 277C  
                      l3223 205C                        l3215 32EE                        l4111 0C38  
                      l4103 0BAE                        l4031 07D6                        l4015 0758  
                      l4007 0716                        l2351 3670                        l3065 2FA0  
                      l3073 2FCA                        l3057 2F70                        l3049 2F4E  
                      l3081 2FEC                        l2601 12E0                        l2521 1152  
                      l2513 1122                        l2505 10F0                        l3161 2840  
                      l3153 2820                        l3137 27D2                        l3129 2792  
                      l3241 2204                        l3233 2144                        l3225 20B2  
                      l3217 3302                        l4201 1046                        l4121 0CD4  
                      l4113 0C4E                        l4105 0BB4                        l4033 07DC  
                      l4017 0760                        l4009 073C                        l4025 079A  
                      l2353 3682                        l3075 2FDA                        l3067 2FB6  
                      l3059 2F82                        l3091 308C                        l3083 301A  
                      l2611 1320                        l2531 117A                        l2523 1154  
                      l2507 1100                        l2515 112A                        l3163 2850  
                      l3139 27E2                        l3243 222C                        l3235 2180  
                      l3227 20C6                        l4211 10AE                        l4203 104C  
                      l4123 0D2A                        l4131 0D7C                        l4115 0C80  
                      l4107 0BD2                        l4051 0862                        l4035 07E4  
                      l4027 07C0                        l4043 07FC                        l4019 0774  
                      l2355 357E                        l3261 2A86                        l3077 2FE2  
                      l3069 2FBE                        l3093 3092                        l3085 302A  
                      l2621 134A                        l2613 132C                        l2605 12F4  
                      l2541 11B4                        l2533 118A                        l2525 115A  
                      l2517 113A                        l2509 1110                        l3165 2860  
                      l3149 280C                        l3245 223C                        l3229 20D4  
                      l3237 21B4                        l4213 10B6                        l4205 106A  
                      l4141 0DAE                        l4133 0D8C                        l4125 0D30  
                      l4117 0C90                        l4109 0C06                        l4061 0958  
                      l4053 0896                        l4045 0816                        l4029 07D2  
                      l4301 1FF4                        l4221 1D82                        l2349 3690  
                      l2357 358C                        l2711 3648                        l3271 2B12  
                      l3263 2AEE                        l3183 354A                        l3087 3058  
                      l2631 13BC                        l2615 1330                        l2607 1304  
                      l2623 1350                        l2551 11E0                        l2543 11C6  
                      l2535 119A                        l2527 1168                        l2519 1140  
                      l3167 2870                        l3159 2834                        l3191 29E4  
                      l3239 21F0                        l4207 1088                        l4151 0E80  
                      l4143 0E26                        l4135 0D94                        l4127 0D64  
                      l4119 0CA0                        l4071 0A0E                        l4063 098C  
                      l4055 08D4                        l4303 200C                        l4231 1DAA  
                      l4223 1D90                        l2359 35A2                        l3273 2B2C  
                      l3265 2AF0                        l3185 3558                        l2801 1B78  
                      l3089 3068                        l3097 2882                        l2641 1416  
                      l2625 1376                        l2633 13CC                        l2617 133E  
                      l2609 1312                        l2561 11F4                        l2553 11E4  
                      l2545 11D4                        l2537 119C                        l2529 116A  
                      l3193 2A0C                        l4209 1098                        l4161 0EA6  
                      l4153 0E84                        l4145 0E46                        l4137 0D9A  
                      l4129 0D78                        l4081 0A40                        l4073 0A1C  
                      l4065 0994                        l4057 0906                        l4049 085C  
                      l2721 360C                        l4241 1E02                        l4225 1D94  
                      l4217 1D58                        l4313 3458                        l3275 2B48  
                      l3267 2AF2                        l2491 2DF8                        l2811 1BC6  
                      l2803 1B84                        l2731 19D8                        l3099 28B0  
                      l2651 1446                        l2643 1420                        l2635 13F2  
                      l2627 13AA                        l2619 1340                        l2571 1208  
                      l2563 11F8                        l2555 11E8                        l2547 11D8  
                      l2539 11A4                        l3195 2A18                        l3187 2986  
                      l4171 0EDA                        l4163 0EAC                        l4155 0E8A  
                      l4147 0E62                        l4139 0DA2                        l4083 0A52  
                      l4091 0A92                        l4075 0A28                        l4059 0944  
                      l2723 3628                        l4251 1E5C                        l4243 1E0A  
                      l4235 1DB2                        l4227 1D9C                        l4219 1D7A  
                      l4307 2018                        l4315 3460                        l4331 3446  
                      l4323 3418                        l2717 364E                        l2709 3634  
                      l3277 2B62                        l3269 2AFA                        l2493 2E14  
                      l2485 2DCE                        l2813 1BDC                        l2821 1C0C  
                      l2805 1BA2                        l2741 1A0C                        l2733 19DA  
                      l2901 1678                        l2661 146E                        l2653 144A  
                      l2645 142E                        l2637 1402                        l2629 13AC  
                      l2581 1242                        l2573 120C                        l2565 11FC  
                      l2557 11EC                        l2549 11DC                        l3189 29A6  
                      l4173 0EE0                        l4157 0E92                        l4149 0E70  
                      l4165 0EB2                        l4181 0F78                        l4093 0A9A  
                      l4085 0A60                        l4077 0A32                        l4069 09D4  
                      l4261 1EB0                        l4245 1E1E                        l4229 1D9E  
                      l4237 1DD0                        l4317 3470                        l4325 3424  
                      l4341 2EEC                        l3279 2B64                        l2495 2E46  
                      l2487 2DDE                        l2823 1C1A                        l2815 1BE2  
                      l2807 1BA4                        l2751 1A3E                        l2735 19EA  
                      l2743 1A14                        l2727 19BE                        l2911 16B8  
                      l2671 14C8                        l2663 147C                        l2655 145A  
                      l2647 1430                        l2591 1294                        l2583 125E  
                      l2575 1210                        l2567 1200                        l2559 11F0  
                      l3199 2A24                        l4191 0FF8                        l4183 0F96  
                      l4175 0F38                        l4167 0EC4                        l4159 0EA2  
                      l4095 0AAA                        l4087 0A78                        l4079 0A3A  
                      l4271 1EF0                        l4263 1EC8                        l4247 1E40  
                      l4255 1E6E                        l4239 1DE0                        l4319 348C  
                      l4327 342C                        l4343 2F02                        l4335 2E88  
                      l4351 2C84                        l2489 2DEE                        l2833 1C84  
                      l2841 1CCC                        l2825 1C1E                        l2817 1BEC  
                      l2809 1BB4                        l2761 1A72                        l2753 1A40  
                      l2745 1A24                        l2737 19FA                        l2729 19CA  
                      l2921 1702                        l2913 16C4                        l2905 168C  
                      l2681 1532                        l2673 14D6                        l2665 1492  
                      l2649 143E                        l2657 145C                        l2593 12A2  
                      l2585 126E                        l2569 1204                        l2577 1214  
                      l4193 1006                        l4185 0FB2                        l4177 0F6C  
                      l4169 0ED6                        l4097 0ABE                        l4089 0A8A  
                      l4273 1F02                        l4281 1F18                        l4265 1ED2  
                      l4257 1E78                        l4249 1E48                        l4329 3434  
                      l4345 2F12                        l4337 2EDA                        l4361 2CD2  
                      l4353 2C88                        l3801 240A                        l3723 35DE  
                      l2851 1D36                        l2843 1CE6                        l2835 1C90  
                      l2827 1C2C                        l2819 1BFA                        l2771 1AB8  
                      l2755 1A50                        l2763 1A7A                        l2747 1A2A  
                      l2739 1A0A                        l2931 1754                        l2923 170E  
                      l2915 16DC                        l2907 1698                        l2691 156C  
                      l2683 1552                        l2675 1510                        l2659 146A  
                      l2595 12A4                        l2587 1284                        l2579 1218  
                      l2499 10D4                        l4195 101E                        l4187 0FBA  
                      l4179 0F74                        l4099 0B22                        l3571 30C0  
                      l4291 1FA6                        l4275 1F08                        l4283 1F36  
                      l4259 1E94                        l4347 2F28                        l4339 2EDE  
                      l4363 2CE2                        l4355 2C96                        l3731 247E  
                      l4371 3396                        l3581 3654                        l3901 34B6  
                      l2853 1D44                        l2845 1CFC                        l2837 1C9E  
                      l2829 1C5A                        l2781 1AE0                        l2773 1ABC  
                      l2765 1A8A                        l2757 1A60                        l2749 1A30  
                      l2941 17D2                        l2933 1764                        l2925 171E  
                      l2917 16E8                        l2909 16A2                        l2693 1572  
                      l2685 1556                        l2669 14BC                        l2677 1512  
                      l2597 12AE                        l2589 1290                        l4189 0FC8  
                      l3573 30C8                        l4293 1FBC                        l4285 1F56  
                      l4277 1F10                        l4269 1EE6                        l4365 2CF8  
                      l4357 2CAC                        l4349 2C3C                        l3741 24BC  
                      l3733 2494                        l3725 241A                        l4381 33C6  
                      l4373 339A                        ?_pad 000F                        l3583 365E  
                      l3911 32B0                        l3903 327A                        l2855 1D4A  
                      l2847 1D16                        l2839 1CC8                        l2791 1B2E  
                      l2767 1AA0                        l2759 1A70                        l2951 184C  
                      l2943 1808                        l2935 1780                        l2927 172A  
                      l2919 16F4                        l2871 15B0                        l2695 1580  
                      l2687 1564                        l2679 1522                        l2599 12D0  
                      l4199 1030                        l3575 30E4                        l3567 3096  
                      l4295 1FCA                        l4287 1F7E                        l4359 2CBC  
                      l3751 2544                        l3743 24EE                        l3727 242A  
                      l4375 339E                        l4367 3386                        l3585 3666  
                      l3913 32CE                        l3905 3288                        l2857 1D4C  
                      l2849 1D32                        l2793 1B3E                        l2785 1AF4  
                      l2769 1AB0                        l2777 1AD0                        l2961 18AC  
                      l2953 185E                        l2945 1816                        l2937 178C  
                      l2929 173A                        l2881 15F6                        l2873 15C0  
                      l2865 1594                        l2697 1582                        l2689 156A  
                      l3921 334A                        l3577 3104                        l3569 309E  
                      l3761 259A                        l3753 2552                        l3745 24F0  
                      l3737 24A8                        l3729 2438                        l3841 31E4  
                      l4377 33A2                        l4369 3392                        l3587 3668  
                      l3691 316A                        l3907 329C                        l3931 25CC  
                      l2795 1B46                        l2787 1B0E                        l2779 1AE0  
                      l2971 191A                        l2955 186C                        l2947 1834  
                      l2939 17A8                        l2891 1622                        l2883 15FC  
                      l2875 15D0                        l2867 15A0                        l3923 3356  
                      l3915 34D8                        l3579 310C                        l3763 25AA  
                      l3755 2570                        l3747 24FC                        l3739 24B0  
                      l3771 2B68                        l3851 3200                        l3843 31EA  
                      l3835 31DC                        l4379 33B0                        l3693 3170  
                      l3685 313E                        l3909 32AC                        l3941 262A  
                      l3933 25EE                        l2797 1B56                        l2789 1B1E  
                      l2981 1982                        l2965 18D6                        l2973 191E  
                      l2957 1870                        l2949 183E                        l2893 1632  
                      l2885 1602                        l2877 15E0                        l2869 15AE  
                      l3925 335A                        l3917 34E0                        l3765 25B8  
                      l3757 2572                        l3749 2538                        l3773 2BAE  
                      l3861 3218                        l3845 31EC                        l3837 31E0  
                      l3781 229E                        l3695 317E                        l3687 314E  
                      l3951 2660                        l3943 2630                        l3935 25F0  
                      l2799 1B6A                        l2991 19AC                        l2983 1992  
                      l2975 1938                        l2967 18E2                        l2959 187E  
                      l2895 1642                        l2887 1610                        l2879 15E6  
                      l3927 3366                        l3919 3336                        l3767 25BA  
                      l3759 2576                        l3775 2BE2                        l3871 3246  
                      l3863 321A                        l3847 31EE                        l3839 31E2  
                      l3791 2384                        l3783 22D0                        l3697 31A6  
                      l3689 3158                        l3961 26AE                        l3953 266A  
                      l3945 2640                        l3937 25FE                        l2985 19A0  
                      l2977 194C                        l2969 18F0                        l2897 1648  
                      l2889 1612                        l3929 336A                        l3873 324C  
                      l3865 322A                        l3857 3204                        l3849 31F0  
                      l3793 23A2                        l3785 2302                        l3777 224E  
                      l3699 31AA                        l3971 272A                        l3955 2670  
                      l3963 26CA                        l3947 264C                        l3939 261A  
                      l2987 19A2                        l2979 1966                        l2899 1668  
                      l2995 33D2                        l3875 3262                        l3867 3230  
                      l3859 320A                        l3795 23D4                        l3787 2320  
                      l3779 2280                        l3965 26E4                        l3973 2738  
                      l3957 26A2                        l3949 2654                        l2989 19A8  
                      l2997 33E2                        l3877 326A                        l3869 3238  
                      l3789 2352                        l3797 23F2                        l3895 3498  
                      l3975 2748                        l3967 26F6                        l3959 26A8  
                      l3991 06A8                        l3983 0680                        l3799 23FE  
                      l3897 34A4                        l3977 274E                        l3969 2710  
                      l3993 06CC                        l3985 0686                        l3899 34B2  
                      l3979 275E                        l3995 06D6                        l3987 0696  
                      l3997 06DE                        l3989 06A4                        l3999 06EE  
                      _FAN1 0096                        _FAN2 0094                        STR_1 0663  
                      STR_2 066C                        STR_3 0601                        STR_4 0619  
                      STR_5 067C                        STR_6 067C                        STR_7 067C  
                      STR_8 0631                        STR_9 0642                        u3000 1678  
                      u2120 359C                        u3001 1674                        u2121 3598  
                      u3010 17F2                        u3100 1966                        u3020 184C  
                      u2300 1100                        u3101 1962                        u3021 1848  
                      u2301 10FC                        u3110 19A0                        u3030 186C  
                      u2310 1110                        u3111 199C                        u3031 1868  
                      u3015 17E8                        u2311 110C                        u3120 2D1C  
                      u3200 2F82                        u3040 187E                        u2400 125C  
                      u2320 1152                        u3121 2D18                        u3201 2F7E  
                      u3041 187A                        u2321 114E                        u3130 2D36  
                      u3210 2FA0                        u2250 2DDE                        u3050 18AC  
                      u2410 1284                        u2330 1168                        u3131 2D32  
                      u3211 2F9C                        u2251 2DDA                        u3051 18A8  
                      u2411 1280                        u2331 1164                        u3140 2D5C  
                      u3220 2FB6                        u2260 2DEE                        u3300 292C  
                      u3060 18C2                        u2500 13BC                        u2420 12A2  
                      u2340 117A                        u4100 30C0                        u3141 2D58  
                      u3221 2FB2                        u2261 2DEA                        u3301 2928  
                      u3061 18BE                        u2501 13B8                        u2421 129E  
                      u2341 1176                        u4101 30BC                        u3150 2D7A  
                      u3230 2FDA                        u2270 2E14                        u3310 297C  
                      u3070 18D6                        u2510 13F2                        u2430 12C2  
                      u2350 118A                        u4110 3132                        u3151 2D76  
                      u3231 2FD6                        u2271 2E10                        u3311 2978  
                      u3071 18D2                        u2511 13EE                        u2431 12BE  
                      u2351 1186                        u4111 312E                        u4200 314E  
                      u3160 2D96                        u2280 2E46                        u3240 301A  
                      u3080 18F0                        u3320 3528                        u2600 14BC  
                      u2520 1402                        u2440 12D0                        u2360 11C6  
                      u5000 1D7A                        u4201 314A                        u3161 2D92  
                      u2281 2E42                        u3241 3016                        u3081 18EC  
                      u3321 3524                        u2601 14B8                        u2521 13FE  
                      u2441 12CC                        u2361 11C2                        u5001 1D76  
                      u4210 316A                        u3170 2DBC                        u3250 3058  
                      u3090 1938                        u2610 14D6                        u2530 142E  
                      u2450 12E0                        u2370 11D4                        u2290 10EE  
                      u3330 2792                        u5010 1DE0                        u4211 3166  
                      u3171 2DB8                        u3251 3054                        u3091 1934  
                      u2611 14D2                        u2531 142A                        u2451 12DC  
                      u2371 11D0                        u2291 10EA                        u3331 278E  
                      u5011 1DDC                        u4220 319E                        u3180 2F4E  
                      u3420 3558                        u2700 19D8                        u3260 308C  
                      u2620 1510                        u2540 143E                        u2460 1312  
                      u2380 1242                        u3340 27C6                        u5020 1E02  
                      u4300 2534                        u4125 365C                        u3181 2F4A  
                      u3421 3554                        u2701 19D4                        u3261 3088  
                      u2621 150C                        u2541 143A                        u2461 130E  
                      u2381 123E                        u5021 1DFE                        u4301 2530  
                      u4126 365E                        u4230 31CA                        u3190 2F68  
                      u2710 19EA                        u3270 28B0                        u2630 1522  
                      u2550 145A                        u2470 1320                        u2390 125A  
                      u3350 27F4                        u3430 29C6                        u3510 32EE  
                      u5030 1E40                        u4310 2552                        u3191 2F64  
                      u2711 19E6                        u3271 28AC                        u2631 151E  
                      u2551 1456                        u2471 131C                        u2391 1254  
                      u3351 27F0                        u3511 32EA                        u5031 1E3C  
                      u4311 254E                        u4240 31DA                        u2800 1BA2  
                      u2720 19FA                        u3280 28EE                        u2640 1532  
                      u2560 146A                        u2480 133E                        u3360 2808  
                      u3440 29E4                        u3600 21F0                        u3520 2084  
                      u5040 1E94                        u4320 2562                        u4400 2384  
                      u4241 31D6                        u2801 1B9E                        u2721 19F6  
                      u3281 28EA                        u2641 152E                        u2561 1466  
                      u2481 133A                        u3361 2804                        u3345 27BC  
                      u3441 29E0                        u3601 21EC                        u5041 1E90  
                      u4321 255E                        u4401 2380                        u2810 1BC6  
                      u2730 1A3E                        u3290 290C                        u2650 1552  
                      u2570 147C                        u2490 1376                        u3370 2830  
                      u3450 2A0C                        u3610 222C                        u3530 20B2  
                      u5050 1EB0                        u4330 2570                        u4410 23D4  
                      u4227 3194                        u2811 1BC2                        u2731 1A3A  
                      u3291 2908                        u2651 154E                        u2571 1478  
                      u2491 1372                        u3371 282C                        u3451 2A08  
                      u3435 29BC                        u3611 2228                        u3531 20AE  
                      u5051 1EAC                        u4331 256C                        u5107 31F6  
                      u4411 23D0                        u4500 32CE                        u2900 1CE6  
                      u2820 1BDC                        u2740 1A50                        u2660 1564  
                      u2580 1492                        u3380 2850                        u3460 2A36  
                      u3540 20D4                        u5060 1F52                        u4340 25AA  
                      u4260 242A                        u4237 31C0                        u4501 32CA  
                      u2901 1CE2                        u2821 1BD8                        u2741 1A4C  
                      u2661 1560                        u2581 148E                        u3381 284C  
                      u3461 2A32                        u3541 20D0                        u3525 207A  
                      u5061 1F4E                        u4341 25A6                        u4261 2426  
                      u5117 3210                        u2910 1D16                        u2830 1BFA  
                      u2750 1A60                        u2670 1580                        u2590 14A8  
                      u3390 2860                        u4510 3510                        u5070 348C  
                      u4350 25B8                        u4270 2438                        u5207 3660  
                      u2911 1D12                        u2831 1BF6                        u2751 1A5C  
                      u2671 157C                        u2591 14A4                        u3391 285C  
                      u4511 350C                        u5071 3488                        u4351 25B4  
                      u4271 2434                        u5127 3232                        u4600 26F6  
                      u2920 1D44                        u2840 1C1A                        u2760 1AA0  
                      u3480 2A70                        u3560 2140                        u4520 3384  
                      u4280 2494                        u4360 2280                        u5080 33B0  
                      u5217 2AF4                        u4601 26F2                        u2921 1D40  
                      u2841 1C16                        u2761 1A9C                        u3481 2A6A  
                      u3561 213C                        u4521 3380                        u4281 2490  
                      u5137 3240                        u4425 23FC                        u4361 227C  
                      u5081 33AC                        u2690 3648                        u4610 2710  
                      u4530 25DC                        u2850 1C2C                        u2770 1AE0  
                      u2930 15AE                        u3490 2A72                        u3570 2164  
                      u4290 24EA                        u4450 322A                        u4426 23FE  
                      u4370 22D0                        u5090 33C6                        u2691 3644  
                      u4611 270C                        u4531 25D6                        u2851 1C28  
                      u2771 1ADC                        u2931 15AA                        u3475 2A48  
                      u3555 20E8                        u4291 24E6                        u5147 3252  
                      u4451 3226                        u4435 2408                        u4371 22CC  
                      u5091 33C2                        u4620 272A                        u4540 25DE  
                      u2860 1C5A                        u2780 1B56                        u2940 15C0  
                      u3580 2180                        u3556 20F2                        u4700 07C0  
                      u4436 240A                        u4380 2302                        u4621 2726  
                      u2861 1C56                        u2781 1B52                        u2941 15BC  
                      u3581 217C                        u3557 2102                        u4701 07BC  
                      u5157 3264                        u4445 2414                        u4381 22FE  
                      u4630 2738                        u4550 25EE                        u2870 1C70  
                      u2790 1B78                        u2950 15D0                        u3590 21D4  
                      u4710 07D2                        u4446 2416                        u4390 2352  
                      u4631 2734                        u4551 25EA                        u2871 1C6C  
                      u2791 1B74                        u2951 15CC                        u3575 215A  
                      u4711 07CE                        u5167 3272                        u4391 234E  
                      u4480 34D6                        u4640 2748                        u4560 25FE  
                      u2880 1C84                        u2960 1610                        u4800 0A60  
                      u4720 0848                        u4481 34D2                        u4641 2744  
                      u4561 25FA                        u2881 1C80                        u2961 160C  
                      u4801 0A5C                        u4721 0844                        u5177 3584  
                      u4490 3288                        u4570 262A                        u2890 1C9E  
                      u2970 1622                        u4810 0A8A                        u4730 08D4  
                      u4650 06A4                        u4491 3284                        u4571 2626  
                      u2891 1C9A                        u2971 161E                        u3595 21CA  
                      u4811 0A86                        u4731 08D0                        u4651 06A0  
                      u5187 2C8E                        u4580 2640                        u2980 1632  
                      u4900 0E70                        u4820 0BD2                        u4740 0906  
                      u4660 06EE                        u4581 263C                        u2981 162E  
                      u4901 0E6C                        u4821 0BCE                        u4741 0902  
                      u4661 06EA                        u5197 2EE4                        u4590 26E4  
                      u2990 1668                        u4910 0EC4                        u4830 0C38  
                      u4750 0944                        u4670 06FE                        u4591 26E0  
                      u2991 1664                        u4911 0EC0                        u4831 0C34  
                      u4751 0940                        u4671 06FA                        u4920 0F96  
                      u4840 0C80                        u4760 09D0                        u4680 073C  
                      u4921 0F92                        u4841 0C7C                        u4761 09CC  
                      u4681 0738                        u4930 0FB2                        u4850 0C90  
                      u4770 0A06                        u4690 074E                        u4931 0FAE  
                      u4851 0C8C                        u4771 0A02                        u4691 074A  
                      _RES1 0092                        u4940 1018                        u4860 0D2A  
                      u4780 0A1C                        u4941 1012                        u4861 0D26  
                      u4781 0A18                        u4950 101A                        u4870 0D78  
                      u4790 0A52                        u4871 0D74                        u4791 0A4E  
                      u4960 102C                        u4880 0E26                        u4961 1028  
                      u4881 0E22                        u4970 106A                        u4890 0E62  
                      u4971 1066                        u4891 0E5E                        u4980 1088  
                      u4981 1084                        u4990 1098                        u4991 1094  
                      abs@a 0007                        _dbuf 0100                        _labs 32E0  
                      _main 3386                        _dtoa 25CC                        _prec 007B  
                      pad@i 0015                        pad@p 0012                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9               ___fpclassifyf 2986  
                      prodh 0FF4                        prodl 0FF3                        start 0000  
           ___fldiv@new_exp 0039                 _string_FAN1 00B8                 _string_FAN2 00B0  
               _string_RES1 00A8                ___param_bank 0000                 _string_temp 0098  
                     ??_abs 0009                       ??_pad 0014               ___fltol@sign1 0009  
                     ?_labs 0001             __end_of___fladd 1594                       ?_main 0001  
                     ?_dtoa 0017             __end_of___fldiv 1D58             __end_of___awdiv 2DCE  
           __end_of___flneg 354A                       STR_10 0653                       STR_11 0609  
                     STR_12 0609                       STR_13 0674                       STR_16 0678  
           __end_of___awmod 2FEC             __end_of___flmul 19BE             __end_of___flsub 3418  
           __end_of___fltol 2882             ___awdiv@divisor 0003             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 005E                       _PORTB 0F81                       _PORTC 0F82  
                     _PORTD 0F83                       _TRISB 0F93                       _TRISC 0F94  
                     _TRISD 0F95             __end_of_lcd_cmd 2B68                       _flags 007F  
       read_prec_or_width@c 0009         read_prec_or_width@n 000A                       _fputc 2DCE  
                     _fputs 3498                       labs@a 0001                       pad@fp 000F  
                     _width 0090                       _putch 369A                       dtoa@d 0018  
                     dtoa@i 0021                       dtoa@p 001C                       dtoa@s 0020  
                     dtoa@w 001E             __end_of_set_bit 3652                       tablat 0FF5  
                     status 0FD8             __end_of_sprintf 3458              ?___fpclassifyf 0001  
              lcd_write@end 000A                lcd_write@col 0007                lcd_write@lin 000B  
              lcd_write@str 0008             __initialization 35B0                __end_of_labs 3336  
              __end_of_main 33D2                __end_of_dtoa 277C             ??_lcd_send_byte 0006  
                    ??_labs 0005                      ??_main 0077                      ??_dtoa 001A  
             __activetblptr 0002  __end_of_read_prec_or_width 313C           __end_of_LCD_tela1 2F3C  
         __end_of_LCD_tela2 2D0A                      _ADCON0 0FC2                      _ADCON1 0FC1  
                    _ADCON2 0FC0                      ?_fputc 0001                      ?_fputs 0009  
                    _ADRESH 0FC4                      _ADRESL 0FC3            ___awdiv@dividend 0001  
                    ?_putch 0001                      _OSCCON 0FD3               vfpfcnvrt@done 0061  
          __end_of___xxtofl 25CC            __end_of_conv_AN3 35B0                vfprintf@cfmt 0068  
          __end_of_lcd_init 327A                      ___flge 2882                      ___fleq 2FEC  
                 ??___fladd 0009                      ___wmul 360C                   ??___fldiv 0030  
                 ??___awdiv 0005                   ??___flneg 0005                   ??___awmod 0005  
                 ??___flmul 0017                   ??___flsub 0030                   ??___fltol 0005  
                    _efgtoa 0680                      _floorf 203C                      _memcpy 3336  
      read_prec_or_width@ap 0008                      clear_0 35B6                      clear_1 35C2  
                    clear_2 35CE            ___awdiv@quotient 0007             ___awmod@divisor 0003  
                    isa$std 0001             ___awmod@counter 0005                      pad@buf 0010  
                 ??_lcd_cmd 0003                      dtoa@fp 0017                      _strcpy 34D8  
                    fputc@c 0001                      fputs@c 000C                      fputs@i 000D  
                    fputs@s 0009             ___fpclassifyf@e 0009             ___fpclassifyf@u 000B  
           ___fpclassifyf@x 0001                __mediumconst 0000                   ??_set_bit 0002  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                    putch@c 0001            __end_of_vfprintf 3498                   ??_sprintf 0069  
                ___flge@ff1 0028                  ___flge@ff2 002C             ??___fpclassifyf 0005  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0080  
   __end_of__initialization 35D4                  ___flneg@f1 0001               ___rparam_used 0001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001               __end_of_fputc 2E88  
             __end_of_fputs 34D8               __end_of_putch 369C                     ??_fputc 0004  
                   ??_fputs 000C                     ??_putch 0001                  __pbssBANK0 0080  
                __pbssBANK1 0100                 _VdigADC_AN3 007D                     ?___flge 0028  
                   ?___fleq 0001                     ?___wmul 0001                     ?_efgtoa 0055  
                   ?_floorf 0041                     ?_memcpy 0001                     ?_strcpy 0001  
                _config_ADC 3682                   ?___xxtofl 0001          lcd_send_byte@level 0006  
                   _OSCTUNE 0F9B           ??_logica_controle 0034                   ?_conv_AN3 0001  
                 ?_lcd_init 0001                     __Hparam 0000                     __Lparam 0000  
         __end_of_lcd_clear 360C           __end_of_config_IO 3682           __end_of_conv_TEMP 2C3C  
                   ___fladd 10D4                     ___fldiv 19BE                     ___awdiv 2D0A  
                   ___flneg 3512                     ___awmod 2F3C                     ___flmul 1594  
                   ___flsub 33D2                     ___fltol 277C           __end_of_lcd_write 31DC  
                 ?_vfprintf 00EC                 set_bit@comp 0001                __psmallconst 0600  
                   __pcinit 35B0                     __ramtop 0600                     __ptext0 3386  
                   __ptext1 224E                     __ptext2 31DC                     __ptext3 2B68  
                   __ptext4 2418                     __ptext5 357E                     __ptext6 3670  
                   __ptext7 3690                     __ptext8 3682                     __ptext9 2C3C  
                   _lcd_cmd 2A84       read_prec_or_width@fmt 0007                  ??___xxtofl 0005  
          ___awmod@dividend 0001                     _percent 0088                     _set_bit 3632  
                   efgtoa@c 005A                     efgtoa@d 00CB                     efgtoa@e 00CF  
                   efgtoa@f 0056                     efgtoa@g 00E2                     efgtoa@h 00D7  
                   efgtoa@i 00DF                     efgtoa@l 00DB                     efgtoa@m 00CD  
                   efgtoa@n 00E6                     efgtoa@p 00C2                     efgtoa@t 00C4  
                   efgtoa@u 00E8                     efgtoa@w 00D5                  ??_conv_AN3 0001  
                   _sprintf 3418                  ??_lcd_init 0005        end_of_initialization 35D4  
                   floorf@e 004F                     floorf@m 004B                     floorf@u 0051  
                   floorf@x 0041                   _LCD_tela1 2E88                   _LCD_tela2 2C3C  
                   memcpy@d 0008                     memcpy@n 0005                     memcpy@s 000A  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000B  
        _read_prec_or_width 3096           __end_of_vfpfcnvrt 203C                  efgtoa@mode 00C9  
                efgtoa@sign 00E1                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0062                  ??_vfprintf 0068       __end_of_lcd_send_byte 3670  
                   strcpy@d 0005                   _PORTBbits 0F81                   _PORTCbits 0F82  
                 _PORTDbits 0F83                   _PORTEbits 0F84                 ___fladd@grs 0010  
               ?_config_ADC 0001               ___xxtofl@sign 0009                   _TRISEbits 0F96  
                lcd_cmd@cmd 0004        ??_read_prec_or_width 0009                 ___fldiv@grs 003B  
               ___fldiv@rem 0034                  ?_LCD_tela1 0001                  ?_LCD_tela2 0001  
               ___flmul@grs 001C               ??_config_FOSC 0001              __end_of___flge 2986  
            __end_of___fleq 3096                 vfpfcnvrt@ap 005F                 vfpfcnvrt@cp 0067  
               vfpfcnvrt@fp 005D              __end_of___wmul 3632              __end_of_efgtoa 10D4  
            __end_of_floorf 224E              __end_of_memcpy 3386                  floorf@F521 0080  
            __end_of_strcpy 3512         start_initialization 35B0                 __end_of_abs 357E  
               __end_of_pad 32E0       __end_of___fpclassifyf 2A84              _string_percent 0150  
               vfprintf@fmt 00ED                    ??___flge 0030                    ??___fleq 0009  
       __end_of_config_FOSC 369A                    ??___wmul 0005                    ??_efgtoa 005B  
                  ??_floorf 0045                    ??_memcpy 0007             _logica_controle 224E  
                  ??_strcpy 0004                   ___fladd@a 0005                   ___fladd@b 0001  
                 ___fldiv@a 002C                   ___fldiv@b 0028                   ___flmul@a 0013  
                 ___flmul@b 000F                 __pbssCOMRAM 0077                   ___flsub@a 002C  
                 ___flsub@b 0028               __pcstackBANK0 00C0                 ??_LCD_tela1 0076  
               ??_LCD_tela2 0076                 _efgtoa$1155 00C6                   _dtoa$1124 001A  
                  ?___fladd 0001                    ?___fldiv 0028                    ?___awdiv 0001  
                  ?___flneg 0001                    ?___awmod 0001                    ?___flmul 000F  
                  ?___flsub 0028                    ?___fltol 0001                   _lcd_clear 35DE  
                 _config_IO 3670           lcd_send_byte@data 0005                   _conv_TEMP 2B68  
                  ?_lcd_cmd 0001                   _lcd_write 313C                 __smallconst 0600  
                  ?_set_bit 0001                  set_bit@cmd 0002                    ?_sprintf 00EF  
            ___wmul@product 0005                 _config_FOSC 3690     __end_of_logica_controle 2418  
                ?_lcd_clear 0001                   _vfpfcnvrt 1D58                  ?_config_IO 0001  
                ?_conv_TEMP 0001                  _ADCON0bits 0FC2                  ?_lcd_write 0007  
         ___wmul@multiplier 0001                   lcd_init@i 0006                ??_config_ADC 0001  
                vfpfcnvrt@c 0066                    __Hrparam 0000                   memcpy@tmp 0007  
                vfprintf@ap 00EE                    __Lrparam 0000                  vfprintf@fp 00EC  
        __end_of_config_ADC 3690                  ?_vfpfcnvrt 005D          ___fpclassifyf@F465 0084  
                sprintf@fmt 00F1                    ___xxtofl 2418               _sensor_tensao 008C  
                  __ptext10 2E88                    __ptext11 3418                    __ptext20 203C  
                  __ptext12 3458                    __ptext21 2986                    __ptext13 1D58  
                  __ptext30 25CC                    __ptext22 277C                    __ptext14 3096  
                  __ptext31 327A                    __ptext23 33D2                    __ptext15 360C  
                  __ptext40 3652                    __ptext32 3498                    __ptext24 10D4  
                  __ptext16 0680                    __ptext41 2A84                    __ptext33 2DCE  
                  __ptext25 3512                    __ptext17 34D8                    __ptext42 3632  
                  __ptext34 369A                    __ptext26 1594                    __ptext18 3336  
                  __ptext35 354A                    __ptext27 2882                    __ptext19 32E0  
                  __ptext36 2F3C                    __ptext28 2FEC                    __ptext37 2D0A  
                  __ptext29 19BE                    __ptext38 35DE                    __ptext39 313C  
                  _conv_AN3 357E                    _lcd_init 31DC                  strcpy@dest 0001  
                  efgtoa@fp 0055                    efgtoa@ne 00C0                    efgtoa@pp 00C8  
                  efgtoa@ou 00D1            ?_logica_controle 0001                    isa$xinst 0000  
                  _vfprintf 3458                 ??_lcd_clear 000C                 ??_config_IO 0001  
               ??_conv_TEMP 0041                 ??_lcd_write 000A                    memcpy@d1 0001  
                  memcpy@s1 0003                   sprintf@ap 0069                   strcpy@src 0003  
               efgtoa@nmode 00CA                 ??_vfpfcnvrt 0060               _lcd_send_byte 3652  
                  sprintf@f 006A                    sprintf@s 00EF                 _sensor_temp 0077  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
              ?_config_FOSC 0001  
